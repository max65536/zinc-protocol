import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BridgeGovernance, BridgeGovernanceInterface } from "../BridgeGovernance";
declare type BridgeGovernanceConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BridgeGovernance__factory extends ContractFactory {
    constructor(...args: BridgeGovernanceConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<BridgeGovernance>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): BridgeGovernance;
    connect(signer: Signer): BridgeGovernance__factory;
    static readonly bytecode = "0x6080806040523461001657611517908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301f5325514610177578063178149e7146101725780631a2be4da1461016d5780631ff1e2861461016857806325394645146101635780632c3c02a41461015e5780632f3a3d5d1461015957806364d42b1714610154578063739fc8d11461014f57806384acd1bb1461014a5780639a8a059214610145578063a5799f9314610140578063aa4efa5b1461013b578063ad5c464814610136578063ad66a5f114610131578063b172b2221461012c578063b96c7e4d14610127578063cb4cfea814610122578063d60b347f1461011d578063e039f22414610118578063fbe3c2cd146101135763fbeeacd91461010e57600080fd5b6108c8565b6108a3565b610882565b61084e565b610808565b6107d9565b6107bb565b610791565b610768565b610737565b610634565b610612565b6105e9565b6105c6565b6105a8565b61057f565b610548565b610464565b610415565b6103d5565b6102e8565b610296565b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b038211176101ad57604052565b61017c565b604081019081106001600160401b038211176101ad57604052565b90601f801991011681019081106001600160401b038211176101ad57604052565b6040519061016082018281106001600160401b038211176101ad57604052565b6001600160401b0381116101ad57601f01601f191660200190565b6020600319820112610291576004356001600160401b0381116102915781602382011215610291578060040135906102608261020e565b9261026e60405194856101cd565b828452602483830101116102915781600092602460209301838601378301015290565b600080fd5b346102915760a06102ae6102a936610229565b611179565b6080604051918051835260ff602082015116602084015261ffff806040830151166040850152606082015116606084015201516080820152f35b34610291576102f636610229565b600c5446146103815761036d606061034b60e061032161031861037f96610e4f565b90929192610956565b61034461014082015160005260056020526040600020600160ff19825416179055565b015161130d565b6103646040820161035e46825114610a4e565b516113b3565b015161ffff1690565b61ffff1661ffff196002541617600255565b005b60405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b6044820152606490fd5b6020906003190112610291576004356001600160a01b03811681036102915790565b34610291576001600160a01b036103eb366103b3565b166000526009602052602060ff604060002054166040519015158152f35b61ffff81160361029157565b346102915760403660031901126102915761ffff60043561043581610409565b1660005260086020526040600020602435600052602052602060018060a01b0360406000205416604051908152f35b346102915761047236610229565b600c5446036105145761050f61050360606104c160e061049761031861037f97610e4f565b6104ba61014082015160005260056020526040600020600160ff19825416179055565b0151611257565b6104f56104d3604083015161ffff1690565b61ffff6104ed6104e660025461ffff1690565b61ffff1690565b911614610a11565b01516001600160a01b031690565b6001600160a01b031690565b610f98565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b6044820152606490fd5b34610291576020366003190112610291576020610575600435600052600560205260ff6040600020541690565b6040519015158152f35b34610291576000366003190112610291576001546040516001600160a01b039091168152602090f35b34610291576000366003190112610291576020600c54604051908152f35b3461029157600036600319011261029157602060025460ff60405191831c168152f35b34610291576000366003190112610291576000546040516001600160a01b039091168152602090f35b3461029157600036600319011261029157602061ffff60025416604051908152f35b346102915761037f61067f60e061065561031861065036610229565b610e4f565b61067861014082015160005260056020526040600020600160ff19825416179055565b0151611179565b6106bd610691604083015161ffff1690565b61ffff6106a46104e660025461ffff1690565b9116908114908161071c575b8115610713575b50610986565b60806106fb606083016106f36106ed6106d8835161ffff1690565b61ffff16600052600b60205260406000205490565b156109c5565b5161ffff1690565b9101519061ffff16600052600b602052604060002055565b905015386106b7565b905061073161072d600c5446141590565b1590565b906106b0565b34610291576020366003190112610291576004356000526006602052602060ff604060002054166040519015158152f35b34610291576000366003190112610291576004546040516001600160a01b039091168152602090f35b346102915760203660031901126102915760206107b36004356106d881610409565b604051908152f35b34610291576000366003190112610291576020600354604051908152f35b34610291576001600160a01b036107ef366103b3565b16600052600a6020526020604060002054604051908152f35b3461029157608061082061081b36610229565b61130d565b61ffff6060604051928051845260ff6020820151166020850152604081015160408501520151166060820152f35b34610291576001600160a01b03610864366103b3565b166000526007602052602060ff604060002054166040519015158152f35b34610291576000366003190112610291576020600c54604051904614158152f35b3461029157600036600319011261029157602061ffff60025460101c16604051908152f35b346102915760806108e06108db36610229565b611257565b6060604051918051835260ff602082015116602084015261ffff604082015116604084015201516060820152f35b60005b8381106109215750506000910152565b8181015183820152602001610911565b9060209161094a8151809281855285808601910161090e565b601f01601f1916010190565b1561095e5750565b60405162461bcd60e51b815260206004820152908190610982906024830190610931565b0390fd5b1561098d57565b60405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b6044820152606490fd5b156109cc57565b60405162461bcd60e51b815260206004820152601860248201527f636861696e20616c7265616479207265676973746572656400000000000000006044820152606490fd5b15610a1857565b60405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b6044820152606490fd5b15610a5557565b60405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b6044820152606490fd5b6040519061016082018281106001600160401b038211176101ad57604052816101406000918281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201528261010082015260606101208201520152565b519060ff8216820361029157565b519063ffffffff8216820361029157565b5190610b1e82610409565b565b51906001600160401b038216820361029157565b81601f82011215610291578051610b4a8161020e565b92610b5860405194856101cd565b8184526020828401011161029157610b76916020808501910161090e565b90565b9080601f83011215610291578151916001600160401b0383116101ad57604091825193602091610bae838360051b01876101cd565b818652828087019260071b85010193818511610291578301915b848310610bd85750505050505090565b60808383031261029157836080918751610bf181610192565b855181528286015183820152610c08898701610af4565b898201526060610c19818801610af4565b90820152815201920191610bc8565b5190811515820361029157565b9091606082840312610291578151916001600160401b03928381116102915781016101608186031261029157610c696101ee565b90610c7381610af4565b8252610c8160208201610b02565b6020830152610c9260408201610b02565b6040830152610ca360608201610b13565b606083015260808101516080830152610cbe60a08201610b20565b60a0830152610ccf60c08201610af4565b60c083015260e08101518581116102915786610cec918301610b34565b60e0830152610100610cff818301610b02565b90830152610120808201518681116102915787610d1d918401610b79565b90830152610140809101519082015293610d3960208301610c28565b93604083015190811161029157610b769201610b34565b906020610b76928181520190610931565b6040513d6000823e3d90fd5b60405190602082018281106001600160401b038211176101ad5760405260008252565b60405190610d9d826101b2565b60168252753bb937b7339033b7bb32b93730b731b29031b430b4b760511b6020830152565b60405190610dcf826101b2565b601982527f77726f6e6720676f7665726e616e636520636f6e7472616374000000000000006020830152565b60405190606082018281106001600160401b038211176101ad576040526022825261195960f21b6040837f676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d60208201520152565b610e9390610e5b610a8e565b506000805490918291610e7890610503906001600160a01b031681565b604051808096819463607ec5ef60e11b835260048301610d50565b03915afa918215610f6357819282918391610f3a575b508115610f32575050606082015161ffff1661ffff610ed26104e660025461ffff9060101c1690565b911603610f2857608082015160035403610f1e57610f03610140830151600052600560205260ff6040600020541690565b610f14575090600190610b76610d6d565b9091610b76610dfb565b9091610b76610dc2565b9091610b76610d90565b929390929150565b915050610f5a9192503d8084833e610f5281836101cd565b810190610c35565b91929138610ea9565b610d61565b3d15610f93573d90610f798261020e565b91610f8760405193846101cd565b82523d6000602084013e565b606090565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc908154813b1561106d577f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a499060018060a01b039081841694856bffffffffffffffffffffffff60a01b8316179055611067604051600080968192897fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a263204a7f0760e21b602082019081526004825290611055816101b2565b51915af4611061610f68565b90610956565b169180a3565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b156110cf57565b60405162461bcd60e51b815260206004820152600c60248201526b77726f6e67206d6f64756c6560a01b6044820152606490fd5b1561110a57565b60405162461bcd60e51b815260206004820152600c60248201526b3bb937b7339030b1ba34b7b760a11b6044820152606490fd5b1561114557565b60405162461bcd60e51b815260206004820152600c60248201526b0eee4dedcce40d8cadccee8d60a31b6044820152606490fd5b906040519160a083018381106001600160401b038211176101ad576040526000835260208301600081526040840160008152606085019060008252608086019260008452866111c786611474565b8091526a546f6b656e427269646765146111e0906110c8565b6111e9856113f9565b60ff16908190526111fc90600114611103565b61120584611444565b61ffff16905261121483611464565b61ffff169052611223826114d1565b905251604514610b1e9061113e565b6040519061123f82610192565b60006060838281528260208201528260408201520152565b90611260611232565b916112826a546f6b656e42726964676561127983611474565b808652146110c8565b61129f600260ff611292846113f9565b1680602087015214611103565b60238151106112d15760438161ffff6023610b1e9401511660408601526112c5816114c1565b6060860152511461113e565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b90611316611232565b9161132f6a546f6b656e42726964676561127983611474565b61133f600360ff611292846113f9565b6041815110611376576043816041610b1e930151604086015261136f61136482611454565b61ffff166060870152565b511461113e565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b4681036113bf57600c55565b60405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606490fd5b6021815110611409576021015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b60238151106112d1576023015190565b60438151106112d1576043015190565b60258151106112d1576025015190565b6020815110611484576020015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b6043815110611484576043015190565b604581511061148457604501519056fea264697066735822122024d1daa54269b404f4d3ae7332736dbe6db0cee277b969860e95e4fc4078039a64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldContract";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newContract";
            readonly type: "address";
        }];
        readonly name: "ContractUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "WETH";
        readonly outputs: readonly [{
            readonly internalType: "contract IWETH";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId_";
            readonly type: "uint16";
        }];
        readonly name: "bridgeContracts";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "evmChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "finality";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "governanceActionIsConsumed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isFork";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "isTransferCompleted";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "isWrappedAsset";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "outstandingBridged";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedRecoverChainId";
            readonly type: "bytes";
        }];
        readonly name: "parseRecoverChainId";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "evmChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint16";
                readonly name: "newChainId";
                readonly type: "uint16";
            }];
            readonly internalType: "struct BridgeStructs.RecoverChainId";
            readonly name: "rci";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseRegisterChain";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainID";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct BridgeStructs.RegisterChain";
            readonly name: "chain";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseUpgrade";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "newContract";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct BridgeStructs.UpgradeContract";
            readonly name: "chain";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVM";
            readonly type: "bytes";
        }];
        readonly name: "registerChain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVM";
            readonly type: "bytes";
        }];
        readonly name: "submitRecoverChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenImplementation";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVM";
            readonly type: "bytes";
        }];
        readonly name: "upgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wormhole";
        readonly outputs: readonly [{
            readonly internalType: "contract IWormhole";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "tokenChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "tokenAddress";
            readonly type: "bytes32";
        }];
        readonly name: "wrappedAsset";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): BridgeGovernanceInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BridgeGovernance;
}
export {};
