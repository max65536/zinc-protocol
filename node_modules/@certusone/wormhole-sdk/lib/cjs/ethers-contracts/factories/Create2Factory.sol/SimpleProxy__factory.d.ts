import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SimpleProxy, SimpleProxyInterface } from "../../Create2Factory.sol/SimpleProxy";
declare type SimpleProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SimpleProxy__factory extends ContractFactory {
    constructor(...args: SimpleProxyConstructorParams);
    deploy(impl: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SimpleProxy>;
    getDeployTransaction(impl: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SimpleProxy;
    connect(signer: Signer): SimpleProxy__factory;
    static readonly bytecode = "0x608060405234610141576104086020813803918261001c81610180565b93849283398101031261014157516001600160a01b038116908181036101415761004461015c565b9160008352813b156100e6577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906100de575b6100c4575b60405160d190816103378239f35b6100d6916100d06101c0565b91610219565b5038806100b6565b5060006100b1565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b0381118382101761017b57604052565b610146565b6040519190601f01601f191682016001600160401b0381118382101761017b57604052565b6001600160401b03811161017b57601f01601f191660200190565b60405190606082016001600160401b0381118382101761017b5760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b156102675760008161025c9460208394519201905af43d1561025f573d9061024c610247836101a5565b610180565b9182523d6000602084013e6102bb565b90565b6060906102bb565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156102c7575090565b8151156102d75750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061031d575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506102fa56fe608060405236156054577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f35b3d90fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f3fea26469706673582212203c1e215bfe9660349ec8f0a963e6b23d26872f283a8af799888ef1d48f593ec664736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly stateMutability: "payable";
        readonly type: "fallback";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): SimpleProxyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SimpleProxy;
}
export {};
