import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DummyContract, DummyContractInterface } from "../../ForwardTester.sol/DummyContract";
declare type DummyContractConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DummyContract__factory extends ContractFactory {
    constructor(...args: DummyContractConstructorParams);
    deploy(_wormholeRelayer: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DummyContract>;
    getDeployTransaction(_wormholeRelayer: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DummyContract;
    connect(signer: Signer): DummyContract__factory;
    static readonly bytecode = "0x60803461007457601f61029138819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161020190816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608060048036101561001057600080fd5b600091823560e01c63c9f594f81461002757600080fd5b60a03660031901126101c75781359161ffff83168093036101c3576024916001600160a01b0390833582811691908290036101bf576084359067ffffffffffffffff938483116101bb57366023840112156101bb5782860135908582116101a957601f1993601f83018516603f018516840187811185821017610197576040528284528a90368482018b011161019357838a94602095869301838801378501015289541693843b1561018f5797929091899492604051998a95634533e5ff60e01b8752898701528986015260a060448601528151918260a4870152865b83811061017557505050838092601f838860c4809686010152606435606485015260443560848501520116810103019134905af1801561016a57610146578480f35b8311610159575050604052388080808480f35b634e487b7160e01b84526041905282fd5b6040513d87823e3d90fd5b8181018301518c820160c401528c97508b96508201610104565b8980fd5b5080fd5b634e487b7160e01b8c5260418952898cfd5b634e487b7160e01b8a5260418752878afd5b8880fd5b8680fd5b8380fd5b8280fdfea2646970667358221220439568d3a7b72150167bfe2999efb4ad9e0e6f0eaec35e6c0564f368b7ba72e364736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_wormholeRelayer";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "targetAddress";
            readonly type: "address";
        }, {
            readonly internalType: "Gas";
            readonly name: "gasLimit";
            readonly type: "uint256";
        }, {
            readonly internalType: "TargetNative";
            readonly name: "receiverValue";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly name: "forward";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): DummyContractInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DummyContract;
}
export {};
