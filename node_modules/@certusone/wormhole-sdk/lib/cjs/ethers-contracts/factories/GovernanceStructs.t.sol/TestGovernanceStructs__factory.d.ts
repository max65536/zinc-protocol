import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TestGovernanceStructs, TestGovernanceStructsInterface } from "../../GovernanceStructs.t.sol/TestGovernanceStructs";
declare type TestGovernanceStructsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestGovernanceStructs__factory extends ContractFactory {
    constructor(...args: TestGovernanceStructsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TestGovernanceStructs>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TestGovernanceStructs;
    connect(signer: Signer): TestGovernanceStructs__factory;
    static readonly bytecode = "0x6080806040523461002d57600160ff1981816000541617600055600454161760045561457590816100338239f35b600080fdfe60808060405260048036101561001457600080fd5b600091823560e01c9081630426fc22146120f9575080630a9254e4146120835780630f12a0e214611f795780631ea5127214611f455780631ed7831c14611ec657806320c0362214611e065780632e500dc314611d465780633ac5f82014611c385780633d6eb16314611c1d5780633e5e3c2314611b9e5780633f7286f414611b1f5780633fa0e73914611a085780634d415de7146119485780634e30e2be146119305780634f97a72a146118705780636105b6641461185857806366d9a9a0146116db5780637cc4c466146116145780637d052ede146115cc5780638163c4b2146115b157806385226c811461148d5780638dfa0a6614611472578063916a17c61461121757806392d812d0146111bb5780639c436a1f146110fb578063a06c6b05146110e0578063a2c5eaaa14610f09578063b38ba56214610e49578063b5508aa914610d11578063ba414fa614610cec578063c5615b4a14610c1d578063cf9e12a014610afd578063d6a2ec7614610ad4578063d9f19d5a14610907578063df2ff466146107e6578063e20c9f7114610757578063f0935e461461073f578063f179fdc414610721578063f864deb0146106c6578063f89d71ef14610415578063fa7626d4146103f05763fedb0e41146101f057600080fd5b346103c95760803660031901126103c957610209612374565b90826064356001600160401b0381116103c95761022990369084016122e9565b9283511515906000805160206144e083398151915291823b156103ec5760405190632631f2b160e11b8252858201528381602481865afa9081156103e15784916103cd575b505060636102c89160405196879187356020840152600360f81b604084015261ffff60f01b9060f01b16604183015260443560438301526102b88151809260208686019101612406565b81010360438101875201856122ad565b6102d2845161390a565b803b156103c95781604051809263f28dceb360e01b8252818381610322898201606090602081526015602082015274696e76616c6964205365744d65737361676546656560581b60408201520190565b03925af180156103a6576103b1575b505061036991608091602060018060a01b03601b5416916040519586948593849363515f324760e01b85528401526024830190612429565b03915afa80156103a65761037b575080f35b61039b9060803d811161039f575b61039381836122ad565b810190612a76565b5080f35b503d610389565b6040513d84823e3d90fd5b6103ba90612218565b6103c5578238610331565b8280fd5b5080fd5b6103d690612218565b6103c557823861026e565b6040513d86823e3d90fd5b8380fd5b823461041257806003193601126104125760ff60209154166040519015158152f35b80fd5b50346103c95760a03660031901126103c95761042f612374565b6084356001600160401b0381116103ec5761044d90369084016122e9565b9083825115156000805160206144e083398151915290813b156103c55760405190632631f2b160e11b8252868201528281602481855afa9081156106bb5783916106a7575b50506104f360836040518096602096893588840152600160fa1b604084015261ffff60f01b9060f01b166041830152604435604383015260643560638301526104e381518092898686019101612406565b81010360638101875201856122ad565b835160638111156105e8575b50803b156103c95781604051809263f28dceb360e01b825281838161054f8b8201606090602081526014602082015273696e76616c6964205472616e736665724665657360601b60408201520190565b03925af180156103a6576105d0575b5050601b5460405162c6796760e21b81529384019190915260a09183916001600160a01b03169082908190610597906024830190612429565b03915afa80156103a6576105a9575080f35b61039b9060a03d81116105c9575b6105c181836122ad565b810190612de0565b503d6105b7565b6105dc90939293612218565b6103ec5790833861055e565b6080906000805160206144c0833981519152826040518781526021888201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e746040820152605d60f81b6060820152a160405190604082526009604083015268202056616c7565206160b81b606083015285820152600080516020614520833981519152918291a1608060405160408152600960408201526810102b30b63ab2903160b91b6060820152606386820152a16106a1613619565b386104ff565b6106b090612218565b6103c9578138610492565b6040513d85823e3d90fd5b50346103c95760603660031901126103c957359063ffffffff8216809203610412576020610719836040519083820190815260243560408301526040825261070d82612277565b604435915190206134c8565b604051908152f35b82346104125761073c61073336612385565b92919091613350565b80f35b82346104125761073c610751366123b8565b91612ac0565b8234610412578060031936011261041257604051600c80548083529083526020808301937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c792915b8282106107c6576107c2856107b6818903826122ad565b60405191829182612330565b0390f35b83546001600160a01b03168652948501946001938401939091019061079f565b50346103c95760203660031901126103c95780356001600160401b0381116103c55761081590369083016122e9565b908260438351106000805160206144e083398151915290813b156103c55760405190632631f2b160e11b8252848201528281602481855afa9081156106bb5783916108f3575b50508351602010806108c9575b50803b156103c9578180918460405180948193633d21120560e21b83525af180156103a6576103b157505061036991608091602060018060a01b03601b5416916040519586948593849363515f324760e01b85528401526024830190612429565b909150156108e05783906003604085015338610868565b634e487b7160e01b845260328252602484fd5b6108fc90612218565b6103c957813861085b565b50346103c95760803660031901126103c957610921612374565b90826064356001600160401b0381116103c95761094190369084016122e9565b9283511515906000805160206144e083398151915291823b156103ec5760405190632631f2b160e11b8252858201528381602481865afa9081156103e1578491610ac0575b505060636109d09160405196879187356020840152600160f81b604084015261ffff60f01b9060f01b16604183015260443560438301526102b88151809260208686019101612406565b6109da845161390a565b803b156103c95781604051809263f28dceb360e01b8252818381610a2c898201606090602081526017602082015276696e76616c696420436f6e74726163745570677261646560481b60408201520190565b03925af180156103a657610aac575b5050610a7391608091602060018060a01b03601b541691604051958694859384936327ee307d60e11b85528401526024830190612429565b03915afa80156103a657610a85575080f35b61039b9060803d8111610aa5575b610a9d81836122ad565b810190612614565b503d610a93565b610ab590612218565b6103c5578238610a3b565b610ac990612218565b6103c5578238610986565b823461041257806003193601126104125760206040516000805160206144e08339815191528152f35b50346103c95760203660031901126103c95780356001600160401b0381116103c557610b2c90369083016122e9565b908260638351106000805160206144e083398151915290813b156103c55760405190632631f2b160e11b8252848201528281602481855afa9081156106bb578391610c09575b5050835160201080610bf3575b50803b156103c9578180918460405180948193633d21120560e21b83525af180156103a657610bdf575b50506105979160a0916020600180851b03601b5416916040519586948593849362c6796760e21b85528401526024830190612429565b610be890612218565b6103c5578238610ba9565b909150156108e057839082604085015338610b7f565b610c1290612218565b6103c9578138610b72565b50346103c95781610c2d366123dd565b601b549395909491936000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce1578591610ccd575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a657610cb5575b505061073c93612e46565b610cbe90612218565b610cc9578438610caa565b8480fd5b610cd690612218565b6103ec578338610c7a565b6040513d87823e3d90fd5b82346104125780600319360112610412576020610d0761351b565b6040519015158152f35b509034610412578060031936011261041257601054610d2f816139cd565b91610d3d60405193846122ad565b818352601081528060207f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6728186015b858410610d8157604051806107c28982612595565b604051859183549160019280841c908481168015610e3f575b8883108114610e2b5782845288949392918115610e0f5750600114610dd7575b50610dc98160019603826122ad565b815201920193019290610d6c565b868a52838a20955089905b808210610df85750810183019450610dc9610dba565b865483830186015295850195889490910190610de2565b60ff19168584015250151560051b810183019450610dc9610dba565b50634e487b7160e01b8a5260228d5260248afd5b91607f1691610d9a565b50346103c95781610e5936612473565b601b549395909491936000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce1578591610ef5575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a657610ee1575b505061073c936128bd565b610eea90612218565b610cc9578438610ed6565b610efe90612218565b6103ec578338610ea6565b50346103c95760803660031901126103c9576044359061ffff821682036110db57826064356001600160401b0381116103c957610f4990369084016122e9565b9283511515906000805160206144e083398151915291823b156103ec5760405190632631f2b160e11b8252858201528381602481865afa9081156103e15784916110c7575b50506063610fd89160405196879187356020840152600560f81b6040840152602435604184015261ffff60f01b9060f01b1660618301526102b88151809260208686019101612406565b610fe2845161390a565b803b156103c95781604051809263f28dceb360e01b82528183816110338982016060906020815260166020820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b60408201520190565b03925af180156103a6576110b3575b505061107a91608091602060018060a01b03601b541691604051958694859384936319699fd560e31b85528401526024830190612429565b03915afa80156103a65761108c575080f35b61039b9060803d81116110ac575b6110a481836122ad565b81019061317f565b503d61109a565b6110bc90612218565b6103c5578238611042565b6110d090612218565b6103c5578238610f8e565b600080fd5b82346104125761073c6110f236612473565b92919091612c54565b50346103c9578161110b366123b8565b601b549294909391926000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce15785916111a7575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a657611193575b505061073c9261266e565b61119c90612218565b6103ec578338611188565b6111b090612218565b6103ec578338611158565b82346104125760403660031901126104125760206111d7612202565b604080516001600160a01b039092168383019081526024356020820152919061120c908290840103601f1981018352826122ad565b519020604051908152f35b8234610412578060031936011261041257601354611234816139cd565b9061124260405192836122ad565b80825260138352827f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090602084015b83831061128557604051806107c287826124a6565b60405161129181612241565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b816007840110611404578460019794600297946020979461131c9454918181106113e8575b8181106113cc575b8181106113b0575b818110611394575b818110611378575b81811061135c575b818110611342575b1061132e575b5003826122ad565b83820152815201920192019190611270565b6001600160e01b031916815286018e611314565b828a1b6001600160e01b0319168452928901928b0161130e565b604083901b6001600160e01b0319168452928901928b01611306565b606083901b6001600160e01b0319168452928901928b016112fe565b608083901b6001600160e01b0319168452928901928b016112f6565b60a083901b6001600160e01b0319168452928901928b016112ee565b60c083901b6001600160e01b0319168452928901928b016112e6565b60e083901b6001600160e01b0319168452928901928b016112de565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e08201520194019201916112b9565b82346104125761073c61148436612473565b929190916128bd565b5090346104125780600319360112610412576011546114ab816139cd565b916114b960405193846122ad565b818352601181528060207f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c688186015b8584106114fd57604051806107c28982612595565b604051859183549160019280841c9084811680156115a7575b8883108114610e2b578284528894939291811561158b5750600114611553575b506115458160019603826122ad565b8152019201930192906114e8565b868a52838a20955089905b8082106115745750810183019450611545611536565b86548383018601529585019588949091019061155e565b60ff19168584015250151560051b810183019450611545611536565b91607f1691611516565b82346104125761073c6115c33661255e565b93929092612ff8565b50903461041257604036600319011261041257506024359060ff82168092036110db57602091610719916040518481019135825284815261160c81612241565b5190206134c8565b50346103c957816116243661255e565b601b549496909591949293926000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce15785916116c7575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a6576116af575b505061073c94612ff8565b6116b890612218565b6116c35785386116a4565b8580fd5b6116d090612218565b6103ec578338611674565b82346104125780600319360112610412576012546116f8816139cd565b9061170660405192836122ad565b80825260128352827fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444602084015b83831061174957604051806107c287826124a6565b60405161175581612241565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b8160078401106117ea57846001979460029794602097946117d89454918181106113e8578181106113cc578181106113b057818110611394578181106113785781811061135c57818110611342571061132e575003826122ad565b83820152815201920192019190611734565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e082015201940192019161177d565b82346104125761073c61186a366123b8565b9161266e565b50346103c9578161188036612473565b601b549395909491936000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce157859161191c575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a657611908575b505061073c93612c54565b61191190612218565b610cc95784386118fd565b61192590612218565b6103ec5783386118cd565b82346104125761073c6119423661244e565b916131c9565b50346103c957816119583661244e565b601b549294909391926000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce15785916119f4575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a6576119e0575b505061073c926131c9565b6119e990612218565b6103ec5783386119d5565b6119fd90612218565b6103ec5783386119a5565b509034610412576040366003190112610412576040516338d07aa960e21b81528235838201526024803590820152906060826044816000805160206144e08339815191525afa8015611b12578182938392611acb575b5060ff601a199116019160ff8311611ab8575060408051602081019490945283015260f81b6001600160f81b0319166060820152604181526107c29150611aa48161225c565b604051918291602083526020830190612429565b634e487b7160e01b815260118552602490fd5b935050506060823d8211611b0a575b81611ae7606093836122ad565b8101031261041257611af8826125f7565b60208301516040909301519038611a5e565b3d9150611ada565b50604051903d90823e3d90fd5b8234610412578060031936011261041257604051600e80548083529083526020808301937fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd92915b828210611b7e576107c2856107b6818903826122ad565b83546001600160a01b031686529485019460019384019390910190611b67565b8234610412578060031936011261041257604051600f80548083529083526020808301937f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80292915b828210611bfd576107c2856107b6818903826122ad565b83546001600160a01b031686529485019460019384019390910190611be6565b82346104125761073c611c2f366123dd565b92919091612e46565b50346103c95760203660031901126103c95780356001600160401b0381116103c557611c6790369083016122e9565b908260438351106000805160206144e083398151915290813b156103c55760405190632631f2b160e11b8252848201528281602481855afa9081156106bb578391611d32575b5050835160201080611d1b575b50803b156103c9578180918460405180948193633d21120560e21b83525af180156103a657610aac575050610a7391608091602060018060a01b03601b541691604051958694859384936327ee307d60e11b85528401526024830190612429565b909150156108e05783906001604085015338611cba565b611d3b90612218565b6103c9578138611cad565b50346103c95781611d56366123b8565b601b549294909391926000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce1578591611df2575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a657611dde575b505061073c92612ac0565b611de790612218565b6103ec578338611dd3565b611dfb90612218565b6103ec578338611da3565b50346103c95781611e1636612385565b601b549395909491936000805160206144e083398151915291906001600160a01b0316823b156103ec5760405163ed9f735360e01b81528481848183885af1908115610ce1578591611eb2575b5050823b156103ec57602484928360405195869485936316f02cd760e11b85528401525af180156103a657611e9e575b505061073c93613350565b611ea790612218565b610cc9578438611e93565b611ebb90612218565b6103ec578338611e63565b8234610412578060031936011261041257604051600d80548083529083526020808301937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb592915b828210611f25576107c2856107b6818903826122ad565b83546001600160a01b031686529485019460019384019390910190611f0e565b50346103c95760403660031901126103c9576020906040518281019135825260243560408201526040815261120c81612277565b50346103c95760203660031901126103c95780356001600160401b0381116103c557611fa890369083016122e9565b9060438251106000805160206144e083398151915290813b15610cc95760405190632631f2b160e11b8252838201528481602481855afa8015610ce157612070575b508390835160201080612059575b50803b156103c9578180918460405180948193633d21120560e21b83525af180156103a6576110b357505061107a91608091602060018060a01b03601b541691604051958694859384936319699fd560e31b85528401526024830190612429565b909150156108e05783906005604085015338611ff8565b61207c90949194612218565b9238611fea565b509034610412578060031936011261041257604051610adb808201908282106001600160401b038311176120e6579082916139e58339039082f08015611b125760018060a01b03166bffffffffffffffffffffffff60a01b601b541617601b5580f35b634e487b7160e01b845260418552602484fd5b9050346103c55760803660031901126103c55782612115612202565b630667f9d760e41b83526001600160a01b038116838501908152602435602082018190529194919390819060400103906020816000805160206144e08339815191529381855afa9081156103e15784916121d1575b50606435166044351794813b156103ec578360649260405196879586946370ca10bb60e01b865260018060a01b03169085015260248401528760448401525af180156106bb57602093506121c2575b50604051908152f35b6121cb90612218565b386121b9565b90506020813d82116121fa575b816121eb602093836122ad565b810103126103ec57513861216a565b3d91506121de565b600435906001600160a01b03821682036110db57565b6001600160401b03811161222b57604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761222b57604052565b608081019081106001600160401b0382111761222b57604052565b606081019081106001600160401b0382111761222b57604052565b60a081019081106001600160401b0382111761222b57604052565b90601f801991011681019081106001600160401b0382111761222b57604052565b6001600160401b03811161222b57601f01601f191660200190565b81601f820112156110db57803590612300826122ce565b9261230e60405194856122ad565b828452602083830101116110db57816000926020809301838601378301015290565b6020908160408183019282815285518094520193019160005b828110612357575050505090565b83516001600160a01b031685529381019392810192600101612349565b6024359061ffff821682036110db57565b60809060031901126110db576004359060243560ff811681036110db57906044359060643561ffff811681036110db5790565b60609060031901126110db576004359060243561ffff811681036110db579060443590565b60809060031901126110db576004359060243561ffff811681036110db57906044359060643590565b60005b8381106124195750506000910152565b8181015183820152602001612409565b9060209161244281518092818552858086019101612406565b601f01601f1916010190565b60609060031901126110db57600435906024359060443561ffff811681036110db5790565b60809060031901126110db576004359060243560ff811681036110db579060443561ffff811681036110db579060643590565b602080820190808352835180925260409283810182858560051b840101960194600080935b8685106124dd57505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b80821061253a5750505090806001929a0195019501939695949291906124cb565b82516001600160e01b03191684528a94938401939092019160019190910190612519565b60a09060031901126110db576004359060243560ff811681036110db579060443561ffff811681036110db57906064359060843590565b602080820190808352835180925260408301928160408460051b8301019501936000915b8483106125c95750505050505090565b90919293949584806125e7600193603f198682030187528a51612429565b98019301930191949392906125b9565b519060ff821682036110db57565b519061ffff821682036110db57565b908160809103126110db5760606040519161262e8361225c565b8051835261263e602082016125f7565b602084015261264f60408201612605565b604084015201516001600160a01b03811681036110db57606082015290565b6040908151906126e56020948286850152600160f81b8585015261ffff60f01b8160f01b166041850152866043850152604384526126ab8461225c565b6126b58451613773565b608060018060a01b039485601b5416875180809681946327ee307d60e11b83528c60048401526024830190612429565b03915afa9182156128b2579184939160609360009261288c575b5061270f829361273193516136af565b60ff8884015116600181036127fe575b5061ffff80888501511691169061387e565b015116931691828403612745575b50505050565b6127e6926000805160206144c0833981519152608084518481526025858201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648682015264726573735d60d81b6060820152a18251948386526127aa8487016135df565b9083870152857f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9687920390a1825193838594855284016135fc565b918301520390a16127f5613619565b3880808061273f565b6000805160206144c0833981519152608089518b815260228c8201526000805160206145008339815191528b82015261745d60f01b88820152a18751908882526128498983016135df565b908a830152816000805160206145208339815191529283920390a18751888152806128758a82016135fc565b60018c8301520390a1612886613619565b3861271f565b61273192506128ab61270f9160803d8111610aa557610a9d81836122ad565b92506126ff565b85513d6000823e3d90fd5b939291936000805160206144e083398151915290813b156110db57604093845196632631f2b160e11b8852600097600160ff8716141560048201528881602481885afa8015612a6c57612a4f575b508551602081019390935260f89490941b6001600160f81b031916604083015260f09390931b6001600160f01b0319166041820152604381019290925261295f82606381015b03601f1981018452836122ad565b6129698251613773565b803b15610cc957825163f28dceb360e01b8152602060048201526017602482015276696e76616c696420436f6e74726163745570677261646560481b60448201529085908290606490829084905af18015612a4557612a31575b509260806129f9939460018060a01b03601b5416845180809781946327ee307d60e11b8352602060048401526024830190612429565b03915afa918215612a27575050612a0d5750565b612a249060803d8111610aa557610a9d81836122ad565b50565b51903d90823e3d90fd5b612a3b8591612218565b6103ec57386129c3565b83513d87823e3d90fd5b916129519198612a6261295f9594612218565b989150919261290b565b87513d8b823e3d90fd5b908160809103126110db57606060405191612a908361225c565b80518352612aa0602082016125f7565b6020840152612ab160408201612605565b60408401520151606082015290565b92919092612b38604094855160806020918583820152600360f81b8982015261ffff60f01b8460f01b16604182015286604382015260438152612b028161225c565b612b0c8151613773565b60018060a01b03601b54168951808097819463515f324760e01b83528760048401526024830190612429565b03915afa928315612c495796606094939291612b919798600094612c23575b50612b678495612b8a95516136af565b60ff81860151169060038203612b93575b505083015161ffff918216911661387e565b015161387e565b565b6000805160206144c0833981519152608084518381526022848201526000805160206145008339815191528682015261745d60f01b8a820152a1825191838352612bde8484016135df565b9082840152826000805160206145208339815191529384920390a1825180918482526003612c0d8684016135fc565b918301520390a1612c1c613619565b3880612b78565b612b8a9450612c42612b679160803d811161039f5761039381836122ad565b9450612b57565b87513d6000823e3d90fd5b939291936000805160206144e083398151915290813b156110db57604093845196632631f2b160e11b8852600097600360ff8716141560048201528881602481885afa8015612a6c57612dc3575b508551602081019390935260f89490941b6001600160f81b031916604083015260f09390931b6001600160f01b03191660418201526043810192909252612cec8260638101612951565b612cf68251613773565b803b15610cc957825163f28dceb360e01b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b60448201529085908290606490829084905af18015612a4557612daf575b50926080612d84939460018060a01b03601b54168451808097819463515f324760e01b8352602060048401526024830190612429565b03915afa918215612a27575050612d985750565b612a249060803d811161039f5761039381836122ad565b612db98591612218565b6103ec5738612d4e565b916129519198612dd6612cec9594612218565b9891509192612ca2565b908160a09103126110db576040519060a08201908282106001600160401b0383111761222b5760809160405280518352612e1c602082016125f7565b6020840152612e2d60408201612605565b6040840152606081015160608401520151608082015290565b90939291612ec390604095865160a06020918683820152600160fa1b8a82015261ffff60f01b8460f01b16604182015284604382015287606382015260638152612e8f81612292565b612e99815161380e565b600180831b03601b54168a51808098819462c6796760e21b83528760048401526024830190612429565b03915afa938415612fed579760809594939291612b919899600095612fbd575b5090612f1c9291612ef98697612f2697516136af565b60ff81880151169060048203612f2d575b505085015161ffff918216911661387e565b606083015161387e565b01516136af565b6000805160206144c08339815191528984518381526022848201526000805160206145008339815191528682015261745d60f01b6060820152a1825191838352612f788484016135df565b9082840152826000805160206145208339815191529384920390a1825180918482526004612fa78684016135fc565b918301520390a1612fb6613619565b3880612f0a565b612f26955090612ef9612fe2612f1c95949360a03d81116105c9576105c181836122ad565b965050909192612ee3565b88513d6000823e3d90fd5b91929094936000805160206144e083398151915291823b156110db57604094855197632631f2b160e11b8952600098600460ff8316141560048201528981602481895afa801561317557613162575b508651602081019690965260f81b6001600160f81b0319168587015260f01b6001600160f01b03191660418501526043840152606380840191909152825261308e82612292565b613098825161380e565b803b15610cc957825163f28dceb360e01b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b60448201529085908290606490829084905af18015612a455761314e575b509260a06131239394600180831b03601b54168451808097819462c6796760e21b8352602060048401526024830190612429565b03915afa918215612a275750506131375750565b612a249060a03d81116105c9576105c181836122ad565b6131588591612218565b6103ec57386130ef565b61316e90999199612218565b9738613047565b88513d8c823e3d90fd5b908160809103126110db576131c160606040519261319c8461225c565b805184526131ac602082016125f7565b60208501526040810151604085015201612605565b606082015290565b92919092613241604094855160806020918583820152600560f81b8982015283604182015261ffff60f01b8760f01b1660618201526043815261320b8161225c565b6132158151613773565b60018060a01b03601b5416895180809781946319699fd560e31b83528760048401526024830190612429565b03915afa928315612c495796606094939291612b91979860009461332a575b50613270849561328b95516136af565b60ff8186015116906005820361329a575b505083015161387e565b015161ffff918216911661387e565b6000805160206144c0833981519152608084518381526022848201526000805160206145008339815191528682015261745d60f01b8a820152a18251918383526132e58484016135df565b9082840152826000805160206145208339815191529384920390a18251809184825260056133148684016135fc565b918301520390a1613323613619565b3880613281565b61328b94506133496132709160803d81116110ac576110a481836122ad565b9450613260565b9093926000805160206144e083398151915290813b156110db57604093845196632631f2b160e11b8852600097600560ff8316141560048201528881602481885afa8015612a6c576134b5575b508551602081019590955260f81b6001600160f81b03191684860152604184015260f01b6001600160f01b0319166061830152604382526133dd8261225c565b6133e78251613773565b803b15610cc957825163f28dceb360e01b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b60448201529085908290606490829084905af18015612a45576134a1575b50926080613476939460018060a01b03601b5416845180809781946319699fd560e31b8352602060048401526024830190612429565b03915afa918215612a2757505061348a5750565b612a249060803d81116110ac576110a481836122ad565b6134ab8591612218565b6103ec5738613440565b6134c190989198612218565b963861339d565b919082018092116134d557565b634e487b7160e01b600052601160045260246000fd5b3d15613516573d906134fc826122ce565b9161350a60405193846122ad565b82523d6000602084013e565b606090565b6000805460081c60ff1615613534575460081c60ff1690565b806000805160206144e0833981519152803b61354f57505090565b819250819060405182602082018381526519985a5b195960d21b60408401526040835261357b83612277565b6135b3602460405180936135a36020830197630667f9d760e41b895251809285850190612406565b81010360048101845201826122ad565b51925af1506135c06134eb565b6020818051810103126103c95760200151908115158203610412575090565b600a8152690808080808081319599d60b21b602082015260400190565b600a8152690808080808149a59da1d60b21b602082015260400190565b6000805160206144e0833981519152803b613641575b5061010061ff00196000541617600055565b6000809160405182602082018381526519985a5b195960d21b604084015260016060840152606083526136738361225c565b61369b602460405180936135a360208301976370ca10bb60e01b895251809285850190612406565b51925af1506136a86134eb565b503861362f565b908082036136bb575050565b613762906040906000805160206144c08339815191526080835160208152602560208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6279748582015264657333325d60d81b6060820152a18151938285526137258386016135df565b906020860152847fafb795c9c61e4fe7468c386f925d7a5429ecad9c0495ddb8d38d690614d32f999586920390a1815192828493845283016135fc565b9060208301520390a1612b91613619565b6043810361377e5750565b6137fc60406000805160206144c08339815191526080825160208152602260208201526000805160206145008339815191528482015261745d60f01b6060820152a18051928184526137d18285016135df565b906020850152836000805160206145208339815191529485920390a1805191818392835282016135fc565b604360208301520390a1612b91613619565b606381036138195750565b61386c60406000805160206144c08339815191526080825160208152602260208201526000805160206145008339815191528482015261745d60f01b6060820152a18051928184526137d18285016135df565b606360208301520390a1612b91613619565b9080820361388a575050565b613762906040906000805160206144c08339815191526080835160208152602260208201526000805160206145008339815191528582015261745d60f01b6060820152a18151938285526138df8386016135df565b906020860152846000805160206145208339815191529586920390a1815192828493845283016135fc565b60438111156139165750565b608080916040906000805160206144c083398151915283835160208152602160208201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e7485820152605d60f81b6060820152a181519082825260098383015268202056616c7565206160b81b60608301526020820152600080516020614520833981519152938491a160098151918083528201526810102b30b63ab2903160b91b606082015260436020820152a1612b91613619565b6001600160401b03811161222b5760051b6020019056fe6080806040523461001657610abf908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081630319e59c1461006a5750806304ca84cf146100655780634fdc60fa14610060578063515f32471461005b5763cb4cfea81461005657600080fd5b610590565b6104fa565b6103ff565b6102e7565b3461015757610153906101116063610081366101db565b610089610170565b93808552602085018181526100f4604087018381526100e3600460ff6100dc60608c019688885260808d019889526100c08a610a69565b8d526100d56100ce8b610956565b60ff168252565b5160ff1690565b1614610872565b6100ec856109b1565b61ffff169052565b6100fd83610a59565b905261010882610a79565b90525114610872565b6040519182918291909160808060a08301948051845260ff602082015116602085015261ffff6040820151166040850152606081015160608501520151910152565b0390f35b80fd5b634e487b7160e01b600052604160045260246000fd5b6040519060a0820182811067ffffffffffffffff82111761019057604052565b61015a565b604051906040820182811067ffffffffffffffff82111761019057604052565b6040519190601f01601f1916820167ffffffffffffffff81118382101761019057604052565b60206003198201126102485767ffffffffffffffff600435818111610248578260238201121561024857806004013591821161019057610224601f8301601f19166020016101b5565b92828452602483830101116102485781600092602460209301838601378301015290565b600080fd5b60209182825280518383015260ff8382015116604083015261ffff604082015116606083015260608101519260a06080840152610100830193805194604060c0860152855180915282610120860196019060005b8181106102ca57505050015163ffffffff90811660e08401526080909101511660a09091015290565b82516001600160a01b0316885296840196918401916001016102a1565b34610248576102f5366101db565b6102fd610728565b61030682610a69565b8152610331600260ff61032a61031b86610956565b60ff16602086019081526100d5565b1614610764565b61034861033d836109b1565b61ffff166040830152565b61036161035483610a0d565b63ffffffff166080830152565b61036a826109a1565b9160ff6028931661037a816107c8565b90610383610195565b91825260006020830152606084019182526000915b8183106103bb57610153856103af88875114610764565b6040519182918261024d565b9091946103f2816103ed6103d26103f894886108fa565b6103de8a875151610804565b6001600160a01b039091169052565b6106c9565b956107f5565b9190610398565b346102485761040d366101db565b61041561067d565b61041e82610a69565b815261043d600160ff61043085610956565b16806020850152146106dc565b61ffff610449836109b1565b16604082015260438251106104bd576043828101516001600160a01b031660608301526101539261047c919051146106dc565b60405191829182919091606060808201938051835260ff602082015116602084015261ffff60408201511660408401528160018060a01b0391015116910152565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b3461024857608061050a366101db565b61051261067d565b9061051c81610a69565b825261052781610956565b61053d600360ff6020860193168084521461082e565b610546826109b1565b9060ff604085019161ffff8094168352610573604361056487610a59565b9660608901978852511461082e565b604051955186525116602085015251166040830152516060820152f35b346102485761059e366101db565b6105a661067d565b6105af82610a69565b81526105ce600560ff6105c185610956565b16806020850152146108b5565b604182511061064057610608604383604161015395015160408501526106016105f6826109fd565b61ffff166060860152565b51146108b5565b60405191829182919091606061ffff8160808401958051855260ff602082015116602086015260408101516040860152015116910152565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b604051906080820182811067ffffffffffffffff8211176101905760405260006060838281528260208201528260408201520152565b634e487b7160e01b600052601160045260246000fd5b90601482018092116106d757565b6106b3565b156106e357565b60405162461bcd60e51b815260206004820152601760248201527f696e76616c696420436f6e7472616374557067726164650000000000000000006044820152606490fd5b610730610170565b9060008252600060208301526000604083015261074b610195565b6060815260006020820152606083015260006080830152565b1561076b57565b60405162461bcd60e51b815260206004820152601a60248201527f696e76616c696420477561726469616e536574557067726164650000000000006044820152606490fd5b67ffffffffffffffff81116101905760051b60200190565b906107da6107d5836107b0565b6101b5565b82815280926107eb601f19916107b0565b0190602036910137565b60001981146106d75760010190565b80518210156108185760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b1561083557565b60405162461bcd60e51b8152602060048201526015602482015274696e76616c6964205365744d65737361676546656560581b6044820152606490fd5b1561087957565b60405162461bcd60e51b8152602060048201526014602482015273696e76616c6964205472616e736665724665657360601b6044820152606490fd5b156108bc57565b60405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a5908149958dbdd995c90da185a5b925960521b6044820152606490fd5b90815160148201908183116106d7571061091957016020015160601c90565b60405162461bcd60e51b8152602060048201526015602482015274746f416464726573735f6f75744f66426f756e647360581b6044820152606490fd5b6021815110610966576021015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b6028815110610966576028015190565b60238151106109c1576023015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b60438151106109c1576043015190565b6027815110610a1d576027015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606490fd5b6043815110610640576043015190565b60208151106104bd576020015190565b60638151106104bd57606301519056fea26469706673582212201f50395f15ed23bf33780069eb373c11a08c225fa75ccfde637c5374eb1bfec664736f6c6343000813003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f500000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696eb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8a26469706673582212207d24efd09501de9f3d4e87ac957a7a27bfe6d84f98d43aa88026c3f2b7e9a21064736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "log_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "log_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "log_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly name: "log_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "val";
            readonly type: "address";
        }];
        readonly name: "log_named_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "val";
            readonly type: "bytes";
        }];
        readonly name: "log_named_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "val";
            readonly type: "bytes32";
        }];
        readonly name: "log_named_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }];
        readonly name: "log_named_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "val";
            readonly type: "string";
        }];
        readonly name: "log_named_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }];
        readonly name: "log_named_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "log_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "logs";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "IS_TEST";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "keyHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "arrayOffset";
            readonly type: "uint8";
        }];
        readonly name: "arrayElementLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "excludedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "failed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_key";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }];
        readonly name: "hashedLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_key";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }];
        readonly name: "hashedLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_key";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }];
        readonly name: "hashedLocationOffset";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "kevm";
        readonly outputs: readonly [{
            readonly internalType: "contract KEVMCheatsBase";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "setUp";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "storageSlot";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "content";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "mask";
            readonly type: "bytes32";
        }];
        readonly name: "storeWithMask";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifactSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedArtifactSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "targetedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newContract";
            readonly type: "bytes32";
        }];
        readonly name: "testParseContractUpgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "extraBytes";
            readonly type: "bytes";
        }];
        readonly name: "testParseContractUpgradeSizeTooLarge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedUpgrade";
            readonly type: "bytes";
        }];
        readonly name: "testParseContractUpgradeSizeTooSmall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newContract";
            readonly type: "bytes32";
        }];
        readonly name: "testParseContractUpgradeWrongAction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newContract";
            readonly type: "bytes32";
        }];
        readonly name: "testParseContractUpgradeWrongAction_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newContract";
            readonly type: "bytes32";
        }];
        readonly name: "testParseContractUpgrade_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "newChainId";
            readonly type: "uint16";
        }];
        readonly name: "testParseRecoverChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "newChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "extraBytes";
            readonly type: "bytes";
        }];
        readonly name: "testParseRecoverChainIdSizeTooLarge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedRecoverChainId";
            readonly type: "bytes";
        }];
        readonly name: "testParseRecoverChainIdSizeTooSmall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "newChainId";
            readonly type: "uint16";
        }];
        readonly name: "testParseRecoverChainIdWrongAction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "newChainId";
            readonly type: "uint16";
        }];
        readonly name: "testParseRecoverChainIdWrongAction_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "newChainId";
            readonly type: "uint16";
        }];
        readonly name: "testParseRecoverChainId_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "messageFee";
            readonly type: "uint256";
        }];
        readonly name: "testParseSetMessageFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "messageFee";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "extraBytes";
            readonly type: "bytes";
        }];
        readonly name: "testParseSetMessageFeeSizeTooLarge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedSetMessageFee";
            readonly type: "bytes";
        }];
        readonly name: "testParseSetMessageFeeSizeTooSmall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "messageFee";
            readonly type: "uint256";
        }];
        readonly name: "testParseSetMessageFeeWrongAction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "messageFee";
            readonly type: "uint256";
        }];
        readonly name: "testParseSetMessageFeeWrongAction_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "messageFee";
            readonly type: "uint256";
        }];
        readonly name: "testParseSetMessageFee_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }];
        readonly name: "testParseTransferFees";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "extraBytes";
            readonly type: "bytes";
        }];
        readonly name: "testParseTransferFeesSizeTooLarge";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedTransferFees";
            readonly type: "bytes";
        }];
        readonly name: "testParseTransferFeesSizeTooSmall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }];
        readonly name: "testParseTransferFeesWrongAction";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "action";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }];
        readonly name: "testParseTransferFeesWrongAction_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "module";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "chain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }];
        readonly name: "testParseTransferFees_KEVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "pk";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "validSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): TestGovernanceStructsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestGovernanceStructs;
}
export {};
