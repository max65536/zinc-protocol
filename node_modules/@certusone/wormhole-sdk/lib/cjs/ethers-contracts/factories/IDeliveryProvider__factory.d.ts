import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IDeliveryProvider, IDeliveryProviderInterface } from "../IDeliveryProvider";
export declare class IDeliveryProvider__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "getRewardAddress";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "rewardAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "getTargetChainAddress";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryProviderAddress";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "isChainSupported";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "supported";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "currentChainAmount";
            readonly type: "uint256";
        }];
        readonly name: "quoteAssetConversion";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "targetChainAmount";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "receiverValue";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "encodedExecutionParams";
            readonly type: "bytes";
        }];
        readonly name: "quoteDeliveryPrice";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "nativePriceQuote";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "encodedExecutionInfo";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IDeliveryProviderInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IDeliveryProvider;
}
