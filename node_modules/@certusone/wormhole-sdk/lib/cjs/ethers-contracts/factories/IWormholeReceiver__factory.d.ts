import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IWormholeReceiver, IWormholeReceiverInterface } from "../IWormholeReceiver";
export declare class IWormholeReceiver__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "additionalVaas";
            readonly type: "bytes[]";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sourceAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "sourceChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "receiveWormholeMessages";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): IWormholeReceiverInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IWormholeReceiver;
}
