import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TestMessagesRV, TestMessagesRVInterface } from "../../MessagesRV.t.sol/TestMessagesRV";
declare type TestMessagesRVConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestMessagesRV__factory extends ContractFactory {
    constructor(...args: TestMessagesRVConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TestMessagesRV>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TestMessagesRV;
    connect(signer: Signer): TestMessagesRV__factory;
    static readonly bytecode = "0x6080806040523461002d57600160ff1981816000541617600055600454161760045561436b90816100338239f35b600080fdfe6080806040526004908136101561001557600080fd5b600091823560e01c9182630426fc2214611935575081630a9254e4146118b35781631ea512721461187e5781631ed7831c146117ff578163218f50aa146114a45781633e5e3c23146114255781633f7286f4146113a65781633fa0e739146112ab57816366d9a9a01461112e5781637d052ede146110e757816385226c8114610fc45781638bbe1bb514610ce9578163916a17c614610a8e57816392d812d014610a32578163b0024c64146106d6578163b5508aa91461059f578163ba414fa61461057a578163d4dec08c14610258578163d6a2ec7614610229578163e20c9f711461019a578163f864deb01461013a575063fa7626d41461011657600080fd5b3461013757806003193601126101375760ff60209154166040519015158152f35b80fd5b823461013757606036600319011261013757503563ffffffff81168091036101955761018d6020916040519083820190815260243560408301526040825261018182611afe565b604435915190206124d5565b604051908152f35b600080fd5b8234610137578060031936011261013757604051600c80548083529083526020808301937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c792915b82821061020957610205856101f981890382611b19565b60405191829182611a5b565b0390f35b83546001600160a01b0316865294850194600193840193909101906101e2565b82346101375780600319360112610137576020604051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b8234610137576080366003190112610137576001600160401b03918035838111610576576102899036908301611b55565b9260249081359081116104d8576102a39036908401611bc3565b916102ac611bb3565b946064359560ff93848816809803610195578251151594737109709ecfa91a80626ff3989d68f67f5b1dd12d92833b1561053757604051632631f2b160e11b978882528782015289818581885afa801561053b57908a91610562575b505061031388611f53565b843b1561055e576040519088825215158782015289818581885afa801561053b57908a9161054a575b50506020880196828851161515853b15610546576040519182528782015289818581885afa801561053b57908a91610523575b5050865182166000190182811161050f5782918280610390931691166128a4565b169881875116820363ffffffff908181116104fd57916103b391849316906128a4565b16816103da865160208801908120976103cb8c611fba565b9b51918c5191519020916121d2565b97511601908082116104eb5760606103f68a9b899b9a9b611de9565b510191169052813b156104e757601c6064879283604051958694859363f28dceb360e01b855260208b8601528401527f677561726469616e20696e646578206f7574206f6620626f756e64730000000060448401525af19081156104dc5785916104c4575b505060018060a01b03601b5416916104876040519687958694859463a0cce1b360e01b86528501611e90565b03915afa80156104b957610499575080f35b6104b4903d8084833e6104ac8183611b19565b810190611e20565b505080f35b6040513d84823e3d90fd5b6104cd90611a9f565b6104d857838761045b565b8380fd5b6040513d87823e3d90fd5b8580fd5b634e487b7160e01b8952601186528289fd5b634e487b7160e01b8b5260118852848bfd5b83601188634e487b7160e01b600052526000fd5b61052c90611a9f565b61053757888b61036f565b8880fd5b6040513d8c823e3d90fd5b8a80fd5b61055390611a9f565b61053757888b61033c565b8980fd5b61056b90611a9f565b61053757888b610308565b8280fd5b82346101375780600319360112610137576020610595612512565b6040519015158152f35b82346101375780600319360112610137576010546105bc81611b9c565b916105ca6040519384611b19565b818352601081528060207f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6728186015b85841061060e57604051806102058982611d87565b604051859183549160019280841c9084811680156106cc575b88831081146106b8578284528894939291811561069c5750600114610664575b50610656816001960382611b19565b8152019201930192906105f9565b868a52838a20955089905b8082106106855750810183019450610656610647565b86548383018601529585019588949091019061066f565b60ff19168584015250151560051b810183019450610656610647565b50634e487b7160e01b8a5260228d5260248afd5b91607f1691610627565b905034610a2e5760c0366003190112610a2e576001600160401b0381358181116104d8576107079036908401611b55565b906024359081116104d85761071f9036908401611bc3565b9160803660431901126104d8576040519061073982611ae3565b6044358252602082019260643584526084359060ff938483168303610195576040810192835260a435948086168603610195578896606083019687528351151591737109709ecfa91a80626ff3989d68f67f5b1dd12d94853b1561055e57604051632631f2b160e11b94858252898201528a816024818a5afa908115610a0f578b91610a1a575b50506107cb8b611f53565b863b1561054657604051908582521515898201528a816024818a5afa908115610a0f578b916109fb575b5050818951168260208d01511611863b1561054657604051948552888501528984602481895afa93841561053b578a946109e3575b5080519060200120958161083d8c611fba565b9b51888d5161084b926121d2565b99511685610859828c611de9565b52610864908a611de9565b50511692519051926040519384926108979288859094939260ff6060936080840197845216602083015260408201520152565b828052035a926001602094fa156109d85784516001600160a01b0391908216156109305750601b5416916108df6040519687958694859463a0cce1b360e01b86528501611e90565b03915afa80156104b95761090e9183908492610911575b5061090090612815565b6109086124a5565b906126d4565b80f35b610900925061092a91503d8086833e6104ac8183611b19565b916108f6565b803b156104e75785809160646040518094819363f28dceb360e01b835260208a840152601f60248401527f65637265636f766572206661696c65642077697468207369676e61747572650060448401525af19081156109cd5786916109b5575b5050601b5416916104876040519687958694859463a0cce1b360e01b86528501611e90565b6109be90611a9f565b6109c9578438610990565b8480fd5b6040513d88823e3d90fd5b6040513d86823e3d90fd5b6109ef90949194611a9f565b6105375788923861082a565b610a0490611a9f565b61055e5789386107f5565b6040513d8d823e3d90fd5b610a2390611a9f565b61055e5789386107c0565b5080fd5b8234610137576040366003190112610137576020610a4e611a45565b604080516001600160a01b0390921683830190815260243560208201529190610a83908290840103601f198101835282611b19565b519020604051908152f35b8234610137578060031936011261013757601354610aab81611b9c565b90610ab96040519283611b19565b80825260138352827f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090602084015b838310610afc57604051806102058782611ccf565b604051610b0881611ac8565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b816007840110610c7b5784600197946002979460209794610b93945491818110610c5f575b818110610c43575b818110610c27575b818110610c0b575b818110610bef575b818110610bd3575b818110610bb9575b10610ba5575b500382611b19565b83820152815201920192019190610ae7565b6001600160e01b031916815286018e610b8b565b828a1b6001600160e01b0319168452928901928b01610b85565b604083901b6001600160e01b0319168452928901928b01610b7d565b606083901b6001600160e01b0319168452928901928b01610b75565b608083901b6001600160e01b0319168452928901928b01610b6d565b60a083901b6001600160e01b0319168452928901928b01610b65565b60c083901b6001600160e01b0319168452928901928b01610b5d565b60e083901b6001600160e01b0319168452928901928b01610b55565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e0820152019401920191610b30565b905034610a2e576080366003190112610a2e57818135916001600160401b039283811161057657610d1d9036908301611b55565b9060249384359081116104d857610d379036908301611bc3565b93610d40611bb3565b606435908451151590737109709ecfa91a80626ff3989d68f67f5b1dd12d95863b15610f4a57604051632631f2b160e11b9384825287820152888187818b5afa908115610f4e578991610fb0575b5050610d9989611f53565b873b156105375760405190848252151587820152888187818b5afa908115610f4e578991610f9c575b505060ff60208a0151169260ff831693883b1561055e5760405190828252851088820152898188818c5afa90811561053b578a91610f88575b505084151580610f6d575b883b1561055e5760405190828252151588820152898188818c5afa90811561053b578a91610f59575b5050610e3c848b51611de9565b51851415883b1561055e5760405191825287820152888187818b5afa908115610f4e578991610f36575b505060208151910120936020610e8986610e7f8c611fba565b9b518c51906121d2565b976040519283809263ffa1864960e01b8252888b8301525afa8015610f2b57610ed094610ebf9387938b93610efb575b506122a7565b610ec98287611de9565b5284611de9565b5060018060a01b03601b5416916108df6040519687958694859463a0cce1b360e01b86528501611e90565b610f1d91935060203d8111610f24575b610f158183611b19565b810190611f9b565b9138610eb9565b503d610f0b565b6040513d8a823e3d90fd5b610f3f90611a9f565b610f4a578738610e66565b8780fd5b6040513d8b823e3d90fd5b610f6290611a9f565b610537578838610e2f565b5070014551231950b75fc4402da1732fc9bebe198510610e06565b610f9190611a9f565b610537578838610dfb565b610fa590611a9f565b610f4a578738610dc2565b610fb990611a9f565b610f4a578738610d8e565b8234610137578060031936011261013757601154610fe181611b9c565b91610fef6040519384611b19565b818352601181528060207f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c688186015b85841061103357604051806102058982611d87565b604051859183549160019280841c9084811680156110dd575b88831081146106b857828452889493929181156110c15750600114611089575b5061107b816001960382611b19565b81520192019301929061101e565b868a52838a20955089905b8082106110aa575081018301945061107b61106c565b865483830186015295850195889490910190611094565b60ff19168584015250151560051b81018301945061107b61106c565b91607f169161104c565b823461013757604036600319011261013757506024359060ff82168092036101955760209161018d916040518481019135825284815261112681611ac8565b5190206124d5565b823461013757806003193601126101375760125461114b81611b9c565b906111596040519283611b19565b80825260128352827fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444602084015b83831061119c57604051806102058782611ccf565b6040516111a881611ac8565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b81600784011061123d578460019794600297946020979461122b945491818110610c5f57818110610c4357818110610c2757818110610c0b57818110610bef57818110610bd357818110610bb95710610ba557500382611b19565b83820152815201920192019190611187565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e08201520194019201916111d0565b8234610137576040366003190112610137576040516338d07aa960e21b81528235838201526024803590820152606081604481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa9081156104b95782908392611373575b5060ff601a199116019060ff821161135e5760408051602081019490945283015260f81b6001600160f81b031916606082015260418152610205915061134a81611ae3565b604051918291602083526020830190611caa565b601184634e487b7160e01b6000525260246000fd5b915050611397915060603d811161139f575b61138f8183611b19565b810190612282565b909184611305565b503d611385565b8234610137578060031936011261013757604051600e80548083529083526020808301937fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd92915b82821061140557610205856101f981890382611b19565b83546001600160a01b0316865294850194600193840193909101906113ee565b8234610137578060031936011261013757604051600f80548083529083526020808301937f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80292915b82821061148457610205856101f981890382611b19565b83546001600160a01b03168652948501946001938401939091019061146d565b905034610a2e576040366003190112610a2e576001600160401b039080358281116104d8576114d69036908301611b55565b916024359081116104d8576114ee9036908301611bc3565b9082511515737109709ecfa91a80626ff3989d68f67f5b1dd12d90813b156104e757604051632631f2b160e11b91828252848201528681602481865afa80156117f4576117dd575b509085929161154485611f53565b823b156109c95760248592604051948593849283521515878301525afa9081156117be5783916117c9575b50508351602080950120906115918261158786611fba565b95518651906121d2565b601b5460405163a0cce1b360e01b81529586946001600160a01b0390921693859384936115c093928501611e90565b03915afa9081156117be57839084926117a1575b506001811515036116d9575b505190816115ec578280f35b60008051602061431683398151915260806040518381526022848201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b6060820152a1604051916040835261166860408401604090600a8152690808080808081319599d60b21b60208201520190565b9082840152827fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89384920390a1604051809160408252846116c460408401604090600a8152690808080808149a59da1d60b21b60208201520190565b918301520390a16116d36125d8565b38808280f35b60008051602061431683398151915260806040518581526022868201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b6060820152a115611791576117666117386127f5565b604051807f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358393849382612674565b0390a16117806117746127f5565b604051918291826126a9565b0390a161178b6125d8565b386115e0565b61176661179c6127d4565b611738565b90506117b791503d8085833e6104ac8183611b19565b90386115d4565b6040513d85823e3d90fd5b6117d290611a9f565b610a2e57813861156f565b6117eb909691939296611a9f565b94909138611536565b6040513d89823e3d90fd5b8234610137578060031936011261013757604051600d80548083529083526020808301937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb592915b82821061185e57610205856101f981890382611b19565b83546001600160a01b031686529485019460019384019390910190611847565b905034610a2e576040366003190112610a2e5760209060405182810191358252602435604082015260408152610a8381611afe565b82346101375780600319360112610137576040516118f0808201908282106001600160401b0383111761192257908291612a268339039082f080156119155760018060a01b03166bffffffffffffffffffffffff60a01b601b541617601b5580f35b50604051903d90823e3d90fd5b634e487b7160e01b845260418552602484fd5b909150346105765760803660031901126105765782611952611a45565b630667f9d760e41b83526001600160a01b03811683850190815260243560208201819052919491939081906040010390602081737109709ecfa91a80626ff3989d68f67f5b1dd12d9381855afa9081156109d8578491611a14575b50606435166044351794813b156104d8578360649260405196879586946370ca10bb60e01b865260018060a01b03169085015260248401528760448401525af180156117be5760209350611a05575b50604051908152f35b611a0e90611a9f565b386119fc565b90506020813d8211611a3d575b81611a2e60209383611b19565b810103126104d85751386119ad565b3d9150611a21565b600435906001600160a01b038216820361019557565b6020908160408183019282815285518094520193019160005b828110611a82575050505090565b83516001600160a01b031685529381019392810192600101611a74565b6001600160401b038111611ab257604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117611ab257604052565b608081019081106001600160401b03821117611ab257604052565b606081019081106001600160401b03821117611ab257604052565b90601f801991011681019081106001600160401b03821117611ab257604052565b6001600160401b038111611ab257601f01601f191660200190565b81601f8201121561019557803590611b6c82611b3a565b92611b7a6040519485611b19565b8284526020838301011161019557816000926020809301838601378301015290565b6001600160401b038111611ab25760051b60200190565b6044359060ff8216820361019557565b9190606083820312610195576040519060608201936001600160401b039483811086821117611ab257604052829481359081116101955781019180601f8401121561019557823590611c1482611b9c565b91611c226040519384611b19565b808352602094858085019260051b8201019283116101955785809101915b838310611c77575050505083528181013560ff811681036101955760409284015201359063ffffffff821682036101955760400152565b8235815291810191869101611c40565b60005b838110611c9a5750506000910152565b8181015183820152602001611c8a565b90602091611cc381518092818552858086019101611c87565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b840101960194600080935b868510611d0657505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b808210611d635750505090806001929a019501950193969594929190611cf4565b82516001600160e01b03191684528a94938401939092019160019190910190611d42565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310611dbb5750505050505090565b9091929394958480611dd9600193603f198682030187528a51611caa565b9801930193019194939290611dab565b8051821015611dfd5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b5190811515820361019557565b919060408382031261019557611e3583611e13565b926020810151906001600160401b038211610195570181601f82011215610195578051611e6181611b3a565b92611e6f6040519485611b19565b8184526020828401011161019557611e8d9160208085019101611c87565b90565b9260609384810192815260209285848301528451809152608090848284019601916000905b828210611f17575050505060408185039101526040830182825195604086528651809352850195019060005b818110611efa5750505081015163ffffffff1691015290565b82516001600160a01b031687529584019591840191600101611ee1565b9091929686826001928a518051825283810151848301528c60ff916040838183015116908501520151168c820152019801920190929192611eb5565b60ff60208201511660138111159182611f6b57505090565b51511015919050565b60ff1660ff8114611f855760010190565b634e487b7160e01b600052601160045260246000fd5b9081602091031261019557516001600160a01b03811681036101955790565b90604090815191611fca83611ac8565b6060835260009384602080950152845b8185015160ff828116911681101561209857611ff7818451611de9565b5115159081612070575b5086737109709ecfa91a80626ff3989d68f67f5b1dd12d91823b15610a2e576024865180948193632631f2b160e11b8352151560048301525afa801561206657906120529291612057575b50611f74565b611fda565b61206090611a9f565b3861204c565b84513d89823e3d90fd5b905061209070014551231950b75fc4402da1732fc9bebe19918451611de9565b511038612001565b50508381019360ff9182865116946120af86611b9c565b956120bc86519788611b19565b8087526120cb601f1991611b9c565b013684880137875b8488511685821690811015612184576120ed818551611de9565b519087519163ffa1864960e01b835260048301528582602481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa91821561217a5791879391612150938d92612157575b5061213e908b611de9565b6001600160a01b039091169052611f74565b90506120d3565b61213e91925061217390893d8b11610f2457610f158183611b19565b9190612133565b88513d8d823e3d90fd5b505096508394955063ffffffff92509290920151169151926121a584611ac8565b835282015290565b604051906121ba82611ae3565b60006060838281528260208201528260408201520152565b918151916121df83611b9c565b926121ed6040519485611b19565b8084526121fc601f1991611b9c565b0160005b81811061226b57505060005b815160ff821690811015612262579061204c8261224c8661223061225d968b611de9565b516001600160a01b03612243858a611de9565b511690866122a7565b6122568289611de9565b5286611de9565b61220c565b50505050905090565b6020906122766121ad565b82828801015201612200565b9081606091031261019557805160ff8116810361019557916040602083015192015190565b919290926122b36121ad565b506040918251946338d07aa960e21b86526004860152806024860152606085604481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa90811561249a5760009283968493612471575b50845191825260ff84166020830152604082018790526060820183905260808201600080526000836020948593039060015afa156124665760005160ff96959487949093909290916001600160a01b03908116911680820361237d575b505084519761236a89611ae3565b8852870152169084015216606082015290565b600080516020614316833981519152608088518581526025868201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b6164648a82015264726573735d60d81b6060820152a18651918783526123f7888401604090600a8152690808080808081319599d60b21b60208201520190565b9084840152827f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9384920390a18651809188825261244f898301604090600a8152690808080808149a59da1d60b21b60208201520190565b90858301520390a161245f6125d8565b388061235c565b84513d6000823e3d90fd5b919350955061248e915060603d811161139f5761138f8183611b19565b959192909591386122ff565b83513d6000823e3d90fd5b604051906124b282611ac8565b60148252731593481cda59db985d1d5c99481a5b9d985b1a5960621b6020830152565b91908201809211611f8557565b3d1561250d573d906124f382611b3a565b916125016040519384611b19565b82523d6000602084013e565b606090565b6000805460081c60ff161561252b575460081c60ff1690565b80737109709ecfa91a80626ff3989d68f67f5b1dd12d803b61254c57505090565b819250819060405182602082018381526519985a5b195960d21b60408401526040835261257883611afe565b6125b0602460405180936125a06020830197630667f9d760e41b895251809285850190611c87565b8101036004810184520182611b19565b51925af1506125bd6124e2565b9060208280518101031261013757506020611e8d9101611e13565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b612606575b5061010061ff00196000541617600055565b6000809160405182602082018381526519985a5b195960d21b6040840152600160608401526060835261263883611ae3565b612660602460405180936125a060208301976370ca10bb60e01b895251809285850190611c87565b51925af15061266d6124e2565b50386125f4565b6040808252600a90820152690808080808081319599d60b21b6060820152611e8d91608082015b916020818403910152611caa565b6040808252600a90820152690808080808149a59da1d60b21b6060820152611e8d916080820161269b565b9060409081519160209283810190612703858288516126f68187858d01611c87565b8101038084520182611b19565b519020815184810190612720868287516126f68187858c01611c87565b5190200361272f575b50505050565b6127b39360008051602061431683398151915260806127c09560248551918083528201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b7374728582015263696e675d60e01b6060820152a18151807f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358396879382612674565b0390a151918291826126a9565b0390a16127cb6125d8565b38808080612729565b604051906127e182611ac8565b600582526466616c736560d81b6020830152565b6040519061280282611ac8565b60048252637472756560e01b6020830152565b8061281d5750565b600080516020614316833981519152608060405160208152602260208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f6040820152616c5d60f01b6060820152a1156128995761287e6117386127f5565b0390a161288c6117746127d4565b0390a16128976125d8565b565b61287e61179c6127d4565b906128ae9161293e565b906000806040516128be81611ac8565b600c81526b109bdd5b990814995cdd5b1d60a21b6020820152604051612915816129016020820194632d839cb360e21b8652604060248401526064830190611caa565b88604483015203601f198101835282611b19565b51906a636f6e736f6c652e6c6f675afa5061292e6124e2565b50565b91908203918211611f8557565b60008091838111918215612a1d576001850192838611612a0957600383111580612a00575b6129f757600319831015806129ed575b6129dc57156129d457508361298791612931565b81156129c057069182156129ba575060001982019182116129a6575090565b634e487b7160e01b81526011600452602490fd5b91505090565b634e487b7160e01b83526012600452602483fd5b949350505050565b50509050611e8d9291501990612931565b5082198411612973565b50509250505090565b50828411612963565b634e487b7160e01b85526011600452602485fd5b50925050509056fe60808060405234610016576118d4908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80631a90a219146101275780631cfe7951146101225780632c3c02a41461011d5780634cf842b51461011857806364d42b1714610113578063875be02a1461010e5780639a8a059214610109578063a0cce1b314610104578063a9e11893146100ff578063b172b222146100fa578063c0fd8bde146100f5578063d60b347f146100f0578063e039f224146100eb578063eb8d3f12146100e6578063f8ce560a146100e1578063f951975a146100dc5763fbe3c2cd146100d757600080fd5b610a04565b610983565b61095d565b610937565b610916565b6108d7565b610872565b610829565b6107da565b6105db565b6105b9565b610491565b61020c565b6101c9565b61016e565b61014a565b34610145576000366003190112610145576020600754604051908152f35b600080fd5b3461014557600036600319011261014557602063ffffffff60035416604051908152f35b34610145576020366003190112610145576004356000526005602052602060ff604060002054166040519015158152f35b600435906001600160a01b038216820361014557565b35906001600160a01b038216820361014557565b34610145576020366003190112610145576001600160a01b036101ea61019f565b16600052600460205260206001600160401b0360406000205416604051908152f35b34610145576000366003190112610145576020600854604051908152f35b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761025b57604052565b61022a565b604081019081106001600160401b0382111761025b57604052565b90601f801991011681019081106001600160401b0382111761025b57604052565b6040519061016082018281106001600160401b0382111761025b57604052565b359060ff8216820361014557565b6004359063ffffffff8216820361014557565b359063ffffffff8216820361014557565b359061ffff8216820361014557565b35906001600160401b038216820361014557565b9291926001600160401b03821161025b576040519161033a601f8201601f19166020018461027b565b829481845281830111610145578281602093846000960137010152565b9080601f830112156101455781602061037293359101610311565b90565b6001600160401b03811161025b5760051b60200190565b81601f82011215610145578035906103a382610375565b926040926103b38451958661027b565b808552602091828087019260071b85010193818511610145578301915b8483106103e05750505050505090565b608083830312610145578360809187516103f981610240565b8535815282860135838201526104108987016102bc565b8982015260606104218188016102bc565b908201528152019201916103d0565b60005b8381106104435750506000910152565b8181015183820152602001610433565b9060209161046c81518092818552858086019101610430565b601f01601f1916010190565b6040906103729392151581528160208201520190610453565b346101455760031960203682011261014557600435906001600160401b039081831161014557610160908336030112610145576104cc61029c565b906104d9836004016102bc565b82526104e7602484016102dd565b60208301526104f8604484016102dd565b6040830152610509606484016102ee565b60608301526084830135608083015261052460a484016102fd565b60a083015261053560c484016102bc565b60c083015260e4830135818111610145576105569060043691860101610357565b60e083015261056861010484016102dd565b610100830152610124830135908111610145576105a592610592610144926004369184010161038c565b6101208401520135610140820152610d93565b906105b560405192839283610478565b0390f35b3461014557600036600319011261014557602061ffff60005416604051908152f35b3461014557600319606036820112610145576001600160401b036024358181116101455761060d90369060040161038c565b60443592828411610145576040908436030112610145576040519161063183610260565b836004013590811161014557830192366023850112156101455760048401359361065a85610375565b90610668604051928361027b565b85825260209560248784019160051b8301019136831161014557602401905b8282106106b05750505060246105a595926106a4928652016102dd565b90830152600435611087565b8780916106bc846101b5565b815201910190610687565b90815180825260208080930193019160005b8281106106e7575050505090565b835180518652808301518684015260408082015160ff908116918801919091526060918201511690860152608090940193928101926001016106d9565b805160ff1682529060208281015163ffffffff169082015260408281015163ffffffff169082015260608281015161ffff16908201526080820151608082015261077e60a083015160a08301906001600160401b03169052565b60c08281015160ff16908201526107cc6107a760e08401516101608060e0860152840190610453565b6101008481015163ffffffff16908401526101208085015190848303908501526106c7565b916101408091015191015290565b34610145576020366003190112610145576004356001600160401b038111610145576108156108106105b5923690600401610357565b611307565b604051918291602083526020830190610724565b34610145576000366003190112610145576020600154604051908152f35b61085d6103729492606083526060830190610724565b92151560208201526040818403910152610453565b34610145576020366003190112610145576001600160401b036004358181116101455736602382011215610145578060040135918211610145573660248383010111610145576105b59160246108c89201610b33565b60409391935193849384610847565b34610145576020366003190112610145576001600160a01b036108f861019f565b166000526006602052602060ff604060002054166040519015158152f35b34610145576000366003190112610145576020600854604051904614158152f35b3461014557600036600319011261014557602060035463ffffffff60405191831c168152f35b3461014557602036600319011261014557602061097b60043561154a565b604051908152f35b3461014557602080600319360112610145576109a56109a06102ca565b610a29565b906040519080825260608201928051936040838501528451809152826080850195019060005b8181106109e7578385015163ffffffff16604087015285870386f35b82516001600160a01b0316875295840195918401916001016109cb565b3461014557600036600319011261014557602061ffff60005460101c16604051908152f35b604051610a3581610260565b6060815263ffffffff60009283602080940152168252600281526040822060405192610a6084610260565b6040518091848454928381520191848252858220915b818110610ab057505050610372939282610a97610aa494600194038261027b565b8652015463ffffffff1690565b63ffffffff1690830152565b82546001600160a01b031684529286019260019283019201610a76565b6040519061016082018281106001600160401b0382111761025b57604052816101406000918281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201528261010082015260606101208201520152565b61081090610b4b92610b43610acd565b503691610311565b90610b5582610cb6565b9091565b94929060339796949263ffffffff60e01b809260e01b16875260e01b16600486015261ffff60f01b9060f01b166008850152600a8401526001600160401b0360c01b9060c01b16602a83015260ff60f81b9060f81b166032820152610bc78251809360208685019101610430565b010190565b60405190602082018281106001600160401b0382111761025b5760405260008252565b60405190610bfc82610260565b601a82527f766d2e6861736820646f65736e2774206d6174636820626f64790000000000006020830152565b60405190610c3582610260565b60148252731a5b9d985b1a590819dd585c991a585b881cd95d60621b6020830152565b60405190610c6582610260565b601882527f677561726469616e2073657420686173206578706972656400000000000000006020830152565b60405190610c9e82610260565b60098252686e6f2071756f72756d60b81b6020830152565b6101008101610ccc6109a0825163ffffffff1690565b9081515115610d85575163ffffffff16610cf7610cee60035463ffffffff1690565b63ffffffff1690565b63ffffffff80921614159081610d68575b50610d5b576101208201805151610d2083515161154a565b11610d4d57610140610d36930151905190611087565b9015610d485750600190610372610bcc565b600091565b505050600090610372610c91565b5050600090610372610c58565b9050610d7b602083015163ffffffff1690565b4291161038610d08565b505050600090610372610c28565b610100810190610daa6109a0835163ffffffff1690565b90610dbc602082015163ffffffff1690565b604082015163ffffffff1690610dd7606084015161ffff1690565b91610e146080850151610df460a08701516001600160401b031690565b60c087015160ff169060e088015192604051978896602088019889610b59565b0391610e28601f199384810183528261027b565b51902090610e526040519182610e4660208201958660209181520190565b0390810183528261027b565b51902092610140820193845103610ef85782515115610ee9575163ffffffff16610e84610cee60035463ffffffff1690565b63ffffffff80921614159081610ecc575b50610ebe5761012001805151610eac83515161154a565b11610d4d57610d369251905190611087565b505050600090610372610c58565b9050610edf602084015163ffffffff1690565b4291161038610e95565b50505050600090610372610c28565b50505050600090610372610bef565b634e487b7160e01b600052601160045260246000fd5b6000198114610f2c5760010190565b610f07565b8051821015610f455760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b6040513d6000823e3d90fd5b15610f6e57565b60405162461bcd60e51b815260206004820152601f60248201527f65637265636f766572206661696c65642077697468207369676e6174757265006044820152606490fd5b15610fba57565b60405162461bcd60e51b815260206004820152602360248201527f7369676e617475726520696e6469636573206d75737420626520617363656e64604482015262696e6760e81b6064820152608490fd5b1561101257565b60405162461bcd60e51b815260206004820152601c60248201527f677561726469616e20696e646578206f7574206f6620626f756e6473000000006044820152606490fd5b6040519061106482610260565b60148252731593481cda59db985d1d5c99481a5b9d985b1a5960621b6020830152565b825151919260009291835b85518110156111bd576110a58187610f31565b51604060006110b78284015160ff1690565b8351602080860151945188815260ff93909316838201526040830191909152606082019390935281805260809060015afa156111b8576000516060919061111d906001600160a01b03169761110d891515610f67565b841590811561119b575b50610fb3565b019461117761116b61115e611133895160ff1690565b986111428960ff8c161061100b565b6111586111528951925160ff1690565b60ff1690565b90610f31565b516001600160a01b031690565b6001600160a01b031690565b0361118a5761118590610f1d565b611092565b505050505050600090610372611057565b90506111aa8484015160ff1690565b60ff91821691161138611117565b610f5b565b505050505050600190610372610bcc565b9060048201809211610f2c57565b9060018201809211610f2c57565b9060208201809211610f2c57565b9060028201809211610f2c57565b9060088201809211610f2c57565b90601f8201809211610f2c57565b91908201809211610f2c57565b1561123657565b60405162461bcd60e51b815260206004820152601760248201527f564d2076657273696f6e20696e636f6d70617469626c650000000000000000006044820152606490fd5b9061128582610375565b6040906112948251918261027b565b83815280936112a5601f1991610375565b019160005b8381106112b75750505050565b60209082516112c581610240565b6000815282600081830152600085830152600060608301528286010152016112aa565b60ff601b9116019060ff8211610f2c57565b91908203918211610f2c57565b90611310610acd565b9161132461131d826116b6565b60ff168452565b61133d600160ff611336865160ff1690565b161461122f565b61135761134982611785565b63ffffffff16610100850152565b61136361115282611701565b60069061136f8161127b565b9061012086019182526000915b8183106114a9575050509061149161147561145361143f611422611408876113b26113ab6114a29a8a516112fa565b828a61162a565b602081519101206040516113e0816113d260208201948560209181520190565b03601f19810183528261027b565b5190206101408c01526114036113f6828a6117d1565b63ffffffff1660208d0152565b6111ce565b61140361141582896117d1565b63ffffffff1660408c0152565b61143a61142f828861172d565b61ffff1660608b0152565b6111f8565b6114498186611845565b60808901526111ea565b61147061146082866117ed565b6001600160401b031660a0890152565b611206565b61148c6114828285611711565b60ff1660c0880152565b6111dc565b61149c8183516112fa565b9161162a565b60e0830152565b90919261153d61151b6114fc6114e08461148c6114c9611543978c611711565b60606114d68c8b51610f31565b51019060ff169052565b6114ea818a611845565b6114f5898851610f31565b51526111ea565b6115068189611845565b6020611513898851610f31565b5101526111ea565b61148c61153061152b838a611711565b6112e8565b60406114d6898851610f31565b93610f1d565b919061137c565b610100811015611573578060011b9080820460021490151715610f2c57600361037291046111dc565b60405162461bcd60e51b8152602060048201526012602482015271746f6f206d616e7920677561726469616e7360701b6044820152606490fd5b156115b457565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b156115f157565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b9161163f8161163881611214565b10156115ad565b611655835161164e8385611222565b11156115ea565b8061166e57505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b8084106116a35750508252601f01601f191660405290565b909283518152602080910193019061168b565b60018151106116c6576001015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b60068151106116c6576006015190565b9081516001820190818311610f2c57106116c657016001015190565b9081516002820190818311610f2c571061174957016002015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b6005815110611795576005015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606490fd5b9081516004820190818311610f2c571061179557016004015190565b9081516008820190818311610f2c571061180957016008015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606490fd5b9081516020820190818311610f2c571061186157016020015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fdfea2646970667358221220b1fbf75e40dd5356d53da9607e50e0880b5c579e15ae29290a996a0bc189ec5864736f6c6343000813003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50a26469706673582212200f0a6a941aa90530b782f6658348350f8234d31d62dfbf320cb507053c3af4e864736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "log_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "log_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "log_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly name: "log_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "val";
            readonly type: "address";
        }];
        readonly name: "log_named_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "val";
            readonly type: "bytes";
        }];
        readonly name: "log_named_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "val";
            readonly type: "bytes32";
        }];
        readonly name: "log_named_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }];
        readonly name: "log_named_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "val";
            readonly type: "string";
        }];
        readonly name: "log_named_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }];
        readonly name: "log_named_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "log_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "logs";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "IS_TEST";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "keyHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "arrayOffset";
            readonly type: "uint8";
        }];
        readonly name: "arrayElementLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "excludedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "failed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_key";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }];
        readonly name: "hashedLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_key";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }];
        readonly name: "hashedLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_key";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }];
        readonly name: "hashedLocationOffset";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "kevm";
        readonly outputs: readonly [{
            readonly internalType: "contract KEVMCheatsBase";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "setUp";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "storageSlot";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "content";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "mask";
            readonly type: "bytes32";
        }];
        readonly name: "storeWithMask";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifactSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedArtifactSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "targetedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "privateKeys";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianCount";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct TestMessagesRV.GuardianSetParams";
            readonly name: "params";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianIndex";
                readonly type: "uint8";
            }];
            readonly internalType: "struct Structs.Signature";
            readonly name: "fakeSignature";
            readonly type: "tuple";
        }];
        readonly name: "testCannotVerifySignaturesWithInvalidSignature1";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "privateKeys";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianCount";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct TestMessagesRV.GuardianSetParams";
            readonly name: "params";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint8";
            readonly name: "fakeGuardianIndex";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "fakeGuardianPrivateKey";
            readonly type: "uint256";
        }];
        readonly name: "testCannotVerifySignaturesWithInvalidSignature2";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "privateKeys";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianCount";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct TestMessagesRV.GuardianSetParams";
            readonly name: "params";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint8";
            readonly name: "outOfBoundsGuardian";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "outOfBoundsAmount";
            readonly type: "uint8";
        }];
        readonly name: "testCannotVerifySignaturesWithOutOfBoundsSignature";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "privateKeys";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianCount";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct TestMessagesRV.GuardianSetParams";
            readonly name: "params";
            readonly type: "tuple";
        }];
        readonly name: "testVerifySignatures";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "pk";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "validSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): TestMessagesRVInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestMessagesRV;
}
export {};
