import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockNFTImplementation, MockNFTImplementationInterface } from "../MockNFTImplementation";
declare type MockNFTImplementationConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockNFTImplementation__factory extends ContractFactory {
    constructor(...args: MockNFTImplementationConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockNFTImplementation>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockNFTImplementation;
    connect(signer: Signer): MockNFTImplementation__factory;
    static readonly bytecode = "0x608080604052346100165761198b908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461015757806303e728581461015257806306fdde031461014d578063081812fc14610148578063095ea7b3146101435780631f8cdb2b1461013e57806323b872dd146101395780633d6c043b1461013457806342842e0e1461012f57806342966c681461012a5780636352211e1461012557806370a08231146101205780638da5cb5b1461011b57806395d89b41146101165780639a8a059214610111578063a22cb4651461010c578063b88d4fde14610107578063c87b56dd14610102578063d3fc9864146100fd5763e985e9c5146100f857600080fd5b610ca2565b610b3f565b610a06565b6109a6565b6108ba565b610895565b6107f0565b6107c7565b610725565b610707565b61065b565b610621565b610603565b6105da565b610589565b61049c565b61046c565b610389565b6102bb565b610173565b6001600160e01b031981160361016e57565b600080fd5b3461016e57602036600319011261016e5760206004356101928161015c565b63ffffffff60e01b166380ac58cd60e01b81149081156101d0575b81156101bf575b506040519015158152f35b6301ffc9a760e01b149050386101b4565b635b5e139f60e01b811491506101ad565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761021957604052565b6101e1565b67ffffffffffffffff811161021957601f01601f191660200190565b9291926102468261021e565b9161025460405193846101f7565b82948184528183011161016e578281602093846000960137010152565b9080601f8301121561016e5781602061028c9335910161023a565b90565b600435906001600160a01b038216820361016e57565b602435906001600160a01b038216820361016e57565b3461016e5760a036600319011261016e5767ffffffffffffffff60043581811161016e576102ed903690600401610271565b9060243590811161016e57610306903690600401610271565b906044356001600160a01b038116810361016e576064359061ffff8216820361016e576103369360843593610cff565b005b919082519283825260005b848110610364575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610343565b90602061028c928181520190610338565b3461016e5760008060031936011261046957604051908080546103ab81610eaf565b8085529160019180831690811561043f57506001146103e5575b6103e1856103d5818703826101f7565b60405191829182610378565b0390f35b80809450527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106104275750505081016020016103d5826103e16103c5565b8054602085870181019190915290930192810161040c565b8695506103e1969350602092506103d594915060ff191682840152151560051b82010192936103c5565b80fd5b3461016e57602036600319011261016e57602061048a6004356112a8565b6040516001600160a01b039091168152f35b3461016e57604036600319011261016e576104b561028f565b6024356104c1816111be565b916001600160a01b03808416908216811461053a57610336936104ee9133149081156104f3575b50611236565b6117b8565b6001600160a01b03166000908152600660205260409020610534915061052d9033905b9060018060a01b0316600052602052604060002090565b5460ff1690565b386104e8565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b3461016e57600036600319011261016e57602060405160018152f35b606090600319011261016e576001600160a01b0390600435828116810361016e5791602435908116810361016e579060443590565b3461016e576103366105eb366105a5565b916105fe6105f9843361143b565b61133a565b611649565b3461016e57600036600319011261016e576020600854604051908152f35b3461016e5761062f366105a5565b60405191602083019383851067ffffffffffffffff8611176102195761033694604052600084526113a0565b3461016e57602036600319011261016e5760043560018060a01b0361068581600754163314611526565b61068e826111be565b61069783611764565b16906000918083526003602052604083209081546000198101908111610702578492558282526002602052604082206bffffffffffffffffffffffff60a01b81541690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a480f35b6115be565b3461016e57602036600319011261016e57602061048a6004356111be565b3461016e57602036600319011261016e576001600160a01b0361074661028f565b16801561076f5760005260036020526103e1604060002054604051918291829190602083019252565b60405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b3461016e57600036600319011261016e576007546040516001600160a01b039091168152602090f35b3461016e57600080600319360112610469576040519080600180549161081583610eaf565b8086529282811690811561043f575060011461083b576103e1856103d5818703826101f7565b92508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061087d5750505081016020016103d5826103e16103c5565b80546020858701810191909152909301928101610862565b3461016e57600036600319011261016e57602061ffff60075460a81c16604051908152f35b3461016e57604036600319011261016e576108d361028f565b602435801515810361016e576001600160a01b03821691338314610961578161091e61092f9233600052600660205260406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b604051901515815233907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b60405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606490fd5b3461016e57608036600319011261016e576109bf61028f565b6109c76102a5565b6064359167ffffffffffffffff831161016e573660238401121561016e576109fc61033693369060248160040135910161023a565b91604435916113a0565b3461016e5760208060031936011261016e576004356000818152600260205260409020549091906001600160a01b031615610ae35760009182526005815260408220906040519183815490610a5a82610eaf565b80865292600192808416908115610abf5750600114610a84575b6103e1866103d5818a03826101f7565b9080949650528483205b828410610aac57505050816103e1936103d592820101933880610a74565b8054858501870152928501928101610a8e565b60ff19168787015250505050151560051b82010191506103d5816103e13880610a74565b6084906040519062461bcd60e51b82526004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152fd5b3461016e57606036600319011261016e57610b5861028f565b6024359060443567ffffffffffffffff811161016e57610b7c903690600401610271565b9060018060a01b03610b9381600754163314611526565b8116918215610c5e57600084815260026020526040902054610c3692610c1d91610bc6906001600160a01b031615611572565b6001600160a01b0381166000908152600360205260409020610be881546115d4565b9055610bfe866000526002602052604060002090565b80546001600160a01b0319166001600160a01b03909216919091179055565b610c31846000526005602052604060002090565b611109565b60007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4005b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b3461016e57604036600319011261016e57602060ff610cf3610cc261028f565b610cca6102a5565b6001600160a01b0391821660009081526006865260408082209290931681526020919091522090565b54166040519015158152f35b60075460ff8160a01c16610e745760ff60a01b1916600160a01b17600755805167ffffffffffffffff811161021957600091610d4482610d3f8554610eaf565b610ee9565b60209081601f8411600114610dde5750938383610dcc9794610d8994610dd19b9a98610dab9892610dd3575b50508160011b916000199060031b1c1916179055611021565b60018060a01b03166bffffffffffffffffffffffff60a01b6007541617600755565b6007805461ffff60a81b191660a89290921b61ffff60a81b16919091179055565b600855565b565b015190503880610d70565b600080529190601f1984167f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639386905b828210610e5c57505084610d8994610dd19b9a9894610dab9894610dcc9b9860019510610e43575b505050811b019055611021565b015160001960f88460031b161c19169055388080610e36565b80600186978294978701518155019601940190610e0e565b60405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b90600182811c92168015610edf575b6020831014610ec957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610ebe565b601f8111610ef5575050565b6000908180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906020601f850160051c83019410610f4f575b601f0160051c01915b828110610f4457505050565b818155600101610f38565b9092508290610f2f565b90601f8211610f66575050565b6001916000908382527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906020601f850160051c83019410610fc3575b601f0160051c01915b828110610fb95750505050565b8181558301610fac565b9092508290610fa3565b90601f8111610fdb57505050565b600091825260208220906020601f850160051c83019410611017575b601f0160051c01915b82811061100c57505050565b818155600101611000565b9092508290610ff7565b90815167ffffffffffffffff811161021957600190611049816110448454610eaf565b610f59565b602080601f8311600114611084575081929394600092611079575b5050600019600383901b1c191690821b179055565b015190503880611064565b90601f198316956110b760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf690565b926000905b8882106110f257505083859697106110d9575b505050811b019055565b015160001960f88460031b161c191690553880806110cf565b8087859682949686015181550195019301906110bc565b919091825167ffffffffffffffff8111610219576111318161112b8454610eaf565b84610fcd565b602080601f831160011461116d575081929394600092611162575b50508160011b916000199060031b1c1916179055565b01519050388061114c565b90601f1983169561118385600052602060002090565b926000905b8882106111a6575050836001959697106110d957505050811b019055565b80600185968294968601518155019501930190611188565b6000908152600260205260409020546001600160a01b031680156111df5790565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608490fd5b1561123d57565b60405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608490fd5b6000818152600260205260409020546001600160a01b0316156112e0576000908152600460205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561134157565b60405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608490fd5b906113c49392916113b46105f9843361143b565b6113bf838383611649565b611892565b156113cb57565b60405162461bcd60e51b8152806113e4600482016113e8565b0390fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b6000828152600260205260409020546001600160a01b0316156114cc57611461826111be565b6001600160a01b0382811682821681149490919085156114b4575b505050821561148a57505090565b6001600160a01b0316600090815260066020526040902060ff92506114af9190610516565b541690565b6114c191929395506112a8565b16149138808061147c565b60405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608490fd5b1561152d57565b60405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606490fd5b1561157957565b60405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606490fd5b634e487b7160e01b600052601160045260246000fd5b906001820180921161070257565b60001981019190821161070257565b156115f857565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b90611653836111be565b6001600160a01b03838116929091821683900361170d576116a26116e69282169461167f8615156115f1565b61168887611764565b6001600160a01b0316600090815260036020526040902090565b6116ac81546115e2565b90556001600160a01b03811660009081526003602052604090206116d081546115d4565b9055610bfe856000526002602052604060002090565b7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608490fd5b600081815260046020526040812080546001600160a01b03191690556001600160a01b03611791836111be565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258280a4565b600082815260046020526040902080546001600160a01b0319166001600160a01b0383161790556001600160a01b03806117f1846111be565b169116907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4565b9081602091031261016e575161028c8161015c565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261028c92910190610338565b3d1561188d573d906118738261021e565b9161188160405193846101f7565b82523d6000602084013e565b606090565b92909190823b1561194c576118c5926020926000604051809681958294630a85bd0160e11b9a8b85523360048601611831565b03926001600160a01b03165af16000918161191c575b5061190e576118e8611862565b805190816119095760405162461bcd60e51b8152806113e4600482016113e8565b602001fd5b6001600160e01b0319161490565b61193e91925060203d8111611945575b61193681836101f7565b81019061181c565b90386118db565b503d61192c565b5050505060019056fea26469706673582212205c49bc0f3fc06ff37f2cc2e26aabc992bc7624f9b1813465567a27cde22eb5fa64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "approved";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "owner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "ApprovalForAll";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner_";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "burn";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "getApproved";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "name_";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "symbol_";
            readonly type: "string";
        }, {
            readonly internalType: "address";
            readonly name: "owner_";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "chainId_";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "nativeContract_";
            readonly type: "bytes32";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "owner_";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }];
        readonly name: "isApprovedForAll";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "string";
            readonly name: "uri";
            readonly type: "string";
        }];
        readonly name: "mint";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "nativeContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "ownerOf";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "safeTransferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "operator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "approved";
            readonly type: "bool";
        }];
        readonly name: "setApprovalForAll";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }];
        readonly name: "supportsInterface";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testNewImplementationActive";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "tokenURI";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "from";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MockNFTImplementationInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockNFTImplementation;
}
export {};
