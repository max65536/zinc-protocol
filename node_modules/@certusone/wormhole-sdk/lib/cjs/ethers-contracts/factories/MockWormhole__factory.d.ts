import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockWormhole, MockWormholeInterface } from "../MockWormhole";
declare type MockWormholeConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockWormhole__factory extends ContractFactory {
    constructor(...args: MockWormholeConstructorParams);
    deploy(initChainId: PromiseOrValue<BigNumberish>, initEvmChainId: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockWormhole>;
    getDeployTransaction(initChainId: PromiseOrValue<BigNumberish>, initEvmChainId: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockWormhole;
    connect(signer: Signer): MockWormhole__factory;
    static readonly bytecode = "0x60c03461007757601f611a1638819003918201601f19168301916001600160401b0383118484101761007c5780849260409485528339810103126100775780519061ffff8216820361007757602001519060805260a0526040516119839081610093823960805181610bb3015260a051816108180152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80630319e59c1461021857806304ca84cf14610213578063178149e71461020e5780631a90a219146102095780631cfe79511461019b5780631e5a28021461020457806323aa2a9d146101ff5780632c3c02a4146101fa5780634a12a763146101f55780634cf842b5146101f05780634fc608a3146101f05780634fdc60fa146101eb578063515f3247146101e65780635cb8cae2146101e157806364d42b17146101dc5780636606b4e0146101d75780638129fc1c146101d2578063875be02a146101cd57806393df337e146101c85780639a8a0592146101c3578063a0cce1b3146101be578063a9e11893146101b9578063b172b222146101b4578063b19a437e146101af578063c0fd8bde146101aa578063cb4cfea8146101a5578063d60b347f146101a0578063e039f2241461019b578063eb8d3f121461019b578063f42bc64114610196578063f8ce560a14610191578063f951975a1461018c5763fbe3c2cd1461018757600080fd5b611149565b6110cd565b6110bf565b611052565b610528565b61102d565b610fb7565b610f3c565b610e29565b610e0d565b610dd2565b610bd7565b610b98565b610b2c565b610a1c565b6108a9565b61083b565b610800565b610791565b61071c565b6106a5565b610662565b610607565b6105eb565b6105d8565b61058d565b61050a565b61049c565b6103fd565b61036c565b634e487b7160e01b600052604160045260246000fd5b60a081019081106001600160401b0382111761024e57604052565b61021d565b608081019081106001600160401b0382111761024e57604052565b604081019081106001600160401b0382111761024e57604052565b90601f801991011681019081106001600160401b0382111761024e57604052565b6040519061016082018281106001600160401b0382111761024e57604052565b604051906102d782610253565b565b9291926001600160401b03821161024e5760405191610302601f8201601f191660200184610289565b82948184528183011161031f578281602093846000960137010152565b600080fd5b9080601f8301121561031f5781602061033f933591016102d9565b90565b602060031982011261031f57600435906001600160401b03821161031f5761033f91600401610324565b3461031f5761037a36610342565b506000608060405161038b81610233565b8281528260208201528260408201528260608201520152608460405162461bcd60e51b815260206004820152602e60248201527f756e737570706f727465642070617273655472616e736665724665657320696e60448201526d20776f726d686f6c65206d6f636b60901b6064820152fd5b3461031f5761040b36610342565b506000608060405161041c81610233565b828152826020820152826040820152610433611885565b6060820152015260405162461bcd60e51b815260206004820152603460248201527f756e737570706f72746564207061727365477561726469616e5365745570677260448201527361646520696e20776f726d686f6c65206d6f636b60601b6064820152608490fd5b3461031f576104aa36610342565b5060405162461bcd60e51b815260206004820152603160248201527f756e737570706f72746564207375626d69745265636f766572436861696e496460448201527020696e20776f726d686f6c65206d6f636b60781b6064820152608490fd5b3461031f57600036600319011261031f576020600254604051908152f35b3461031f57600036600319011261031f57602060405160008152f35b90602060031983011261031f576004356001600160401b039283821161031f578060238301121561031f57816004013593841161031f576024848301011161031f576024019190565b3461031f576101406105a76105a136610544565b906112e1565b015160005260016020526040600020600160ff19825416179055600080f35b602090600319011261031f5760043590565b3461031f576105e6366105c6565b600255005b3461031f57602036600319011261031f57602060405160008152f35b3461031f57602036600319011261031f576004356000526001602052602060ff604060002054166040519015158152f35b600435906001600160a01b038216820361031f57565b35906001600160a01b038216820361031f57565b3461031f57602036600319011261031f576001600160a01b03610683610638565b16600052600060205260206001600160401b0360406000205416604051908152f35b3461031f576106b336610342565b506106bc6116a4565b5060405162461bcd60e51b815260206004820152603160248201527f756e737570706f72746564207061727365436f6e74726163745570677261646560448201527020696e20776f726d686f6c65206d6f636b60781b6064820152608490fd5b3461031f5761072a36610342565b506107336116a4565b5060405162461bcd60e51b815260206004820152602f60248201527f756e737570706f727465642070617273655365744d657373616765466565206960448201526e6e20776f726d686f6c65206d6f636b60881b6064820152608490fd5b3461031f5761079f36610342565b5060405162461bcd60e51b815260206004820152603260248201527f756e737570706f72746564207375626d6974436f6e74726163745570677261646044820152716520696e20776f726d686f6c65206d6f636b60701b6064820152608490fd5b3461031f57600036600319011261031f5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b3461031f5761084936610342565b5060405162461bcd60e51b815260206004820152603160248201527f756e737570706f72746564207375626d69744e6577477561726469616e53657460448201527020696e20776f726d686f6c65206d6f636b60781b6064820152608490fd5b3461031f57600036600319011261031f57005b6044359060ff8216820361031f57565b359060ff8216820361031f57565b6004359063ffffffff8216820361031f57565b359063ffffffff8216820361031f57565b359061ffff8216820361031f57565b35906001600160401b038216820361031f57565b6001600160401b03811161024e5760051b60200190565b81601f8201121561031f5780359061094f82610921565b9260409261095f84519586610289565b808552602091828087019260071b8501019381851161031f578301915b84831061098c5750505050505090565b60808383031261031f578360809187516109a581610253565b8535815282860135838201526109bc8987016108cc565b8982015260606109cd8188016108cc565b9082015281520192019161097c565b919082519283825260005b848110610a08575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016109e7565b3461031f5760031960203682011261031f576004356001600160401b039182821161031f5761016090823603011261031f57610a566102aa565b91610a63826004016108cc565b8352610a71602483016108ed565b6020840152610a82604483016108ed565b6040840152610a93606483016108fe565b606084015260848201356080840152610aae60a4830161090d565b60a0840152610abf60c483016108cc565b60c084015260e482013581811161031f57610ae09060043691850101610324565b60e0840152610af261010483016108ed565b61010084015261012482013590811161031f5761014091610b1c6101449260043691840101610938565b610120850152013591015261189f565b3461031f57610b3a36610342565b5060405162461bcd60e51b815260206004820152602f60248201527f756e737570706f72746564207375626d69745472616e7366657246656573206960448201526e6e20776f726d686f6c65206d6f636b60881b6064820152608490fd5b3461031f57600036600319011261031f57602060405161ffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b3461031f5760031960603682011261031f576001600160401b039060243582811161031f57610c0a903690600401610938565b506044359082821161031f57604090823603011261031f5760405191610c2f8361026e565b816004013590811161031f578101903660238301121561031f57600482013591610c5883610921565b90610c666040519283610289565b83825260209360248584019160051b8301019136831161031f576024869101915b838310610ca7578782610c9f602489898552016108ed565b9101526118f2565b8190610cb28461064e565b8152019101908590610c87565b90815180825260208080930193019160005b828110610cdf575050505090565b835180518652808301518684015260408082015160ff90811691880191909152606091820151169086015260809094019392810192600101610cd1565b805160ff1682529060208281015163ffffffff169082015260408281015163ffffffff169082015260608281015161ffff169082015260808201516080820152610d7660a083015160a08301906001600160401b03169052565b60c08281015160ff1690820152610dc4610d9f60e08401516101608060e08601528401906109dc565b6101008481015163ffffffff1690840152610120808501519084830390850152610cbf565b916101408091015191015290565b3461031f57610e09610df5610de636610544565b90610def6111d4565b506112e1565b604051918291602083526020830190610d1c565b0390f35b3461031f57600036600319011261031f57602060405160048152f35b606036600319011261031f57610e3d6108da565b6024356001600160401b03811161031f57610e5c903690600401610324565b610e646108bc565b916002543403610f09577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2610e0993336000526000602052604060002093610eda610eb686546001600160401b031690565b95610ec08761117b565b6001600160401b03166001600160401b0319825416179055565b610eec60405192839233968885611198565b0390a26040516001600160401b0390911681529081906020820190565b60405162461bcd60e51b815260206004820152600b60248201526a696e76616c69642066656560a81b6044820152606490fd5b3461031f57610f4d610de636610544565b610140810151600052600160205260ff6040600020541615906040519160208301908382106001600160401b0383111761024e57610fa493610e099260405260008152604051948594606086526060860190610d1c565b91602085015283820360408501526109dc565b3461031f57610fc536610342565b50610fce6116a4565b5060405162461bcd60e51b815260206004820152603060248201527f756e737570706f727465642070617273655265636f766572436861696e49642060448201526f696e20776f726d686f6c65206d6f636b60801b6064820152608490fd5b3461031f57602036600319011261031f57611046610638565b50602060405160018152f35b3461031f5761106036610342565b5060405162461bcd60e51b815260206004820152603060248201527f756e737570706f72746564207375626d69745365744d6573736167654665652060448201526f696e20776f726d686f6c65206d6f636b60801b6064820152608490fd5b3461031f57611046366105c6565b3461031f57602036600319011261031f576110e66108da565b506110ef611885565b5060405162461bcd60e51b815260206004820152602b60248201527f756e737570706f7274656420676574477561726469616e53657420696e20776f60448201526a726d686f6c65206d6f636b60a81b6064820152608490fd5b3461031f57600036600319011261031f57602060405160018152f35b634e487b7160e01b600052601160045260246000fd5b6001600160401b038091169081146111935760010190565b611165565b926111cd9063ffffffff6060946001600160401b0360ff959998991687521660208601526080604086015260808501906109dc565b9416910152565b6040519061016082018281106001600160401b0382111761024e57604052816101406000918281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201528261010082015260606101208201520152565b906004820180921161119357565b906002820180921161119357565b906020820180921161119357565b906008820180921161119357565b906001820180921161119357565b603901908160391161119357565b1561129557565b60405162461bcd60e51b815260206004820152600c60248201526b1d9b481d1bdbc81cdb585b1b60a21b6044820152606490fd5b9093929384831161031f57841161031f578101920390565b91906112eb6111d4565b926112f9603983101561128e565b6113043683836102d9565b61130d906114a6565b60ff16845261131d3683836102d9565b61132690611575565b63ffffffff1661010085015261133c8282611764565b929061012086015280611351818581866112c9565b369061135c926102d9565b93806113693684876102d9565b90611373916115c1565b63ffffffff1660208801526113879061123a565b806113933684876102d9565b9061139d916115c1565b63ffffffff1660408801526113b19061123a565b806113bd3684876102d9565b906113c79161151d565b61ffff1660608801526113d990611248565b806113e53684876102d9565b906113ef91611635565b60808801526113fd90611256565b806114093684876102d9565b90611413916115dd565b6001600160401b031660a088015261142a90611264565b806114363684876102d9565b9061144091611501565b60ff1660c088015261145190611272565b9061145b936112c9565b3690611466926102d9565b60e084015280519060200120604051806020810192611489908460209181520190565b03601f198101825261149b9082610289565b519020610140830152565b60018151106114b6576001015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b60068151106114b6576006015190565b908151600182019081831161119357106114b657016001015190565b9081516002820190818311611193571061153957016002015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b6005815110611585576005015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606490fd5b9081516004820190818311611193571061158557016004015190565b908151600882019081831161119357106115f957016008015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606490fd5b9081516020820190818311611193571061165157016020015190565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b9060428202918083046042149015171561119357565b604051906116b182610253565b60006060838281528260208201528260408201520152565b906116d382610921565b6116e06040519182610289565b82815280926116f1601f1991610921565b019060005b82811061170257505050565b60209061170d6116a4565b828285010152016116f6565b60001981146111935760010190565b60ff601b9116019060ff821161119357565b805182101561174e5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919061178261177c6117773684876102d9565b6114f1565b60ff1690565b6006936117a16117996117948461168e565b611280565b84101561128e565b6117aa826116c9565b9260005b8381106117bd57505050509190565b61188090876118656117e56117df6118349b6117da36898b6102d9565b611501565b92611272565b9161185b8761184061183a6118276118218b61180c6118176118118c61180c36868c6102d9565b611635565b9b611256565b96879236916102d9565b93611256565b9e8f6117da368d8f6102d9565b9e611272565b9d611728565b906118496102ca565b958652602086015260ff166040850152565b60ff166060830152565b61186f828861173a565b5261187a818761173a565b50611719565b6117ae565b604051906118928261026e565b6000602083606081520152565b60405162461bcd60e51b815260206004820152602560248201527f756e737570706f7274656420766572696679564d20696e20776f726d686f6c65604482015264206d6f636b60d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602d60248201527f756e737570706f72746564207665726966795369676e61747572657320696e2060448201526c776f726d686f6c65206d6f636b60981b6064820152608490fdfea264697066735822122009f85f64413c1df57a219fe0b6d3aaeed8e58701543acbc31e92585e870eaad064736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "initChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "initEvmChainId";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldContract";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newContract";
            readonly type: "address";
        }];
        readonly name: "ContractUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "index";
            readonly type: "uint32";
        }];
        readonly name: "GuardianSetAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "sender";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "consistencyLevel";
            readonly type: "uint8";
        }];
        readonly name: "LogMessagePublished";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "evmChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getCurrentGuardianSetIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly name: "getGuardianSet";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address[]";
                readonly name: "keys";
                readonly type: "address[]";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct IWormhole.GuardianSet";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getGuardianSetExpiry";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "governanceActionIsConsumed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "invalidVMs";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "invalidateVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isFork";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "messageFee";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "emitter";
            readonly type: "address";
        }];
        readonly name: "nextSequence";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "parseAndVerifyVM";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm";
            readonly type: "tuple";
        }, {
            readonly internalType: "bool";
            readonly name: "valid";
            readonly type: "bool";
        }, {
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "parseContractUpgrade";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chain";
                readonly type: "uint16";
            }, {
                readonly internalType: "address";
                readonly name: "newContract";
                readonly type: "address";
            }];
            readonly internalType: "struct IWormhole.ContractUpgrade";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "parseGuardianSetUpgrade";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chain";
                readonly type: "uint16";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address[]";
                    readonly name: "keys";
                    readonly type: "address[]";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "expirationTime";
                    readonly type: "uint32";
                }];
                readonly internalType: "struct IWormhole.GuardianSet";
                readonly name: "newGuardianSet";
                readonly type: "tuple";
            }, {
                readonly internalType: "uint32";
                readonly name: "newGuardianSetIndex";
                readonly type: "uint32";
            }];
            readonly internalType: "struct IWormhole.GuardianSetUpgrade";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "parseRecoverChainId";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "evmChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint16";
                readonly name: "newChainId";
                readonly type: "uint16";
            }];
            readonly internalType: "struct IWormhole.RecoverChainId";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "parseSetMessageFee";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint256";
                readonly name: "messageFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct IWormhole.SetMessageFee";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "parseTransferFees";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "recipient";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.TransferFees";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "parseVM";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint8";
            readonly name: "consistencyLevel";
            readonly type: "uint8";
        }];
        readonly name: "publishMessage";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "quorum";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "sequences";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newFee";
            readonly type: "uint256";
        }];
        readonly name: "setMessageFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "submitContractUpgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "submitNewGuardianSet";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "submitRecoverChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "submitSetMessageFee";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "submitTransferFees";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }, {
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "r";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "s";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "v";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint8";
                readonly name: "guardianIndex";
                readonly type: "uint8";
            }];
            readonly internalType: "struct IWormhole.Signature[]";
            readonly name: "";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "address[]";
                readonly name: "keys";
                readonly type: "address[]";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct IWormhole.GuardianSet";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly name: "verifySignatures";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }, {
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly name: "verifyVM";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }, {
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): MockWormholeInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockWormhole;
}
export {};
