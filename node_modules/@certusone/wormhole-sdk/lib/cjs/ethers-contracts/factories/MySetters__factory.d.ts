import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MySetters, MySettersInterface } from "../MySetters";
declare type MySettersConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MySetters__factory extends ContractFactory {
    constructor(...args: MySettersConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MySetters>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MySetters;
    connect(signer: Signer): MySetters__factory;
    static readonly bytecode = "0x608080604052346100165761033f908161001c8239f35b600080fdfe60406080815260048036101561001457600080fd5b600091823560e01c908163197dcb50146102c2578163422e6ea31461026457816369102381146102375781636c2912d81461021d5781636fb7f5261461020357816372021b13146101a5578163b7078cdb1461016a578163c2667eb2146100fd57508063ce4bff29146100cb5763dbbd37f21461009057600080fd5b346100c75760203660031901126100c7573561ffff811681036100c75763ffff000082549160101b169063ffff0000191617815580f35b5080fd5b50346100c75760203660031901126100c7573563ffffffff81168091036100c75763ffffffff19600354161760035580f35b839150346100c75760203660031901126100c75782359063ffffffff908183168093036101665762015180824216019282841161015357845260026020528320600101805463ffffffff19169190921617905580f35b634e487b7160e01b855260118652602485fd5b8380fd5b8390346100c75760203660031901126100c7576001600160a01b0361018d6102ee565b16825260066020528120805460ff1916600117905580f35b9050346101ff57806003193601126101ff576101bf6102ee565b916024359267ffffffffffffffff84168094036101fb576001600160a01b031684526020528220805467ffffffffffffffff1916909117905580f35b8480fd5b8280fd5b5050346100c75760203660031901126100c7573560075580f35b5050346100c75760203660031901126100c7573560015580f35b5050346100c75760203660031901126100c7573561ffff81168091036100c757815461ffff191617815580f35b919050346101ff5760203660031901126101ff5780359146830361028a57505060085580f35b906020606492519162461bcd60e51b835282015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152fd5b919050346101ff5760203660031901126101ff5735825260056020528120805460ff1916600117905580f35b600435906001600160a01b038216820361030457565b600080fdfea264697066735822122005baf306861eb4a53f3a15267123ed216379db24ed50711319427207f2de614464736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "index";
            readonly type: "uint32";
        }];
        readonly name: "expireGuardianSet_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "setChainId_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }];
        readonly name: "setEvmChainId_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "setGovernanceActionConsumed_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "setGovernanceChainId_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "governanceContract";
            readonly type: "bytes32";
        }];
        readonly name: "setGovernanceContract_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "setInitialized_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newFee";
            readonly type: "uint256";
        }];
        readonly name: "setMessageFee_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "emitter";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly name: "setNextSequence_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "newIndex";
            readonly type: "uint32";
        }];
        readonly name: "updateGuardianSetIndex_external";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): MySettersInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MySetters;
}
export {};
