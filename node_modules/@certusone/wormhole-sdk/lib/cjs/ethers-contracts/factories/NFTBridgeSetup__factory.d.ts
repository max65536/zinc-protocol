import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NFTBridgeSetup, NFTBridgeSetupInterface } from "../NFTBridgeSetup";
declare type NFTBridgeSetupConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class NFTBridgeSetup__factory extends ContractFactory {
    constructor(...args: NFTBridgeSetupConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<NFTBridgeSetup>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): NFTBridgeSetup;
    connect(signer: Signer): NFTBridgeSetup__factory;
    static readonly bytecode = "0x608080604052346100165761028c908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c63363ce96b1461002a57600080fd5b3461025257610100366003190112610252576001600160a01b03600435818116929183820361024e576024359261ffff80851680950361024a57604435948386168096036102465760643591821682036102465760a4359384168094036102465760c43560ff811681036102425760e43594600254946bffffffffffffffffffffffff60a01b98898c5416178b556084356003558115610200575063ffff0000929164ff000000009189600154161760015560201b169364ffffffffff1916179160101b1617176002554681036101c657600b553b1561016b57817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a28152600660205260408120805460ff1916600117905580f35b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b60405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606490fd5b62461bcd60e51b815260206004820152601e60248201527f696e76616c696420696d706c656d656e746174696f6e206164647265737300006044820152606490fd5b8880fd5b8780fd5b8680fd5b8480fd5b5080fdfea26469706673582212209e6cc38243a94f623b83f8391032be52d8a2777895565397f3e5c7c1bddfca5264736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "wormhole";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "governanceChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "governanceContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "tokenImplementation";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "finality";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }];
        readonly name: "setup";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): NFTBridgeSetupInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): NFTBridgeSetup;
}
export {};
