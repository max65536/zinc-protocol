import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TestUtils, TestUtilsInterface } from "../TestUtils";
declare type TestUtilsConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class TestUtils__factory extends ContractFactory {
    constructor(...args: TestUtilsConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<TestUtils>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): TestUtils;
    connect(signer: Signer): TestUtils__factory;
    static readonly bytecode = "0x6080806040523461002d57600160ff1981816000541617600055600454161760045561110990816100338239f35b600080fdfe6080806040526004908136101561001557600080fd5b600091823560e01c9182630426fc2214610c17575081631ea5127214610be25781631ed7831c14610b635781633e5e3c2314610ae45781633f7286f414610a655781633fa0e7391461091b57816366d9a9a01461079e5781637d052ede1461075757816385226c8114610634578163916a17c6146103d957816392d812d01461037d578163b5508aa914610246578163ba414fa614610221578163d6a2ec76146101f2578163e20c9f7114610163578163f864deb014610103575063fa7626d4146100df57600080fd5b3461010057806003193601126101005760ff60209154166040519015158152f35b80fd5b90503461015f57606036600319011261015f57359063ffffffff8216809203610100576020610157836040519083820190815260243560408301526040825261014b82610f48565b60443591519020610f86565b604051908152f35b5080fd5b8234610100578060031936011261010057604051600c80548083529083526020808301937fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c792915b8282106101d2576101ce856101c281890382610f64565b60405191829182610d70565b0390f35b83546001600160a01b0316865294850194600193840193909101906101ab565b82346101005780600319360112610100576020604051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b8234610100578060031936011261010057602061023c610fa9565b6040519015158152f35b8234610100578060031936011261010057601054610263816110bb565b916102716040519384610f64565b818352601081528060207f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6728186015b8584106102b557604051806101ce8982610eb4565b604051859183549160019280841c908481168015610373575b888310811461035f5782845288949392918115610343575060011461030b575b506102fd816001960382610f64565b8152019201930192906102a0565b868a52838a20955089905b80821061032c57508101830194506102fd6102ee565b865483830186015295850195889490910190610316565b60ff19168584015250151560051b8101830194506102fd6102ee565b50634e487b7160e01b8a5260228d5260248afd5b91607f16916102ce565b8234610100576040366003190112610100576020610399610d55565b604080516001600160a01b03909216838301908152602435602082015291906103ce908290840103601f198101835282610f64565b519020604051908152f35b82346101005780600319360112610100576013546103f6816110bb565b906104046040519283610f64565b80825260138352827f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090602084015b83831061044757604051806101ce8782610dfc565b60405161045381610f16565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b8160078401106105c657846001979460029794602097946104de9454918181106105aa575b81811061058e575b818110610572575b818110610556575b81811061053a575b81811061051e575b818110610504575b106104f0575b500382610f64565b83820152815201920192019190610432565b6001600160e01b031916815286018e6104d6565b828a1b6001600160e01b0319168452928901928b016104d0565b604083901b6001600160e01b0319168452928901928b016104c8565b606083901b6001600160e01b0319168452928901928b016104c0565b608083901b6001600160e01b0319168452928901928b016104b8565b60a083901b6001600160e01b0319168452928901928b016104b0565b60c083901b6001600160e01b0319168452928901928b016104a8565b60e083901b6001600160e01b0319168452928901928b016104a0565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e082015201940192019161047b565b8234610100578060031936011261010057601154610651816110bb565b9161065f6040519384610f64565b818352601181528060207f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c688186015b8584106106a357604051806101ce8982610eb4565b604051859183549160019280841c90848116801561074d575b888310811461035f578284528894939291811561073157506001146106f9575b506106eb816001960382610f64565b81520192019301929061068e565b868a52838a20955089905b80821061071a57508101830194506106eb6106dc565b865483830186015295850195889490910190610704565b60ff19168584015250151560051b8101830194506106eb6106dc565b91607f16916106bc565b90503461015f57604036600319011261015f576024359160ff831680930361010057602061015784846040518481019135825284815261079681610f16565b519020610f86565b82346101005780600319360112610100576012546107bb816110bb565b906107c96040519283610f64565b80825260128352827fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec3444602084015b83831061080c57604051806101ce8782610dfc565b60405161081881610f16565b82546001600160a01b031681526040516001840180548083529089526020808a20908301918a915b8160078401106108ad578460019794600297946020979461089b9454918181106105aa5781811061058e57818110610572578181106105565781811061053a5781811061051e5781811061050457106104f057500382610f64565b838201528152019201920191906107f7565b926001610100600892865463ffffffff60e01b90818160e01b16835260c08282821b16602085015260a08383821b1660408601526080848460608282851b16818a01521b1690860152838360401b1690850152828260201b16908401521660e0820152019401920191610840565b8234610100576040366003190112610100576040516338d07aa960e21b8152823583820152602480359082015290606082604481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa8015610a58578182938392610a0b575b5060ff601a199116019060ff82116109f85760408051602081019590955284015260f81b6001600160f81b031916606083015260418252608082019267ffffffffffffffff8411838510176109e55750508160405260208252607f19906109e060a0820182610dd7565b030190f35b634e487b7160e01b825260419052602490fd5b634e487b7160e01b835260118552602483fd5b935050506060823d8211610a50575b81610a2760609383610f64565b810103126101005781519160ff8316830361015f57604060208201519101519290929085610976565b3d9150610a1a565b50604051903d90823e3d90fd5b8234610100578060031936011261010057604051600e80548083529083526020808301937fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd92915b828210610ac4576101ce856101c281890382610f64565b83546001600160a01b031686529485019460019384019390910190610aad565b8234610100578060031936011261010057604051600f80548083529083526020808301937f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80292915b828210610b43576101ce856101c281890382610f64565b83546001600160a01b031686529485019460019384019390910190610b2c565b8234610100578060031936011261010057604051600d80548083529083526020808301937fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb592915b828210610bc2576101ce856101c281890382610f64565b83546001600160a01b031686529485019460019384019390910190610bab565b90503461015f57604036600319011261015f57602090604051828101913582526024356040820152604081526103ce81610f48565b83903461015f57608036600319011261015f57610c32610d55565b630667f9d760e41b82526001600160a01b038116848301908152602435602082018190529193919083906040010392602081737109709ecfa91a80626ff3989d68f67f5b1dd12d9581875afa908115610d4a578391610d19575b50606435166044351793833b15610d155790606483928360405196879485936370ca10bb60e01b855260018060a01b03168b85015260248401528860448401525af18015610a5857610ce4575b602083604051908152f35b67ffffffffffffffff8211610d025750602092506040528280610cd9565b634e487b7160e01b815260418452602490fd5b8280fd5b90506020813d8211610d42575b81610d3360209383610f64565b81010312610d15575186610c8c565b3d9150610d26565b6040513d85823e3d90fd5b600435906001600160a01b0382168203610d6b57565b600080fd5b6020908160408183019282815285518094520193019160005b828110610d97575050505090565b83516001600160a01b031685529381019392810192600101610d89565b60005b838110610dc75750506000910152565b8181015183820152602001610db7565b90602091610df081518092818552858086019101610db4565b601f01601f1916010190565b602080820190808352835180925260409283810182858560051b840101960194600080935b868510610e3357505050505050505090565b909192939480969798603f198382030186528951826060818885019360018060a01b038151168652015193888382015284518094520192019085905b808210610e905750505090806001929a019501950193969594929190610e21565b82516001600160e01b03191684528a94938401939092019160019190910190610e6f565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610ee85750505050505090565b9091929394958480610f06600193603f198682030187528a51610dd7565b9801930193019194939290610ed8565b6040810190811067ffffffffffffffff821117610f3257604052565b634e487b7160e01b600052604160045260246000fd5b6060810190811067ffffffffffffffff821117610f3257604052565b90601f8019910116810190811067ffffffffffffffff821117610f3257604052565b91908201809211610f9357565b634e487b7160e01b600052601160045260246000fd5b6000805460081c60ff1615610fc2575460081c60ff1690565b80737109709ecfa91a80626ff3989d68f67f5b1dd12d803b610fe357505090565b908080935060405192602093828582018381526519985a5b195960d21b60408401526040835261101283610f48565b611049602460405180936110398b830197630667f9d760e41b895251809285850190610db4565b8101036004810184520182610f64565b51925af1503d156110b4573d67ffffffffffffffff81116110a0576040519061107b601f8201601f1916840183610f64565b81523d838383013e5b8181805181010312610d15570151908115158203610100575090565b634e487b7160e01b83526041600452602483fd5b6060611084565b67ffffffffffffffff8111610f325760051b6020019056fea2646970667358221220467c3f77ddbfbe2a0447f215632c05f11a46c575af123f6f855134e7741979a464736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "log_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "log_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "log_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "";
            readonly type: "int256";
        }];
        readonly name: "log_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "val";
            readonly type: "address";
        }];
        readonly name: "log_named_address";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256[]";
            readonly name: "val";
            readonly type: "uint256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256[]";
            readonly name: "val";
            readonly type: "int256[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "address[]";
            readonly name: "val";
            readonly type: "address[]";
        }];
        readonly name: "log_named_array";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "val";
            readonly type: "bytes";
        }];
        readonly name: "log_named_bytes";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "val";
            readonly type: "bytes32";
        }];
        readonly name: "log_named_bytes32";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "decimals";
            readonly type: "uint256";
        }];
        readonly name: "log_named_decimal_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "int256";
            readonly name: "val";
            readonly type: "int256";
        }];
        readonly name: "log_named_int";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "val";
            readonly type: "string";
        }];
        readonly name: "log_named_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "key";
            readonly type: "string";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "val";
            readonly type: "uint256";
        }];
        readonly name: "log_named_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly name: "log_string";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "log_uint";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly name: "logs";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "IS_TEST";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "keyHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "arrayOffset";
            readonly type: "uint8";
        }];
        readonly name: "arrayElementLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "excludedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "excludeSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "excludedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "failed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_key";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }];
        readonly name: "hashedLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_key";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }];
        readonly name: "hashedLocation";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_key";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_index";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "offset";
            readonly type: "uint256";
        }];
        readonly name: "hashedLocationOffset";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "kevm";
        readonly outputs: readonly [{
            readonly internalType: "contract KEVMCheatsBase";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "storageSlot";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "content";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "mask";
            readonly type: "bytes32";
        }];
        readonly name: "storeWithMask";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifactSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedArtifactSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetArtifacts";
        readonly outputs: readonly [{
            readonly internalType: "string[]";
            readonly name: "targetedArtifacts_";
            readonly type: "string[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetContracts";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedContracts_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSelectors";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "addr";
                readonly type: "address";
            }, {
                readonly internalType: "bytes4[]";
                readonly name: "selectors";
                readonly type: "bytes4[]";
            }];
            readonly internalType: "struct StdInvariant.FuzzSelector[]";
            readonly name: "targetedSelectors_";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "targetSenders";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "targetedSenders_";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "pk";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "validSignature";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): TestUtilsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TestUtils;
}
export {};
