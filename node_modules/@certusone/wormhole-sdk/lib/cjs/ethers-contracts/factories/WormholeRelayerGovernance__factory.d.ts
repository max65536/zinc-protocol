import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { WormholeRelayerGovernance, WormholeRelayerGovernanceInterface } from "../WormholeRelayerGovernance";
export declare class WormholeRelayerGovernance__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "registeredWormholeRelayerContract";
            readonly type: "bytes32";
        }];
        readonly name: "ChainAlreadyRegistered";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "failure";
            readonly type: "bytes";
        }];
        readonly name: "ContractUpgradeFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "GovernanceActionAlreadyConsumed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "defaultDeliveryProvider";
            readonly type: "bytes32";
        }];
        readonly name: "InvalidDefaultDeliveryProvider";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidFork";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "parsed";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "expected";
            readonly type: "uint16";
        }];
        readonly name: "InvalidGovernanceChainId";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "parsed";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "expected";
            readonly type: "bytes32";
        }];
        readonly name: "InvalidGovernanceContract";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "InvalidGovernanceVM";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "parsed";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "expected";
            readonly type: "uint8";
        }];
        readonly name: "InvalidPayloadAction";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "parsed";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "expected";
            readonly type: "uint16";
        }];
        readonly name: "InvalidPayloadChainId";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "received";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "InvalidPayloadLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "parsed";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "expected";
            readonly type: "bytes32";
        }];
        readonly name: "InvalidPayloadModule";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly name: "NotAnEvmAddress";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldContract";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newContract";
            readonly type: "address";
        }];
        readonly name: "ContractUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "LocalNative";
            readonly name: "deliveryQuote";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "LocalNative";
            readonly name: "paymentForExtraReceiverValue";
            readonly type: "uint256";
        }];
        readonly name: "SendEvent";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "checkAndExecuteUpgradeMigration";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "deliveryAttempted";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "attempted";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "deliveryFailureBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "deliverySuccessBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "getRegisteredWormholeRelayerContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "registerWormholeRelayerContract";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "setDefaultDeliveryProvider";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "submitContractUpgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): WormholeRelayerGovernanceInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): WormholeRelayerGovernance;
}
