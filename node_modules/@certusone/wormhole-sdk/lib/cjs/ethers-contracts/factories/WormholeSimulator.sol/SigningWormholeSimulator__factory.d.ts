import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { SigningWormholeSimulator, SigningWormholeSimulatorInterface } from "../../WormholeSimulator.sol/SigningWormholeSimulator";
declare type SigningWormholeSimulatorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class SigningWormholeSimulator__factory extends ContractFactory {
    constructor(...args: SigningWormholeSimulatorConstructorParams);
    deploy(wormhole_: PromiseOrValue<string>, devnetGuardian: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<SigningWormholeSimulator>;
    getDeployTransaction(wormhole_: PromiseOrValue<string>, devnetGuardian: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): SigningWormholeSimulator;
    connect(signer: Signer): SigningWormholeSimulator__factory;
    static readonly bytecode = "0x608080604052346200067657600060408262001ce08038038091620000258285620006ab565b833981010312620006735781516001600160a01b0381169290839003620004ba5760209081015182546001600160a01b0319168417835560018190556040516001625e79b760e01b03198152600481019190915292908360248160008051602062001cc08339815191525afa928315620004975782936200062f575b50604051631cfe795160e01b815290602082600481845afa918215620004be578392620005eb575b506040805163ffffffff8416602082019081526002828401529181529060608201906001600160401b038211838310176200046157816040528251902092630667f9d760e41b8252606483015282608483015260208160448160008051602062001cc08339815191525afa918215620004df578592620005b6575b505060015b818110620004ea57505060018060a01b038354169060405160208101908282526020815262000178816200068f565b5190206001600160a01b039095169460008051602062001cc08339815191523b156200047557604051906370ca10bb60e01b938483526004830152602482015285604482015284816064818360008051602062001cc08339815191525af18015620004df57620004c9575b5083546001600160a01b031660008051602062001cc08339815191523b156200047557604051928352600483015260248201526001604482015282816064818360008051602062001cc08339815191525af18015620004be57908391620004a2575b508054604051637ca8cbad60e11b815263ffffffff939093166004840152829060249082906001600160a01b03165afa908115620004975782916200035c575b50519060018251036200031757815115620003035750602001516001600160a01b031603620002be576040516115c99081620006f78239f35b60405162461bcd60e51b815260206004820152601f60248201527f696e636f727265637420677561726469616e20736574206f76657272696465006044820152606490fd5b634e487b7160e01b81526032600452602490fd5b60405162461bcd60e51b815260206004820152601560248201527f677561726469616e732e6c656e67746820213d203100000000000000000000006044820152606490fd5b90503d8083833e6200036f8183620006ab565b8101906020818303126200048f578051906001600160401b0382116200049357016040818303126200048f5760408051929083016001600160401b03811184821017620004795760405281516001600160401b038111620004755782019080601f8301121562000475578151916001600160401b03831162000461578260051b9060405193620004036020840186620006ab565b84526020808501928201019283116200045d57602001905b828210620004425750505082526200043690602001620006e4565b60208201523862000285565b602080916200045184620006cf565b8152019101906200041b565b8680fd5b634e487b7160e01b86526041600452602486fd5b8480fd5b634e487b7160e01b600052604160045260246000fd5b8280fd5b8380fd5b6040513d84823e3d90fd5b620004ad906200067b565b620004ba57813862000245565b5080fd5b6040513d85823e3d90fd5b620004d7909491946200067b565b9238620001e3565b6040513d87823e3d90fd5b60018060a01b038554166040516020810190858252602081526200050e816200068f565b5190208281018111620005a25760008051602062001cc08339815191523b156200045d578290604051926370ca10bb60e01b8452600484015201602482015285604482015285816064818360008051602062001cc08339815191525af180156200059757906001929162000585575b500162000149565b62000590906200067b565b386200057d565b6040513d88823e3d90fd5b634e487b7160e01b87526011600452602487fd5b6020809293503d8311620005e3575b620005d18185620006ab565b81010312620004935751388062000144565b503d620005c5565b9091506020813d60201162000626575b816200060a60209383620006ab565b810103126200048f576200061e90620006e4565b9038620000c9565b3d9150620005fb565b9092506020813d6020116200066a575b816200064e60209383620006ab565b81010312620004ba576200066290620006cf565b9138620000a1565b3d91506200063f565b80fd5b600080fd5b6001600160401b0381116200047957604052565b604081019081106001600160401b038211176200047957604052565b601f909101601f19168101906001600160401b038211908210176200047957604052565b51906001600160a01b03821682036200067657565b519063ffffffff82168203620006765756fe6080604052600436101561001257600080fd5b60003560e01c80630e645295146100a75780631e5a2802146100a257806323aa2a9d1461009d5780633a7684631461009857806355a58d7d1461009357806364bb9bfb1461008e57806384acd1bb146100895780638d8e33e4146100845763ce8cef6e1461007f57600080fd5b610b37565b610a28565b6109a2565b610975565b6108c6565b6106e3565b61049b565b610469565b346100d0576100cc6100c06100bb36610306565b61137c565b60405191829182610455565b0390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b0382111761010657604052565b6100d5565b6001600160401b03811161010657604052565b606081019081106001600160401b0382111761010657604052565b604081019081106001600160401b0382111761010657604052565b90601f801991011681019081106001600160401b0382111761010657604052565b6040519061016082018281106001600160401b0382111761010657604052565b60ff8116036100d057565b35906101ab82610195565b565b63ffffffff8116036100d057565b35906101ab826101ad565b61ffff8116036100d057565b35906101ab826101c6565b35906001600160401b03821682036100d057565b81601f820112156100d0578035906001600160401b0382116101065760405192610225601f8401601f191660200185610154565b828452602083830101116100d057816000926020809301838601378301015290565b6001600160401b0381116101065760051b60200190565b81601f820112156100d05780359061027582610247565b9260409261028584519586610154565b808552602091828087019260071b850101938185116100d0578301915b8483106102b25750505050505090565b6080838303126100d0578360809187516102cb816100eb565b853581528286013583820152888601356102e481610195565b89820152606080870135906102f882610195565b8201528152019201916102a2565b600319906020818301126100d0576004356001600160401b03928382116100d0576101609082840301126100d05761033c610175565b92610349826004016101a0565b8452610357602483016101bb565b6020850152610368604483016101bb565b6040850152610379606483016101d2565b60608501526084820135608085015261039460a483016101dd565b60a08501526103a560c483016101a0565b60c085015260e48201358181116100d0578360046103c5928501016101f1565b60e08501526103d761010483016101bb565b6101008501526101248201359081116100d0576101449260046103fc9284010161025e565b610120840152013561014082015290565b60005b8381106104205750506000910152565b8181015183820152602001610410565b906020916104498151809281855285808601910161040d565b601f01601f1916010190565b906020610466928181520190610430565b90565b346100d05760203660031901126100d0576004356001600160401b0381116100d0576104999036906004016101f1565b005b346100d0576020806003193601126100d057600080549091906104ce906001600160a01b03165b6001600160a01b031690565b60408051634d4502c960e11b8152928084600481865afa93841561065557610539946105479187916106bb575b50835163436f7265848201908152600360f81b602082015260f09290921b6001600160f01b0319166021830152600435602383015295869160430190565b03601f198101865285610154565b815163fbe3c2cd60e01b8152908082600481875afa91821561065557869261068c575b5082516358b9591160e11b8152918183600481885afa95861561065557879661060594889161065f575b506105cf6105a0611247565b936105be6105ac610175565b60018152964263ffffffff1690880152565b8588018a905261ffff166060860152565b60808401528660a08401526105e760c0840160c89052565b60e0830152856101008301526101208201528461014082015261137c565b91803b1561065a57839261062d925194858094819363f42bc64160e01b835260048301610455565b03925af180156106555761063f575080f35b8061064c6106529261010b565b806106d8565b80f35b61122c565b505050fd5b61067f9150843d8611610685575b6106778183610154565b810190611238565b38610594565b503d61066d565b816106ad9293503d84116106b4575b6106a58183610154565b810190611217565b903861056a565b503d61069b565b6106d29150833d85116106b4576106a58183610154565b386104fb565b60009103126100d057565b346100d05760003660031901126100d0576020604051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b604435906001600160a01b03821682036100d057565b35906001600160a01b03821682036100d057565b9190916060818403126100d057604051906107568261011e565b81938135906001600160401b03918281116100d05783019281601f850112156100d05783359361078585610247565b906107936040519283610154565b858252602095868084019160051b830101918583116100d05787809101915b8383106107ec57505050508552838101359283116100d0576040936107dd85936107e79584016101f1565b9086015201610728565b910152565b82358152918101918891016107b2565b602080820190808352835180925260409283810182858560051b84010196019460009081935b86851061083457505050505050505090565b9091929394959697603f198282030185528689516060928584820183519583528551809152846080840196019089905b8082106108a957505050908291610888600196868096015184820387860152610430565b9281878060a01b03910151169101529a019501950193969594929190610822565b82518852968601968d968a94509290920191600190910190610864565b346100d0576020806003193601126100d0576001600160401b03906004358281116100d057366023820112156100d057806004013561090481610247565b936109126040519586610154565b818552838501906024809360051b850101933685116100d057838101925b85841061094f576100cc61094389611065565b604051918291826107fc565b83358381116100d057879161096a839288369187010161073c565b815201930192610930565b346100d0576100cc61098e61098936610306565b61116c565b604051918291602083526020830190610430565b346100d05760003660031901126100d0576000546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b8281106109eb575050505090565b835180518652808301518684015260408082015160ff908116918801919091526060918201511690860152608090940193928101926001016109dd565b346100d05760203660031901126100d0576004356001600160401b0381116100d057610a5b610a6091369060040161073c565b610cae565b604051809160208252610a7960208301825160ff169052565b602081015163ffffffff166040830152604081015163ffffffff166060830152606081015161ffff166080830152608081015160a0830152610acb60a082015160c08401906001600160401b03169052565b60c081015160ff1660e083015260e081015161016090610b2c610afb610100928484880152610180870190610430565b91840151610b14610120918288019063ffffffff169052565b8401519161014092601f1987830301848801526109cb565b920151908301520390f35b346100d05760603660031901126100d0576004356001600160401b0381116100d0576100c0610b6d6100cc92369060040161073c565b60243590610b7a826101c6565b61ffff610b8e610b88610712565b92610cae565b600181524263ffffffff166020820152921660608301526001600160a01b0316608082015261137c565b634e487b7160e01b600052603260045260246000fd5b805160011015610bde5760400190565b610bb8565b805115610bde5760200190565b8051821015610bde5760209160051b010190565b634e487b7160e01b600052601160045260246000fd5b90601f8201809211610c2857565b610c04565b9060018201809211610c2857565b60a001908160a011610c2857565b91908201809211610c2857565b91908203918211610c2857565b15610c6a57565b606460405162461bcd60e51b815260206004820152602060248201527f6661696c656420746f20706172736520776f726d686f6c65206d6573736167656044820152fd5b90604051916101608301908382106001600160401b03831117610106576101ab91604052610dad610d9b6000808752806020880152610d7e6040880197828952826060820152610d6d6080820199848b52610d59602060a0850199878b5260c086019588875260e081019860608a528061010083015260606101208301526101408201529d610d3d8251610bce565b5190520198610d4c8a51610f55565b6001600160401b03169052565b610d638851610f09565b63ffffffff169052565b610d778651610ebe565b60ff169052565b610d888451610fa1565b90610d94828651610e33565b9052610c3b565b610da781845151610c56565b90610c49565b90515114610c63565b15610dbd57565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610dfa57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b610e4782610e4081610c1a565b1015610db6565b610e5c8151610e5584610c3b565b1115610df3565b81610e74575050604051600081526020810160405290565b60405191601f81169160a0831560051b80858701019484860193010101905b808410610eab5750508252601f01601f191660405290565b9092835181526020809101930190610e93565b6080815110610ece576080015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b6040815110610f19576040015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606490fd5b6020815110610f65576020015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606490fd5b60a0815110610fb15760a0015190565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b6000198114610c285760010190565b9061100782610247565b60409061101682519182610154565b8381528093611027601f1991610247565b0191600091825b84811061103c575050505050565b602090835161104a8161011e565b6060808252839081830152868683015282850101520161102e565b906000805b83518110156110d2577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b26110a86110a18387610bf0565b5151610be3565b51146110bd575b6110b890610fee565b61106a565b906110ca6110b891610c2d565b9190506110af565b506110df90929192610ffd565b6000805b8351811015611165577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b261111a6110a18387610bf0565b511461112f575b61112a90610fee565b6110e3565b9061115d61112a916111418487610bf0565b5161114c8287610bf0565b526111578186610bf0565b50610c2d565b919050611121565b5050905090565b6104666053602083015192604081015190606081015190608081015160a08201519060e060c08401519301519360405198899663ffffffff60e01b809260e01b16602089015260e01b16602487015261ffff60f01b9060f01b166028860152602a8501526001600160401b0360c01b9060c01b16604a84015260ff60f81b9060f81b166052830152611207815180926020868601910161040d565b8101036033810184520182610154565b908160209103126100d05751610466816101c6565b6040513d6000823e3d90fd5b908160209103126100d0575190565b604051602081018181106001600160401b03821117610106576040526000815290565b60409081519161127983610139565b60018352829160005b6020808210156112bd5783516020929161129b826100eb565b6000825260008183015260008683015260006060830152828801015201611282565b505091925050565b908160609103126100d05780516112db81610195565b916040602083015192015190565b908160209103126100d05751610466816101ad565b60ff601a199116019060ff8211610c2857565b959294919093604898979460ff60f81b96879384809360f81b168a5263ffffffff60e01b9060e01b1660018a015260f81b16600588015260f81b1660068601526007850152602784015260f81b166047820152611377825180936020868501910161040d565b010190565b6113858161116c565b906113d16113928361156f565b91610140810192835260606113a561126a565b60015494516040516338d07aa960e21b8152600481019690965260248601529392839081906044820190565b0381737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa918215610655576000908190829461152c575b509161143a61145192600494604061141489610be3565b51019061142089610be3565b516020988961142e8c610be3565b510152529060ff169052565b6000606061144787610be3565b5101525160ff1690565b600054909490839061146b906001600160a01b03166104c2565b604051631cfe795160e01b815293849182905afa801561065557610466946114ef936000926114fd575b50805160ff166114b260606114a984610be3565b51015160ff1690565b6114bb83610be3565b5151916114e16114dc60406114a98b6114d389610be3565b51015197610be3565b6112fe565b946040519a8b998a01611311565b03601f198101835282610154565b61151e919250853d8711611525575b6115168183610154565b8101906112e9565b9038611495565b503d61150c565b61143a94506114519250600493915061155b9060603d8111611568575b6115538183610154565b8101906112c5565b95919092945092506113fd565b503d611549565b60208151910120604051602081019182526020815261158d81610139565b5190209056fea264697066735822122078ac5e0d857594e99b6abf6a4d5398b3ba49128699ce2299dcdf2a8a73723c7064736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract IWormhole";
            readonly name: "wormhole_";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "devnetGuardian";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm_";
            readonly type: "tuple";
        }];
        readonly name: "encodeAndSignMessage";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signedMessage";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm_";
            readonly type: "tuple";
        }];
        readonly name: "encodeObservation";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedObservation";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log";
            readonly name: "log";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint16";
            readonly name: "emitterChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "emitterAddress";
            readonly type: "address";
        }];
        readonly name: "fetchSignedMessageFromLogs";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signedMessage";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log[]";
            readonly name: "logs";
            readonly type: "tuple[]";
        }];
        readonly name: "fetchWormholeMessageFromLog";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "invalidateVM";
        readonly outputs: readonly [];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log";
            readonly name: "log";
            readonly type: "tuple";
        }];
        readonly name: "parseVMFromLogs";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm_";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newFee";
            readonly type: "uint256";
        }];
        readonly name: "setMessageFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vm";
        readonly outputs: readonly [{
            readonly internalType: "contract Vm";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wormhole";
        readonly outputs: readonly [{
            readonly internalType: "contract IWormhole";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): SigningWormholeSimulatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): SigningWormholeSimulator;
}
export {};
