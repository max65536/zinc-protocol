import { ethers } from "ethers";
interface GuardianSetData {
    index: number;
    keys: string[];
    expiry: number;
}
export declare function getCurrentGuardianSet(provider: ethers.providers.JsonRpcProvider): Promise<GuardianSetData>;
/**
 *
 * Takes in a hexstring representation of a signed vaa and a guardian set.
 * Attempts to remove invalid guardian signatures, update total remaining
 * valid signatures, and update the guardian set index
 * @throws if not enough valid signatures remain
 **/
export declare function repairVaa(vaaHex: string, guardianSetData: GuardianSetData): string;
/**
 *
 * Takes in a hexstring representation of a signed vaa and an eth provider.
 * Attempts to query eth core contract and retrieve current guardian set.
 * Then attempts to repair the vaa.
 **/
export declare function repairVaaWithCurrentGuardianSet(vaaHex: string, provider: ethers.providers.JsonRpcProvider): Promise<string>;
export {};
