import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BridgeGetters, BridgeGettersInterface } from "../BridgeGetters";
declare type BridgeGettersConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BridgeGetters__factory extends ContractFactory {
    constructor(...args: BridgeGettersConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<BridgeGetters>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): BridgeGetters;
    connect(signer: Signer): BridgeGetters__factory;
    static readonly bytecode = "0x60808060405234610016576103f6908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182631a2be4da1461036a575081631ff1e286146103245781632c3c02a4146102f75781632f3a3d5d146102ce57816364d42b17146102af578163739fc8d11461028c57816384acd1bb146102645781639a8a059214610241578163aa4efa5b14610214578163ad5c4648146101ec578163ad66a5f1146101ba578163b172b2221461019b578163b96c7e4d14610161578163d60b347f1461011e57508063e039f224146100fd5763fbe3c2cd146100d557600080fd5b346100f957816003193601126100f95760209061ffff60025460101c169051908152f35b5080fd5b50346100f957816003193601126100f957602090600c549051904614158152f35b90503461015d57602036600319011261015d57356001600160a01b0381169081900361015d57818360ff92602095526007855220541690519015158152f35b8280fd5b90503461015d57602036600319011261015d57356001600160a01b0381169081900361015d5782829160209452600a845220549051908152f35b5050346100f957816003193601126100f9576020906003549051908152f35b5050346100f95760203660031901126100f9578060209261ffff6101dc6103aa565b168152600b845220549051908152f35b90503461015d578260031936011261015d575490516001600160a01b03909116815260209150f35b90503461015d57602036600319011261015d578160209360ff923581526006855220541690519015158152f35b5050346100f957816003193601126100f95760209061ffff600254169051908152f35b5050346100f957816003193601126100f957905490516001600160a01b039091168152602090f35b5050346100f957816003193601126100f9576002549051602091821c60ff168152f35b5050346100f957816003193601126100f957602090600c549051908152f35b5050346100f957816003193601126100f95760015490516001600160a01b039091168152602090f35b90503461015d57602036600319011261015d578160209360ff923581526005855220541690519015158152f35b5050346100f957806003193601126100f95760209161ffff6103446103aa565b16815260088352818120602435825283528190205490516001600160a01b039091168152f35b929150346103a65760203660031901126103a657356001600160a01b038116908190036103a65783526009602090815292205460ff1615158152f35b8380fd5b6004359061ffff821682036103bb57565b600080fdfea26469706673582212200d00c682ce7ec8894004600ceab7d5f12943ab942ec27c4e175a005db476453b64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "WETH";
        readonly outputs: readonly [{
            readonly internalType: "contract IWETH";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId_";
            readonly type: "uint16";
        }];
        readonly name: "bridgeContracts";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "evmChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "finality";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "governanceActionIsConsumed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isFork";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "isTransferCompleted";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "isWrappedAsset";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "outstandingBridged";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenImplementation";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wormhole";
        readonly outputs: readonly [{
            readonly internalType: "contract IWormhole";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "tokenChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "tokenAddress";
            readonly type: "bytes32";
        }];
        readonly name: "wrappedAsset";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): BridgeGettersInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BridgeGetters;
}
export {};
