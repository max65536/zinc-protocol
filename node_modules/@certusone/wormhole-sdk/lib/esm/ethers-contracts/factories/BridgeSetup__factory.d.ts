import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BridgeSetup, BridgeSetupInterface } from "../BridgeSetup";
declare type BridgeSetupConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class BridgeSetup__factory extends ContractFactory {
    constructor(...args: BridgeSetupConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<BridgeSetup>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): BridgeSetup;
    connect(signer: Signer): BridgeSetup__factory;
    static readonly bytecode = "0x60808060405234610016576102a8908161001c8239f35b600080fdfe6080806040526004908136101561001557600080fd5b600091823560e01c63b5d93f261461002c57600080fd5b82903461026e5761012036600319011261026e5780356001600160a01b03818116949085830361026a5760243561ffff9081811680910361026657604435928084168094036102625760643592831683036102625760a4359080821680920361025e5760c43590811680910361025e5760e4359160ff8316830361025a576101043596600254966bffffffffffffffffffffffff60a01b809c5416178d55608435600355811561021957509164ff000000009163ffff000094938b60015416176001558a8a541617895560201b169364ffffffffff1916179160101b1617176002554681036101e057600c553b156101865750817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8380a28152600760205260408120805460ff1916600117905580f35b60849060206040519162461bcd60e51b8352820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152fd5b60405162461bcd60e51b815260208185015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606490fd5b62461bcd60e51b815260208a820152601e60248201527f696e76616c696420696d706c656d656e746174696f6e206164647265737300006044820152606490fd5b8980fd5b8880fd5b8780fd5b8680fd5b8480fd5b5080fdfea2646970667358221220cd72d00123d56553c6928f3a0cf02e8b30c5c24ca26483eba692ba79e671705c64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "wormhole";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "governanceChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "governanceContract";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "tokenImplementation";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "WETH";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "finality";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint256";
            readonly name: "evmChainId";
            readonly type: "uint256";
        }];
        readonly name: "setup";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): BridgeSetupInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): BridgeSetup;
}
export {};
