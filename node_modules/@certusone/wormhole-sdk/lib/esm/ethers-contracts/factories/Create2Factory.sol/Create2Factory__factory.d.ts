import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Create2Factory, Create2FactoryInterface } from "../../Create2Factory.sol/Create2Factory";
declare type Create2FactoryConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Create2Factory__factory extends ContractFactory {
    constructor(...args: Create2FactoryConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Create2Factory>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Create2Factory;
    connect(signer: Signer): Create2Factory__factory;
    static readonly bytecode = "0x60c0604090808252346100fd576001600160401b03906103cc818101838111838210176100dc5782916110c1833903906000f080156100f2576001600160a01b031660808190528251919061040861005a6020820185610102565b808452610cb9602085013983519060208201526020815283810191818310908311176100dc576100b09082855261009e610098606083018096610125565b82610125565b03605f1981018352603f190182610102565b51902060a05251610b68908161015182396080518181816102c001526103ef015260a0518161046e0152f35b634e487b7160e01b600052604160045260246000fd5b82513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176100dc57604052565b9081519160005b83811061013d575050016000815290565b806020809284010151818501520161012c56fe608060405260043610156200001357600080fd5b6000803560e01c908162d762e01462000073575080630a2df826146200006d5780637054b4891462000067578063e1c7392a14620000615763e4b73db2146200005b57600080fd5b6200041e565b620003d7565b62000237565b620001dc565b34620000e4576060366003190112620000e45762000090620000e7565b906024359067ffffffffffffffff8211620000e4576020620000d2620000c685620000bf366004880162000180565b9062000628565b309060443590620006c7565b6040516001600160a01b039091168152f35b80fd5b600435906001600160a01b0382168203620000fe57565b600080fd5b602435906001600160a01b0382168203620000fe57565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116200014557604052565b6200011a565b90601f8019910116810190811067ffffffffffffffff8211176200014557604052565b906200017e60405192836200014b565b565b81601f82011215620000fe5780359067ffffffffffffffff8211620001455760405192620001b9601f8401601f1916602001856200014b565b82845260208383010111620000fe57816000926020809301838601378301015290565b6040366003190112620000fe5767ffffffffffffffff600435818111620000fe576200020d90369060040162000180565b90602435908111620000fe5760209162000230620000d292369060040162000180565b9062000494565b6060366003190112620000fe5767ffffffffffffffff600435818111620000fe576200026890369060040162000180565b906200027362000103565b90604435908111620000fe576200031b620002976200033592369060040162000180565b936200032f610408620002ad602082016200016e565b908082526200072b6020830139604080517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166020808301919091528152601f1992916200032291906200030a90826200014b565b6040519687936020850190620005c6565b90620005c6565b039081018452836200014b565b62000494565b6001600160a01b03811692909190833b15620000fe57620003719360009283604051809781958294633261ccdb60e21b845260048401620005df565b03925af1918215620003c557620003a392620003a7575b506040516001600160a01b0390911681529081906020820190565b0390f35b80620003b7620003be9262000130565b80620003cb565b3862000388565b6200061c565b6000910312620000fe57565b34620000fe576000366003190112620000fe576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34620000fe576040366003190112620000fe576200043b620000e7565b6024359067ffffffffffffffff8211620000fe576200046a620000d291620000bf602094369060040162000180565b30907f000000000000000000000000000000000000000000000000000000000000000090620006c7565b620004a0903362000628565b903447106200055c57805115620005185760208151910134f56001600160a01b038116907f1449abf21e49fd025f33495e77f7b1461caefdd3d4bb646424a3f445c4576a5b906200051290620004f88415156200067a565b6040516001600160a01b0390911681529081906020820190565b0390a190565b606460405162461bcd60e51b815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b60405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e63650000006044820152606490fd5b60005b838110620005b55750506000910152565b8181015183820152602001620005a4565b90620005db60209282815194859201620005a1565b0190565b909160609260018060a01b0316825260406020830152620006108151809281604086015260208686019101620005a1565b601f01601f1916010190565b6040513d6000823e3d90fd5b90620006746034604051809360208201956bffffffffffffffffffffffff199060601b168652620006638151809260208686019101620005a1565b81010360148101845201826200014b565b51902090565b156200068257565b60405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606490fd5b919060405192602084019260ff60f81b84526bffffffffffffffffffffffff199060601b16602185015260358401526055830152605582526080820182811067ffffffffffffffff8211176200014557604052905190206001600160a01b03169056fe608060405234610141576104086020813803918261001c81610180565b93849283398101031261014157516001600160a01b038116908181036101415761004461015c565b9160008352813b156100e6577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906100de575b6100c4575b60405160d190816103378239f35b6100d6916100d06101c0565b91610219565b5038806100b6565b5060006100b1565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b0381118382101761017b57604052565b610146565b6040519190601f01601f191682016001600160401b0381118382101761017b57604052565b6001600160401b03811161017b57601f01601f191660200190565b60405190606082016001600160401b0381118382101761017b5760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b156102675760008161025c9460208394519201905af43d1561025f573d9061024c610247836101a5565b610180565b9182523d6000602084013e6102bb565b90565b6060906102bb565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156102c7575090565b8151156102d75750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061031d575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506102fa56fe608060405236156054577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f35b3d90fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f3fea26469706673582212203c1e215bfe9660349ec8f0a963e6b23d26872f283a8af799888ef1d48f593ec664736f6c63430008130033a2646970667358221220607871897bb8730d7b523682eaf9891ff793d00289b45ca714f6d7f2f89ae24764736f6c63430008130033608060405234610141576104086020813803918261001c81610180565b93849283398101031261014157516001600160a01b038116908181036101415761004461015c565b9160008352813b156100e6577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b031916821790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906100de575b6100c4575b60405160d190816103378239f35b6100d6916100d06101c0565b91610219565b5038806100b6565b5060006100b1565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b0381118382101761017b57604052565b610146565b6040519190601f01601f191682016001600160401b0381118382101761017b57604052565b6001600160401b03811161017b57601f01601f191660200190565b60405190606082016001600160401b0381118382101761017b5760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b156102675760008161025c9460208394519201905af43d1561025f573d9061024c610247836101a5565b610180565b9182523d6000602084013e6102bb565b90565b6060906102bb565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156102c7575090565b8151156102d75750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b82851061031d575050604492506000838284010152601f80199101168101030190fd5b84810182015186860160440152938101938593506102fa56fe608060405236156054577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f35b3d90fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54600090819081906001600160a01b0316368280378136915af43d82803e156050573d90f3fea26469706673582212203c1e215bfe9660349ec8f0a963e6b23d26872f283a8af799888ef1d48f593ec664736f6c6343000813003360808060405234610016576103b0908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63c987336c1461002857600080fd5b346100b45760403660031901126100b4576004356001600160a01b03811681036100ac5760243567ffffffffffffffff81116100b057366023820112156100b0578060040135918361008161007c856100f8565b6100cd565b9284845236602486830101116100ac57846100a9956024602093018387013784010152610114565b80f35b5080fd5b8280fd5b80fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176100f357604052565b6100b7565b67ffffffffffffffff81116100f357601f01601f191660200190565b803b156101ad577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0383169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906101a5575b610190575050565b6101a29161019c610208565b91610262565b50565b506000610188565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b604051906060820182811067ffffffffffffffff8211176100f35760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b156102ab576000816102a09460208394519201905af43d156102a3573d9061029061007c836100f8565b9182523d6000602084013e6102ff565b90565b6060906102ff565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b9091901561030b575090565b81511561031b5750805190602001fd5b6040519062461bcd60e51b82528160208060048301528251908160248401526000935b828510610361575050604492506000838284010152601f80199101168101030190fd5b848101820151868601604401529381019385935061033e56fea2646970667358221220376eb5f53e40f6cab8855afc29c85d353511c1034b974b4932fc2fc1c0c1865064736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "addr";
            readonly type: "address";
        }];
        readonly name: "Created";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "creator";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "userSalt";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes32";
            readonly name: "bytecodeHash";
            readonly type: "bytes32";
        }];
        readonly name: "computeAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "creator";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "userSalt";
            readonly type: "bytes";
        }];
        readonly name: "computeProxyAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "userSalt";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "bytecode";
            readonly type: "bytes";
        }];
        readonly name: "create2";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "userSalt";
            readonly type: "bytes";
        }, {
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "call";
            readonly type: "bytes";
        }];
        readonly name: "create2Proxy";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "init";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): Create2FactoryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Create2Factory;
}
export {};
