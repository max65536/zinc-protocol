import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DeliveryProviderGetters, DeliveryProviderGettersInterface } from "../DeliveryProviderGetters";
declare type DeliveryProviderGettersConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class DeliveryProviderGetters__factory extends ContractFactory {
    constructor(...args: DeliveryProviderGettersConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<DeliveryProviderGetters>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): DeliveryProviderGetters;
    connect(signer: Signer): DeliveryProviderGetters__factory;
    static readonly bytecode = "0x608080604052346100165761036b908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182633171aaec14610304575081633978748a146102d05781633e48e7731461029c5781634713de7a146102655781634798ed541461023c57816349cdb88c146102085781638cf57cb9146101df5781638da5cb5b146101b35781639a8a059214610192578163bb7c0a631461014e578163d60b347f1461010757508063e30c3978146100df5763e8fec1ce146100b457600080fd5b346100db57816003193601126100db5760035490516001600160a01b039091168152602090f35b5080fd5b50346100db57816003193601126100db5760015490516001600160a01b039091168152602090f35b90503461014a57602036600319011261014a5780356001600160a01b03811690819003610146578360ff92849260209652855220541690519015158152f35b8380fd5b8280fd5b839150346100db5760203660031901126100db57359061ffff918281168091036100db579083918152600a602052205490825191818116835260101c166020820152f35b5050346100db57816003193601126100db5761ffff60209254169051908152f35b5050346100db57816003193601126100db579054905160109190911c6001600160a01b03168152602090f35b5050346100db57816003193601126100db57600b5490516001600160a01b039091168152602090f35b90503461014a57602036600319011261014a573561ffff811680910361014a57828291602094526007845220549051908152f35b5050346100db57816003193601126100db5760025490516001600160a01b039091168152602090f35b90503461014a57602036600319011261014a573561ffff811680910361014a57818360019260209552600785522001549051908152f35b90503461014a57602036600319011261014a573561ffff811680910361014a57828291602094526008845220549051908152f35b90503461014a57602036600319011261014a573561ffff811680910361014a57828291602094526006845220549051908152f35b92915034610146576020366003190112610146573561ffff8116809103610146579260209381526009845220548152f3fea2646970667358221220f54a59a62a5137f46021d44c79e998ba1a59562f0ec289295c55255425b3064164736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "assetConversionBuffer";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "tolerance";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "toleranceDenominator";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreRelayer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "deliverGasOverhead";
        readonly outputs: readonly [{
            readonly internalType: "Gas";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "gasPrice";
        readonly outputs: readonly [{
            readonly internalType: "GasPrice";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "maximumBudget";
        readonly outputs: readonly [{
            readonly internalType: "TargetNative";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "nativeCurrencyPrice";
        readonly outputs: readonly [{
            readonly internalType: "WeiPrice";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pricingWallet";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "rewardAddress";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "targetChainAddress";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): DeliveryProviderGettersInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DeliveryProviderGetters;
}
export {};
