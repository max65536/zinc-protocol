import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { DeliveryProviderGovernance, DeliveryProviderGovernanceInterface } from "../DeliveryProviderGovernance";
export declare class DeliveryProviderGovernance__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "AddressIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CallerMustBeOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CallerMustBeOwnerOrPricingWallet";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "CallerMustBePendingOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ChainIdIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "reason";
            readonly type: "string";
        }];
        readonly name: "FailedToInitializeImplementation";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GasPriceIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "NativeCurrencyPriceIsZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "WrongChainId";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "buffer";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "bufferDenominator";
            readonly type: "uint16";
        }];
        readonly name: "AssetConversionBufferUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "isSupported";
            readonly type: "bool";
        }];
        readonly name: "ChainSupportUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldContract";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newContract";
            readonly type: "address";
        }];
        readonly name: "ContractUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "Gas";
            readonly name: "oldGasOverhead";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "Gas";
            readonly name: "newGasOverhead";
            readonly type: "uint256";
        }];
        readonly name: "DeliverGasOverheadUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransfered";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }];
        readonly name: "RewardAddressUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "newAddress";
            readonly type: "bytes32";
        }];
        readonly name: "TargetChainAddressUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "coreRelayer";
            readonly type: "address";
        }];
        readonly name: "WormholeRelayerUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "assetConversionBuffer";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "tolerance";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "toleranceDenominator";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "confirmOwnershipTransferRequest";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "coreRelayer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "deliverGasOverhead";
        readonly outputs: readonly [{
            readonly internalType: "Gas";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "gasPrice";
        readonly outputs: readonly [{
            readonly internalType: "GasPrice";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "maximumBudget";
        readonly outputs: readonly [{
            readonly internalType: "TargetNative";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "nativeCurrencyPrice";
        readonly outputs: readonly [{
            readonly internalType: "WeiPrice";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pendingOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "pricingWallet";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "rewardAddress";
        readonly outputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "thisRelayerChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "submitOwnershipTransferRequest";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }];
        readonly name: "targetChainAddress";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "buffer";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint16";
            readonly name: "bufferDenominator";
            readonly type: "uint16";
        }];
        readonly name: "updateAssetConversionBuffer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "buffer";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "bufferDenominator";
                readonly type: "uint16";
            }];
            readonly internalType: "struct DeliveryProviderStructs.AssetConversionBufferUpdate[]";
            readonly name: "updates";
            readonly type: "tuple[]";
        }];
        readonly name: "updateAssetConversionBuffers";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "updateAssetConversionBuffer";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "updateDeliverGasOverhead";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "updatePrice";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "updateTargetChainAddress";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "updateMaximumBudget";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "updateSupportedChain";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "isSupported";
                readonly type: "bool";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "buffer";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "bufferDenominator";
                readonly type: "uint16";
            }, {
                readonly internalType: "Gas";
                readonly name: "newGasOverhead";
                readonly type: "uint256";
            }, {
                readonly internalType: "GasPrice";
                readonly name: "gasPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "WeiPrice";
                readonly name: "nativeCurrencyPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "targetChainAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "Wei";
                readonly name: "maximumTotalBudget";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DeliveryProviderStructs.Update[]";
            readonly name: "updates";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "bool";
                readonly name: "updateWormholeRelayer";
                readonly type: "bool";
            }, {
                readonly internalType: "bool";
                readonly name: "updateRewardAddress";
                readonly type: "bool";
            }, {
                readonly internalType: "address payable";
                readonly name: "coreRelayer";
                readonly type: "address";
            }, {
                readonly internalType: "address payable";
                readonly name: "rewardAddress";
                readonly type: "address";
            }];
            readonly internalType: "struct DeliveryProviderStructs.CoreConfig";
            readonly name: "coreConfig";
            readonly type: "tuple";
        }];
        readonly name: "updateConfig";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "Gas";
            readonly name: "newGasOverhead";
            readonly type: "uint256";
        }];
        readonly name: "updateDeliverGasOverhead";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "Gas";
                readonly name: "newGasOverhead";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DeliveryProviderStructs.DeliverGasOverheadUpdate[]";
            readonly name: "overheadUpdates";
            readonly type: "tuple[]";
        }];
        readonly name: "updateDeliverGasOverheads";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "Wei";
            readonly name: "maximumTotalBudget";
            readonly type: "uint256";
        }];
        readonly name: "updateMaximumBudget";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "Wei";
                readonly name: "maximumTotalBudget";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DeliveryProviderStructs.MaximumBudgetUpdate[]";
            readonly name: "updates";
            readonly type: "tuple[]";
        }];
        readonly name: "updateMaximumBudgets";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "updateChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "GasPrice";
            readonly name: "updateGasPrice";
            readonly type: "uint256";
        }, {
            readonly internalType: "WeiPrice";
            readonly name: "updateNativeCurrencyPrice";
            readonly type: "uint256";
        }];
        readonly name: "updatePrice";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "GasPrice";
                readonly name: "gasPrice";
                readonly type: "uint256";
            }, {
                readonly internalType: "WeiPrice";
                readonly name: "nativeCurrencyPrice";
                readonly type: "uint256";
            }];
            readonly internalType: "struct DeliveryProviderStructs.UpdatePrice[]";
            readonly name: "updates";
            readonly type: "tuple[]";
        }];
        readonly name: "updatePrices";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newPricingWallet";
            readonly type: "address";
        }];
        readonly name: "updatePricingWallet";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "newAddress";
            readonly type: "address";
        }];
        readonly name: "updateRewardAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bool";
            readonly name: "isSupported";
            readonly type: "bool";
        }];
        readonly name: "updateSupportedChain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bool";
                readonly name: "isSupported";
                readonly type: "bool";
            }];
            readonly internalType: "struct DeliveryProviderStructs.SupportedChainUpdate[]";
            readonly name: "updates";
            readonly type: "tuple[]";
        }];
        readonly name: "updateSupportedChains";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "newAddress";
            readonly type: "bytes32";
        }];
        readonly name: "updateTargetChainAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "targetChainAddress";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct DeliveryProviderStructs.TargetChainUpdate[]";
            readonly name: "updates";
            readonly type: "tuple[]";
        }];
        readonly name: "updateTargetChainAddresses";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address payable";
            readonly name: "newAddress";
            readonly type: "address";
        }];
        readonly name: "updateWormholeRelayer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "deliveryProviderChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "newImplementation";
            readonly type: "address";
        }];
        readonly name: "upgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): DeliveryProviderGovernanceInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): DeliveryProviderGovernance;
}
