import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Getters, GettersInterface } from "../Getters";
declare type GettersConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class Getters__factory extends ContractFactory {
    constructor(...args: GettersConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<Getters>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): Getters;
    connect(signer: Signer): Getters__factory;
    static readonly bytecode = "0x6080806040523461001657610407908161001c8239f35b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c9182631a90a21914610383575081631cfe79511461035e5781632c3c02a4146103315781634cf842b5146102ed57816364d42b17146102ce5781639a8a0592146102ad578163b172b2221461028e578163d60b347f1461024b578163e039f22414610229578163eb8d3f1214610203578163f951975a146100cf575063fbe3c2cd146100a957600080fd5b346100cb57816003193601126100cb5761ffff6020925460101c169051908152f35b5080fd5b82843461020057602091826003193601126100cb57833563ffffffff908181168091036101fc57838584516101038161039f565b6060815201528352600284528183209482519061011f8261039f565b8351908187895491828152019089885288882090885b8a8282106101df5750505050829003601f01601f191682019067ffffffffffffffff8211838310176101cc575084528152600195860154821681860190815283518681529151828701859052805160608401819052929660808801969293918101925b8281106101b057505050508495505116908301520390f35b83516001600160a01b0316885296810196928101928901610198565b634e487b7160e01b875260419052602486fd5b83546001600160a01b031685529093019260019283019201610135565b8380fd5b80fd5b5050346100cb57816003193601126100cb576003549051602091821c63ffffffff168152f35b5050346100cb57816003193601126100cb576020906008549051904614158152f35b90503461028a57602036600319011261028a57356001600160a01b0381169081900361028a57818360ff92602095526006855220541690519015158152f35b8280fd5b5050346100cb57816003193601126100cb576020906001549051908152f35b5050346100cb57816003193601126100cb5761ffff60209254169051908152f35b5050346100cb57816003193601126100cb576020906008549051908152f35b90503461028a57602036600319011261028a5780356001600160a01b038116908190036101fc578367ffffffffffffffff9284926020965285522054169051908152f35b90503461028a57602036600319011261028a578160209360ff923581526005855220541690519015158152f35b5050346100cb57816003193601126100cb5760209063ffffffff600354169051908152f35b8490346100cb57816003193601126100cb576020906007548152f35b6040810190811067ffffffffffffffff8211176103bb57604052565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dab07028ff684e1ca21ed94a2fe2357d47a45c80da5cd98c26e58689b242003d64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "evmChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getCurrentGuardianSetIndex";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "index";
            readonly type: "uint32";
        }];
        readonly name: "getGuardianSet";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address[]";
                readonly name: "keys";
                readonly type: "address[]";
            }, {
                readonly internalType: "uint32";
                readonly name: "expirationTime";
                readonly type: "uint32";
            }];
            readonly internalType: "struct Structs.GuardianSet";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getGuardianSetExpiry";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "governanceActionIsConsumed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isFork";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "messageFee";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "emitter";
            readonly type: "address";
        }];
        readonly name: "nextSequence";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): GettersInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Getters;
}
export {};
