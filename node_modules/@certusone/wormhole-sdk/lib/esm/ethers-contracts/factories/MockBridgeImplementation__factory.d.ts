import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockBridgeImplementation, MockBridgeImplementationInterface } from "../MockBridgeImplementation";
declare type MockBridgeImplementationConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockBridgeImplementation__factory extends ContractFactory {
    constructor(...args: MockBridgeImplementationConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockBridgeImplementation>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockBridgeImplementation;
    connect(signer: Signer): MockBridgeImplementation__factory;
    static readonly bytecode = "0x6080806040523461001b576001600d5561581190816100218239f35b600080fdfe608060405260043610156200001d575b36156200001b57600080fd5b005b60003560e01c806301f53255146200035257806307dfd8fb146200034c5780630f50900814620003465780630f5287b01462000340578063178149e7146200033a5780631a2be4da14620003345780631c8475e4146200032e5780631f8cdb2b14620003285780631ff1e286146200032257806325394645146200031c5780632b51137514620003165780632c3c02a414620003105780632f3a3d5d146200030a5780635c60da1b146200030a5780635f854266146200030457806364d42b1714620002fe578063739fc8d114620002f85780638129fc1c14620002f257806384acd1bb14620002ec5780639981509f14620002e65780639a8a059214620002e0578063a5799f9314620002da578063aa4efa5b14620002d4578063ad5c464814620002ce578063ad66a5f114620002c8578063b046223b14620002c2578063b172b22214620002bc578063b626814614620002b6578063b96c7e4d14620002b0578063bee9cdfc14620002aa578063c054a2e014620002a4578063c3f511c1146200029e578063c48fa1151462000298578063c5a5ebda1462000292578063c6878519146200028c578063cb4cfea81462000286578063d56e2e241462000280578063d60b347f146200027a578063e039f2241462000274578063e8059810146200026e578063e89bc4011462000268578063ea63738d1462000262578063f768441f146200025c578063fbe3c2cd1462000256578063fbeeacd914620002505763ff200cde036200000f5762001fe2565b62001f97565b62001f70565b62001ed5565b62001e40565b62001e21565b62001d2d565b62001d0a565b62001cc7565b62001bf7565b62001bac565b62001b97565b62001aee565b620018e6565b620018b2565b62001876565b6200163e565b62001600565b620015bd565b6200159d565b62001520565b620014f1565b620014c6565b62001496565b6200137c565b62001358565b62001114565b620010e9565b62001032565b6200100d565b62000fed565b62000f5f565b62000f1b565b62000ee1565b62000e6a565b62000d9c565b62000d49565b62000d2b565b620008af565b6200080d565b62000733565b62000686565b6200060f565b620005ad565b62000556565b634e487b7160e01b600052604160045260246000fd5b60e081019081106001600160401b038211176200038a57604052565b62000358565b60c081019081106001600160401b038211176200038a57604052565b6001600160401b0381116200038a57604052565b608081019081106001600160401b038211176200038a57604052565b60a081019081106001600160401b038211176200038a57604052565b604081019081106001600160401b038211176200038a57604052565b90601f801991011681019081106001600160401b038211176200038a57604052565b60405190620004458262000390565b565b6040519061010082018281106001600160401b038211176200038a57604052565b604051906200044582620003dc565b6040519062000445826200036e565b6040519061016082018281106001600160401b038211176200038a57604052565b9062000445604051928362000414565b6001600160401b0381116200038a57601f01601f191660200190565b81601f820112156200052057803590620004ed82620004b7565b92620004fd604051948562000414565b828452602083830101116200052057816000926020809301838601378301015290565b600080fd5b60206003198201126200052057600435906001600160401b03821162000520576200055391600401620004d3565b90565b34620005205760a0620005736200056d3662000525565b62004a09565b6080604051918051835260ff602082015116602084015261ffff806040830151166040850152606082015116606084015201516080820152f35b34620005205760c0620005ca620005c43662000525565b62004000565b60a06040519160ff81511683526020810151602084015261ffff604082015116604084015260ff606082015116606084015260808101516080840152015160a0820152f35b34620005205760206200062c620006263662000525565b62004d89565b60ff60405191168152f35b600435906001600160a01b03821682036200052057565b61ffff8116036200052057565b60a4359062000445826200064e565b359062000445826200064e565b63ffffffff8116036200052057565b60c036600319011262000520576200072f62000710620006a562000637565b604435620006b3816200064e565b620006ea60a43592620006c68462000677565b620006d76002600d54141562002668565b6002600d55608435906024359062002a38565b61ffff815116602082015192604083015160806060850151940151946064359362002dcc565b6001600d556040516001600160401b0390911681529081906020820190565b0390f35b346200052057620007443662000525565b600c544614620007db57620007c96060620007a360e0620007776200076d6200001b96620046f7565b9092919262003116565b6200079b61014082015160005260056020526040600020600160ff19825416179055565b015162004b79565b620007c060408201620007b9468251146200458b565b5162004c2d565b015161ffff1690565b61ffff1661ffff196002541617600255565b60405162461bcd60e51b815260206004820152600a6024820152696e6f74206120666f726b60b01b6044820152606490fd5b346200052057602036600319011262000520576001600160a01b036200083262000637565b166000526009602052602060ff604060002054166040519015158152f35b60005b838110620008645750506000910152565b818101518382015260200162000853565b90602091620008908151809281855285808601910162000850565b601f01601f1916010190565b9060206200055392818152019062000875565b346200052057620008c03662000525565b600080546001600160a01b039190620008e29083165b6001600160a01b031690565b91604092828451809263607ec5ef60e11b825281806200090760049a8b83016200089c565b03915afa801562000c1b57839084859162000ced575b6200092a92935062003116565b6200093f620009398262003e0e565b62003149565b60e081019462000950865162004316565b8362000960608083015162003c69565b93600360ff62000971855160ff1690565b161462000cd8575b620009c96101408201620009ae620009a8620009a48351600052600660205260ff6040600020541690565b1590565b6200364b565b5160005260066020526040600020600160ff19825416179055565b606081015161ffff16906001600160401b03620009f560a060808401519301516001600160401b031690565b169061ffff8093167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c1698a80a48062000a5062000a3660a086015161ffff1690565b62000a46836002541661ffff1690565b9216821462003698565b606084015161ffff169182160362000c90575062000a75620008d68884015162003c69565b62000a87602084015183831662003d91565b16858062000aa1620008d68887541660018060a01b031690565b9262000ab1888516821462003737565b895163313ce56760e01b602082019081528782529062000ad181620003f8565b51915afa5062000b1362000af862000ae8620023f4565b6020808251830101910162002436565b60c062000b0a82602087015162002d55565b94015162002d55565b908115158062000c83575b1562000c745762000b328383111562003790565b803b1562000c70578688518092632e1a7d4d60e01b825281838162000b5e888b83019190602083019252565b03925af1801562000c1b5762000c59575b50858082801562000c4e575b8280929181923390f11562000c1b5762000b9591620025f8565b815490919062000bb09085166001600160a01b0316620008d6565b90813b1562000c4a578651632e1a7d4d60e01b815290810183815290939291869185919082908490829060200103925af191821562000c1b5785948594859462000c2c575b508391831562000c21575b1690f11562000c1b576200072f91519051918291826200089c565b6200251c565b6108fc925062000c00565b8062000c3c62000c4392620003ac565b8062000d1f565b3862000bf5565b8580fd5b6108fc915062000b7b565b8062000c3c62000c6992620003ac565b3862000b6f565b8680fd5b505062000b95908590620025f8565b5033868616141562000b1e565b62000cc48291898501519061ffff16600052600860205260406000209060005260205260018060a01b036040600020541690565b1662000cd2811515620036dc565b62000a87565b62000ce782861633146200360d565b62000979565b50505062000d136200092a913d8086833e62000d0a818362000414565b81019062002fdd565b9192508291906200091d565b60009103126200052057565b34620005205760003660031901126200052057602060405160018152f35b3462000520576040366003190112620005205761ffff60043562000d6d816200064e565b1660005260086020526040600020602435600052602052602060018060a01b0360406000205416604051908152f35b34620005205762000dfc60e062000dd06200076d62000dbb3662000525565b62000dca600c54461462003dd2565b620046f7565b62000df461014082015160005260056020526040600020600160ff19825416179055565b015162004b07565b61ffff8060408301511690600254160362000e3457606001516200001b9062000e2e906001600160a01b0316620008d6565b6200481e565b60405162461bcd60e51b815260206004820152600e60248201526d1ddc9bdb99c818da185a5b881a5960921b6044820152606490fd5b3462000520576200072f62000e8962000e833662000525565b6200417c565b6040519182918291909160c08060e083019460ff8151168452602081015160208501526040810151604085015261ffff8060608301511660608601526080820151608086015260a08201511660a08501520151910152565b34620005205760203660031901126200052057602062000f11600435600052600560205260ff6040600020541690565b6040519015158152f35b346200052057600036600319011262000520576001546040516001600160a01b039091168152602090f35b60ff8116036200052057565b3590620004458262000f46565b34620005205760e036600319011262000520576200072f62000fe060405162000f88816200036e565b60043562000f968162000f46565b81526024356020820152604435604082015260643562000fb6816200064e565b6060820152608435608082015262000fcd6200065b565b60a082015260c43560c082015262003eb1565b604051918291826200089c565b346200052057600036600319011262000520576020600c54604051908152f35b34620005205760003660031901126200052057602060025460ff60405191831c168152f35b346200052057600080600319360112620010e6577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b03168082526007602052604082205460ff16620010ab576001600160a01b03166000908152600760205260409020805460ff1916600117905580f35b60405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e481a5b9a5d1a585b1a5e9959606a1b6044820152606490fd5b80fd5b346200052057600036600319011262000520576000546040516001600160a01b039091168152602090f35b608036600319011262000520576004803562001130816200064e565b6044359160643590620011438262000677565b6200114d62002528565b50600080546001600160a01b039483916020906200116d908816620008d6565b604051631a90a21960e01b815295869182905afa93841562000c1b57839462001321575b506200119f34851062002574565b620011ab8434620025f8565b96620011ba8882111562002606565b6402540be400808904910493620011dc620011d58362002d3a565b8a620025f8565b8181158015620012f6575b505084546200120e919062001207908b166001600160a01b0316620008d6565b9a620025f8565b98803b15620012f25784604051809b8193630d0e30db60e41b83525af196871562000c1b57602098620012ca98620012db575b50835462001267908390620012619084166001600160a01b0316620008d6565b62003cde565b6200128e620008d6620008d6620008d661ffff94856002541698541660018060a01b031690565b90620012a76200129d62000468565b61ffff9096168652565b818a86015282604086015285606086015286608086015260243594511662002dcc565b6001600160401b0360405191168152f35b8062000c3c620012eb92620003ac565b3862001241565b5080fd5b82829162001316575b8280929181923390f11562000c1b578138620011e7565b6108fc9150620012ff565b6200134891945060203d811162001350575b6200133f818362000414565b81019062002564565b923862001191565b503d62001333565b34620005205760003660031901126200052057602061ffff60025416604051908152f35b3462000520576200001b620013cb60e06200139f6200076d62000dca3662000525565b620013c361014082015160005260056020526040600020600160ff19825416179055565b015162004a09565b62001417620013df604083015161ffff1690565b61ffff620013fb620013f460025461ffff1690565b61ffff1690565b911690811490816200147c575b811562001472575b50620044fe565b60806200145a60608301620014526200144b62001436835161ffff1690565b61ffff16600052600b60205260406000205490565b156200453e565b5161ffff1690565b9101519061ffff16600052600b602052604060002055565b9050153862001410565b90506200148f620009a4600c5446141590565b9062001408565b34620005205760203660031901126200052057602062000f11600435600052600660205260ff6040600020541690565b346200052057600036600319011262000520576004546040516001600160a01b039091168152602090f35b3462000520576020366003190112620005205760206200151860043562001436816200064e565b604051908152f35b34620005205760c036600319011262000520576200072f62000fe0604051620015498162000390565b600435620015578162000f46565b815260243560208201526044356200156f816200064e565b6040820152606435620015828162000f46565b6060820152608435608082015260a43560a082015262003e48565b346200052057600036600319011262000520576020600354604051908152f35b346200052057602036600319011262000520576001600160a01b03620015e262000637565b166bffffffffffffffffffffffff60a01b6004541617600455600080f35b346200052057602036600319011262000520576001600160a01b036200162562000637565b16600052600a6020526020604060002054604051908152f35b6080366003190112620005205760048035906200165b826200064e565b604435620016698162000677565b6064356001600160401b03811162000520576200168a9036908401620004d3565b906200169562002528565b506000805490946001600160a01b039491829190602090620016b9908816620008d6565b604051631a90a21960e01b815294859182905afa92831562000c1b57879362001851575b50620016eb34841062002574565b620016f78334620025f8565b966402540be40088049062001710620011d58362002d3a565b818115801562001826575b505084546200173b919062001207908b166001600160a01b0316620008d6565b98803b15620012f257819085604051809c8193630d0e30db60e41b83525af197881562000c1b576200072f99620017f5996200180f575b50845462001792908490620012619084166001600160a01b0316620008d6565b620017b9620008d6620008d6620008d661ffff94856002541699541660018060a01b031690565b91620017d2620017c862000468565b61ffff9097168752565b826020870152836040870152606086015285608086015260243594511662002ea8565b6040516001600160401b0390911681529081906020820190565b8062000c3c6200181f92620003ac565b3862001772565b82829162001846575b8280929181923390f11562000c1b5781386200171b565b6108fc91506200182f565b6200186e91935060203d811162001350576200133f818362000414565b9138620016dd565b3462000520576040366003190112620005205761ffff6004356200189a816200064e565b1661ffff196002541617600255602435600c55600080f35b3462000520576200072f620018d1620018cb3662000525565b620037e8565b60405191829160208352602083019062000875565b6040806003193601126200052057620018fe62000637565b602435916200190d8362000677565b805192602080938186019563313ce56760e01b8752600481526200193181620003f8565b6000809781925190845afa5062001947620023f4565b86808651858101906395d89b4160e01b8252600481526200196881620003f8565b5190855afa5060ff62001a5e620008d662001a4d8862001987620023f4565b958c8083518b8101906306fdde0360e01b825260048152620019a981620003f8565b51908b5afa508880620019f7620019e7620019d7620019c7620023f4565b9584808251830101910162002436565b9a83808251830101910162002498565b9382808251830101910162002498565b9201519101519062001a3d6002549862001a3362001a1462000436565b60028152956001600160a01b039c8d16878f015261ffff8c1690870152565b60ff166060850152565b608083015260a082015262003e48565b8a549095166001600160a01b031690565b9162001a848751968795869485946358cd21bf60e11b8652891c169160048501620024ed565b039134905af192831562000c1b576200072f949362001ab8575b5050516001600160401b0390911681529081906020820190565b62001add929350803d1062001ae6575b62001ad4818362000414565b810190620024d6565b90388062001a9e565b503d62001ac8565b60c0366003190112620005205762001b0562000637565b6044359062001b14826200064e565b6084359062001b238262000677565b60a435916001600160401b03831162000520576200072f9362001b7462001b5362000710953690600401620004d3565b9362001b656002600d54141562002668565b6002600d5560243590620026da565b9061ffff8251169060208301519260806040820151910151936064359362002ea8565b3462000520576200001b620018cb3662000525565b346200052057608062001bc962001bc33662000525565b62004b79565b61ffff6060604051928051845260ff6020820151166020850152604081015160408501520151166060820152f35b34620005205760031960203682011262000520576004356001600160401b03918282116200052057610100908236030112620005205762001c3762000447565b62001c458260040162000f52565b8152602482013560208201526044820135604082015262001c69606483016200066a565b60608201526084820135608082015262001c8660a483016200066a565b60a082015260c482013560c082015260e4820135928311620005205762001cbc62000fe09260046200072f9536920101620004d3565b60e082015262003f27565b346200052057602036600319011262000520576001600160a01b0362001cec62000637565b166000526007602052602060ff604060002054166040519015158152f35b346200052057600036600319011262000520576020600c54604051904614158152f35b34620005205762001d7262001d423662000525565b6000805460405163607ec5ef60e11b8152939192839285926001600160a01b03169183918291600483016200089c565b03915afa90811562000c1b576200072f9262001ddc9282918390849262001df6575b5062001da292935062003116565b62001db1620009398262003e0e565b62001dd560a062001dc660e084015162004000565b9201516001600160401b031690565b9062003410565b6040516001600160a01b0390911681529081906020820190565b91505062001e15915062001da2923d8091833e62000d0a818362000414565b90929192839262001d94565b3462000520576200072f62000e8962001e3a3662000525565b62004316565b34620005205760e062001e5d62001e573662000525565b62004227565b6200072f6040519283926020845260ff8151166020850152602081015160408501526040810151606085015261ffff6060820151166080850152608081015160a085015262001eb760a082015160c086019061ffff169052565b60c08101518285015201516101008084015261012083019062000875565b34620005205762001eea62001d423662000525565b03915afa90811562000c1b576200072f9262001ddc9282918390849262001f45575b5062001f1a92935062003116565b62001f29620009398262003e0e565b62001f3e60a062001dc660e084015162004000565b90620031be565b91505062001f64915062001f1a923d8091833e62000d0a818362000414565b90929192839262001f0c565b34620005205760003660031901126200052057602061ffff60025460101c16604051908152f35b346200052057608062001fb462001fae3662000525565b62004b07565b6060604051918051835260ff602082015116602084015261ffff604082015116604084015201516060820152f35b34620005205762001ff33662000525565b600080549091906001600160a01b039062002010908216620008d6565b916040848151809563607ec5ef60e11b82528180620020346004978883016200089c565b03915afa801562000c1b57859486908792620023a9575b5090620020589162003116565b62002067620009398562003e0e565b6200207660e085015162004316565b8362002086608083015162003c69565b95600360ff62002097855160ff1690565b161462002394575b620020ca6101408201620009ae620009a8620009a48351600052600660205260ff6040600020541690565b606081015161ffff16906001600160401b03620020f660a060808401519301516001600160401b031690565b169061ffff8093167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c1698b80a4806200213762000a3660a086015161ffff1690565b606084015161ffff16918216036200234c57506200215c620008d68484015162003c69565b6200216e602084015183831662003d91565b1690868062002189620008d68888541660018060a01b031690565b9362002199888616821462003737565b855163313ce56760e01b6020820190815288825290620021b981620003f8565b51915afa50620021eb620021d062000ae8620023f4565b60c0620021e282602086015162002d55565b93015162002d55565b9187831515806200233f575b156200232f57506200220c8284111562003790565b803b156200232b578784518092632e1a7d4d60e01b825281838162002238898c83019190602083019252565b03925af1801562000c1b5762002314575b50868083801562002309575b8280929181923390f11562000c1b5786916200227191620025f8565b83549092906200228c9086166001600160a01b0316620008d6565b803b1562002305579051632e1a7d4d60e01b815293840183815284919082908490829060200103925af190811562000c1b578594859485948594620022ee575b5083918315620022e3575b1690f11562000c1b5780f35b6108fc9250620022d7565b8062000c3c620022fe92620003ac565b38620022cc565b8280fd5b6108fc915062002255565b8062000c3c6200232492620003ac565b3862002249565b8780fd5b92506200227191839150620025f8565b50338789161415620021f7565b620023808291858501519061ffff16600052600860205260406000209060005260205260018060a01b036040600020541690565b166200238e811515620036dc565b6200216e565b620023a382881633146200360d565b6200209f565b9050620020589550620023c891503d8088833e62000d0a818362000414565b91956200204b565b60405190602082018281106001600160401b038211176200038a5760405260008252565b3d1562002424573d906200240882620004b7565b9162002418604051938462000414565b82523d6000602084013e565b606090565b5190620004458262000f46565b90816020910312620005205751620005538162000f46565b81601f82011215620005205780516200246781620004b7565b9262002477604051948562000414565b81845260208284010111620005205762000553916020808501910162000850565b90602082820312620005205781516001600160401b03811162000520576200055392016200244e565b51906001600160401b03821682036200052057565b9081602091031262000520576200055390620024c1565b916200251560ff9163ffffffff60409497969716855260606020860152606085019062000875565b9416910152565b6040513d6000823e3d90fd5b6040519060a082018281106001600160401b038211176200038a5760405260006080838281528260208201528260408201528260608201520152565b9081602091031262000520575190565b156200257c57565b60405162461bcd60e51b815260206004820152602260248201527f76616c756520697320736d616c6c6572207468616e20776f726d686f6c652066604482015261656560f01b6064820152608490fd5b634e487b7160e01b600052601160045260246000fd5b608419810191908211620025f257565b620025cc565b91908203918211620025f257565b156200260e57565b60405162461bcd60e51b815260206004820152602c60248201527f66656520697320626967676572207468616e20616d6f756e74206d696e75732060448201526b776f726d686f6c652066656560a01b6064820152608490fd5b156200267057565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b519062000445826200064e565b9081602091031262000520575162000553816200064e565b90620026e562002528565b506001600160a01b03821660009081526009602052604090206200270b905b5460ff1690565b1562002a1a57604051634d4502c960e11b81526001600160a01b0383169260209290918381600481885afa90811562000c1b576004918591600091620029e6575b509560405192838092633d6c043b60e01b82525afa90811562000c1b57620027d394600092620029c4575b5050905b620027d9604051916000806020948581019063313ce56760e01b825260048152620027a681620003f8565b5190885afa50620027c9620027ba620023f4565b84808251830101910162002436565b9586809262002cf8565b62002d55565b9261ffff94620027ee866002541661ffff1690565b8787169081036200293e57620028fe620028e983620028e386600080620028f29c8b620028ba604051620028988382019486806370a0823160e01b97888152856200284b3060248301919091602081019260018060a01b03169052565b039562002861601f199788810183528262000414565b51908c5afa506200288462002875620023f4565b86808251830101910162002564565b98309033906001600160a01b031662004f2a565b60405192830193845230602484015282604481015b0390810183528262000414565b51908b5afa50620028dd620028ce620023f4565b8a808251830101910162002564565b620025f8565b62002cf8565b96879362002cb3565b976002541661ffff1690565b146200292b575b5050620029156200129d62000468565b8401526040830152606082015234608082015290565b620029369162003cde565b388362002905565b6001600160a01b03831695620029578130338a62004f2a565b863b156200052057604051632770a7eb60e21b815230600482015260248101829052966000908890604490829084905af196871562000c1b5783620028fe92620028e992620028f29a620029ad575b5062002cf8565b8062000c3c620029bd92620003ac565b38620029a6565b620029de9250803d1062001350576200133f818362000414565b388062002777565b62002a0b9150823d841162002a12575b62002a02818362000414565b810190620026c2565b386200274c565b503d620029f6565b60025461ffff1691620027d3916001600160a01b038216906200277b565b919062002a4462002528565b506001600160a01b038316600090815260096020526040902062002a689062002704565b1562002c6f57604051634d4502c960e11b81526001600160a01b0384169360209290918381600481895afa90811562000c1b57600491859160009162002c4d575b509660405192838092633d6c043b60e01b82525afa90811562000c1b57620027d39460009262002c2b575b5050915b62002b26604051926000806020958681019063313ce56760e01b82526004815262002b0381620003f8565b5190865afa50620027c962002b17620023f4565b85808251830101910162002436565b60025461ffff969188881691879085908a16840362002bbb576040516370a0823160e01b818901818152306024840152620028fe95620028f29562002bb2959094620028e39491936000938493928f9262002b8f9262002898918790819085604481016200284b565b51908c5afa50620028dd62002ba3620023f4565b8b808251830101910162002564565b97889462002cf8565b50506001600160a01b0384169062002bd68130338562004f2a565b813b156200052057604051632770a7eb60e21b815230600482015260248101829052916000908390604490829084905af191821562000c1b5788620028f29262002bb292620028fe95620029ad575062002cf8565b62002c459250803d1062001350576200133f818362000414565b388062002ad4565b62002c689150823d841162002a125762002a02818362000414565b3862002aa9565b60025461ffff1692620027d3916001600160a01b0382169162002ad8565b60ff6007199116019060ff8211620025f257565b60ff16604d8111620025f257600a0a90565b600090600860ff82161162002cc6575090565b62002cd562002cdb9162002c8d565b62002ca1565b1562002ce45790565b634e487b7160e01b81526012600452602490fd5b90600860ff82161162002d09575090565b62002cd562002d189162002c8d565b90811562002d24570490565b634e487b7160e01b600052601260045260246000fd5b6402540be40090818102918183041490151715620025f25790565b90600860ff82161162002d66575090565b62002cd562002d759162002c8d565b90818102918183041490151715620025f25790565b1562002d9257565b60405162461bcd60e51b815260206004820152601260248201527119995948195e18d959591cc8185b5bdd5b9d60721b6044820152606490fd5b9262002e749795929462002e146020989562002e249462002df08988111562002d8a565b62002dfa62000477565b60018152985b898c0152604089015261ffff166060880152565b608086015261ffff1660a0850152565b60c083015260005462002e4c9062002e45906001600160a01b0316620008d6565b9262003eb1565b6002546040516358cd21bf60e11b81529687958694938593891c60ff169160048501620024ed565b03925af190811562000c1b5760009162002e8c575090565b62000553915060203d811162001ae65762001ad4818362000414565b9262002e7497929462002e14602098979562002ed39462002ec862000447565b600381529862002e00565b3360c084015260e083015260005462002e4c9062002efa906001600160a01b0316620008d6565b9262003f27565b5190620004458262000677565b9080601f8301121562000520578151916001600160401b0383116200038a5760409182519360209162002f47838360051b018762000414565b818652828087019260071b8501019381851162000520578301915b84831062002f735750505050505090565b608083830312620005205783608091875162002f8f81620003c0565b8551815282860151838201528886015162002faa8162000f46565b898201526060808701519062002fc08262000f46565b82015281520192019162002f62565b519081151582036200052057565b909160608284031262000520578151916001600160401b0392838111620005205781016101608186031262000520576200301662000486565b90620030228162002429565b8252620030326020820162002f01565b6020830152620030456040820162002f01565b60408301526200305860608201620026b5565b6060830152608081015160808301526200307560a08201620024c1565b60a08301526200308860c0820162002429565b60c083015260e0810151858111620005205786620030a89183016200244e565b60e0830152610100620030bd81830162002f01565b9083015261012080820151868111620005205787620030de91840162002f0e565b90830152610140809101519082015293620030fc6020830162002fcf565b93604083015190811162000520576200055392016200244e565b156200311f5750565b60405162461bcd60e51b8152602060048201529081906200314590602483019062000875565b0390fd5b156200315157565b60405162461bcd60e51b815260206004820152600f60248201526e34b73b30b634b21032b6b4ba3a32b960891b6044820152606490fd5b91620025156001600160401b0391620031af60409497969760608752606087019062000875565b90858203602087015262000875565b90620031fb61ffff60408401511660208401519061ffff16600052600860205260406000209060005260205260018060a01b036040600020541690565b916001600160a01b03831691821562003280576200322c60806200322360a085015162004472565b93015162004472565b92803b1562000520576200325c9360008094604051968795869485936350c66be360e11b85526004850162003188565b03925af1801562000c1b5762003270575090565b8062000c3c6200055392620003ac565b60405162461bcd60e51b815260206004820152601d60248201527f7772617070656420617373657420646f6573206e6f74206578697374730000006044820152606490fd5b15620032cd57565b60405162461bcd60e51b815260206004820152602860248201527f63616e206f6e6c79207772617020746f6b656e732066726f6d20666f726569676044820152676e20636861696e7360c01b6064820152608490fd5b156200332b57565b60405162461bcd60e51b815260206004820152601c60248201527f7772617070656420617373657420616c726561647920657869737473000000006044820152606490fd5b936001600160401b039060ff620033ae61ffff969b9a99956200339f60c09a9660e08b5260e08b019062000875565b9089820360208b015262000875565b9a1660408701521660608501526001600160a01b031660808401521660a08201520152565b6001600160a01b039091168152604060208201819052620005539291019062000875565b906200340c6020928281519485920162000850565b0190565b9190916200355d6200351360408301946200344462003431875161ffff1690565b60025461ffff90811691161415620032c5565b85516020858101805161ffff90931660009081526008835260408082209482529383529290922054919590916200352091906200348b906001600160a01b03161562003323565b620034ed6200349e60a083015162004472565b94620034bd6060620034b4608086015162004472565b94015160ff1690565b95620034cb8c5161ffff1690565b908a519260405198899663c71f461560e01b8a89015230936024890162003370565b039262003503601f199485810183528262000414565b60405194859130858401620033d3565b0383810185528462000414565b6200356a6106f69362003535838601620004a7565b94808652620050e684870139604051958691620035568584018098620033f7565b90620033f7565b0383810186528562000414565b620035a86200357b885161ffff1690565b865160405160f09290921b6001600160f01b031916938201938452600284015291928260228501620028ad565b5190209151906000f592833b15620005205751905161ffff909116600090815260086020908152604080832093835292815282822080546001600160a01b0319166001600160a01b03871690811790915582526009905220805460ff19166001179055565b156200361557565b60405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b21039b2b73232b960911b6044820152606490fd5b156200365357565b60405162461bcd60e51b815260206004820152601a60248201527f7472616e7366657220616c726561647920636f6d706c657465640000000000006044820152606490fd5b15620036a057565b60405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103a30b933b2ba1031b430b4b760611b6044820152606490fd5b15620036e457565b60405162461bcd60e51b815260206004820152602560248201527f6e6f207772617070657220666f72207468697320746f6b656e2063726561746560448201526419081e595d60da1b6064820152608490fd5b156200373f57565b60405162461bcd60e51b815260206004820152602360248201527f696e76616c696420746f6b656e2c2063616e206f6e6c7920756e77726170205760448201526208aa8960eb1b6064820152608490fd5b156200379857565b60405162461bcd60e51b815260206004820152602260248201527f66656520686967686572207468616e207472616e7366657272656420616d6f756044820152611b9d60f21b6064820152608490fd5b600080546001600160a01b039062003802908216620008d6565b92604093838551809263607ec5ef60e11b82528180620038276004978883016200089c565b03915afa801562000c1b57849085869162003c40575b6200384a92935062003116565b62003859620009398262003e0e565b60e08101946200386a865162004316565b926200387a608085015162003c69565b93600360ff6200388b835160ff1690565b161462003c2b575b620038be6101408501620009ae620009a8620009a48351600052600660205260ff6040600020541690565b606084015161ffff16936001600160401b03620038ea60a060808401519301516001600160401b031690565b169061ffff8096167fcaf280c8cfeba144da67230d9b009c8f868a75bac9a528fa0474be1ba317c1698a80a483620039456200392b60a084015161ffff1690565b6200393b836002541661ffff1690565b9616861462003698565b86606083019562003958875161ffff1690565b908382160362003bea57505062003976620008d68584015162003c69565b9062003989602084015189841662003d91565b8782169289808751602081019063313ce56760e01b8252888152620039ae81620003f8565b5190875afa50620039c6620021d062000ae8620023f4565b998a15158062003bdd575b1562003bce57620039e5828c111562003790565b99620039f3885161ffff1690565b8362003a04816002541661ffff1690565b91161462003bbc57843b15620005205786516340c10f1960e01b81523387820190815260208101839052909290600090849081906040010381838a5af192831562000c1b5762003a5b9362003ba5575b50620025f8565b95891562003afe575050825462003a80925087166001600160a01b03169050620008d6565b91823b1562000c705751632e1a7d4d60e01b815290810183815290939291869185919082908490829060200103925af191821562000c1b5785948594859462003ae7575b508391831562003adc575b1690f11562000c1b575190565b6108fc925062003acf565b8062000c3c62003af792620003ac565b3862003ac4565b9092959694985062003b15919397505161ffff1690565b9062003b26816002541661ffff1690565b91161462003b945750813b15620005205793516340c10f1960e01b81526001600160a01b03909416928401928352602083019190915260009183919082908490829060400103925af1801562000c1b5762003b8057505190565b8062000c3c62003b9092620003ac565b5190565b915091925062003b90935062004ee5565b8062000c3c62003bb592620003ac565b3862003a54565b62003a5b91620028dd82338762004ee5565b995062003a5b908a90620025f8565b50338a8a161415620039d1565b8386015161ffff909116600090815260086020908152604080832093835292905220546001600160a01b03161662003c24811515620036dc565b9062003989565b62003c3a86861633146200360d565b62003893565b50505062003c5d6200384a913d8087833e62000d0a818362000414565b9192508291906200383d565b6001600160a01b0319811662003c85576001600160a01b031690565b60405162461bcd60e51b8152602060048201526013602482015272696e76616c69642045564d206164647265737360681b6044820152606490fd5b90601f8201809211620025f257565b6085019081608511620025f257565b6001600160a01b0381166000908152600a602052604090205490918101908110620025f2576001600160401b03811162003d2e576001600160a01b039091166000908152600a6020526040902055565b60405162461bcd60e51b815260206004820152603560248201527f7472616e736665722065786365656473206d6178206f75747374616e64696e6760448201527408189c9a5919d959081d1bdad95b88185b5bdd5b9d605a1b6064820152608490fd5b6001600160a01b0381166000908152600a602052604090205490918103908111620025f2576001600160a01b039091166000908152600a6020526040902055565b1562003dda57565b60405162461bcd60e51b815260206004820152600c60248201526b696e76616c696420666f726b60a01b6044820152606490fd5b62003e1d600c54461462003dd2565b608062003e4161ffff60608401511661ffff16600052600b60205260406000205490565b9101511490565b8051602082015191604081015191606082015160a06080840151930151936040519560ff60f81b809460f81b166020880152602187015261ffff60f01b9060f01b16604186015260f81b16604384015260448301526064820152606481526200055381620003dc565b80519060208101519060408101519060608101519160808201519060c060a0840151930151946040519660ff60f81b9060f81b1660208801526021870152604186015261ffff60f01b809360f01b166061860152606385015260f01b166083830152608582015260858152620005538162000390565b6200055360a582516020840151936040810151906060810151608082015160a08301519060e060c085015194015194604051998a9760ff60f81b9060f81b1660208901526021880152604187015261ffff60f01b809360f01b166061870152606386015260f01b166083840152608583015262003fae815180926020868601910162000850565b810103608581018452018262000414565b1562003fc757565b60405162461bcd60e51b8152602060048201526011602482015270696e76616c69642041737365744d65746160781b6044820152606490fd5b9060405191620040108362000390565b600090818452602084019082825260408501928084526060860193818552608087019082825260a088019283526200405c60028960ff620040518862004d89565b168091521462003fbf565b6021845110620040c557620004459562004091620040a39260649760218801519052620040898762004e19565b61ffff169052565b6200409c8562004de6565b60ff169052565b620040ae8362004ea1565b9052620040bb8262004ec3565b9052511462003fbf565b60405162461bcd60e51b8152602060048201526015602482015274746f427974657333325f6f75744f66426f756e647360581b6044820152606490fd5b6040519062004111826200036e565b8160c06000918281528260208201528260408201528260608201528260808201528260a08201520152565b156200414457565b60405162461bcd60e51b815260206004820152601060248201526f34b73b30b634b2102a3930b739b332b960811b6044820152606490fd5b906200418762004102565b91620041a6600160ff6200419b8462004d89565b16808652146200413c565b620041b18162004e3b565b6020840152620041c18162004e7f565b604084015261ffff620041d48262004e08565b1660608401526063815110620040c55760858160636200044593015160808601526200420f620042048262004e2a565b61ffff1660a0870152565b6200421a8162004e4c565b60c086015251146200413c565b906040519161010083018381106001600160401b038211176200038a5760405260009081845260208401918083526040850181815260608601828152608087019083825260a088019284845260c0890194855260e089019660608852896200428f8862004d89565b60ff1690819052620042a4906003146200413c565b620042af8762004e3b565b9052620042bc8662004e7f565b9052620042c98562004e08565b61ffff169052620042da8462004eb2565b9052620042e78362004e2a565b61ffff169052620042f88262004ed4565b905280516200430790620025e2565b620043129162004cf3565b9052565b906200432162004102565b9160ff6200432f8262004d89565b1660018103620043475750620005539192506200417c565b600303620043c257620043ae60a062004364620043b99362004227565b6003865260208101516020870152604081015160408701526200439b62004390606083015161ffff1690565b61ffff166060880152565b60808101516080870152015161ffff1690565b61ffff1660a0840152565b600060c0830152565b60405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081c185e5b1bd859081a5960721b6044820152606490fd5b634e487b7160e01b600052603260045260246000fd5b6000198114620025f25760010190565b906200442e82620004b7565b6200443d604051918262000414565b828152809262004450601f1991620004b7565b0190602036910137565b9081518110156200446c570160200190565b620043fc565b60005b6020811080620044e0575b156200449757620044919062004412565b62004475565b90620044a38262004422565b9160005b818110620044b55750505090565b60208110156200446c578083620044da921a620044d382876200445a565b5362004412565b620044a7565b156200446c5781811a60f81b6001600160f81b031916151562004480565b156200450657565b60405162461bcd60e51b815260206004820152601060248201526f1a5b9d985b1a590818da185a5b881a5960821b6044820152606490fd5b156200454657565b60405162461bcd60e51b815260206004820152601860248201527f636861696e20616c7265616479207265676973746572656400000000000000006044820152606490fd5b156200459357565b60405162461bcd60e51b815260206004820152601160248201527034b73b30b634b21022ab269021b430b4b760791b6044820152606490fd5b6040519061016082018281106001600160401b038211176200038a57604052816101406000918281528260208201528260408201528260608201528260808201528260a08201528260c0820152606060e08201528261010082015260606101208201520152565b604051906200464282620003f8565b60168252753bb937b7339033b7bb32b93730b731b29031b430b4b760511b6020830152565b604051906200467682620003f8565b601982527f77726f6e6720676f7665726e616e636520636f6e7472616374000000000000006020830152565b60405190606082018281106001600160401b038211176200038a576040526022825261195960f21b6040837f676f7665726e616e636520616374696f6e20616c726561647920636f6e73756d60208201520152565b620047419062004706620045cc565b5060008054909182916200472590620008d6906001600160a01b031681565b604051808096819463607ec5ef60e11b8352600483016200089c565b03915afa91821562000c1b57819282918391620047f9575b508115620047f1575050606082015161ffff1661ffff62004785620013f460025461ffff9060101c1690565b911603620047e557608082015160035403620047d957620047b9610140830151600052600560205260ff6040600020541690565b620047cd57509060019062000553620023d0565b909162000553620046a2565b90916200055362004667565b90916200055362004633565b929390929150565b915050620048149192503d8084833e62000d0a818362000414565b9192913862004759565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc908154813b15620048fa577f2e4cc16c100f0b55e2df82ab0b1a7e294aa9cbd01b48fbaf622683fbc0507a499060018060a01b039081841694856bffffffffffffffffffffffff60a01b8316179055620048f4604051600080968192897fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a263204a7f0760e21b602082019081526004825290620048df81620003f8565b51915af4620048ed620023f4565b9062003116565b169180a3565b60405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608490fd5b156200495d57565b60405162461bcd60e51b815260206004820152600c60248201526b77726f6e67206d6f64756c6560a01b6044820152606490fd5b156200499957565b60405162461bcd60e51b815260206004820152600c60248201526b3bb937b7339030b1ba34b7b760a11b6044820152606490fd5b15620049d557565b60405162461bcd60e51b815260206004820152600c60248201526b0eee4dedcce40d8cadccee8d60a31b6044820152606490fd5b9062004a1462002528565b9162004a3a6a546f6b656e42726964676562004a308362004e5d565b8086521462004955565b62004a5b600160ff62004a4d8462004dd5565b168060208701521462004991565b602381511062004aa4576045620004459161ffff80602383015116604087015262004a868262004df7565b16606086015262004a978162004e90565b60808601525114620049cd565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7431365f6f75744f66426f756e647360601b6044820152606490fd5b6040519062004aef82620003c0565b60006060838281528260208201528260408201520152565b9062004b1262004ae0565b9162004b2e6a546f6b656e42726964676562004a308362004e5d565b62004b41600260ff62004a4d8462004dd5565b602381511062004aa457602381015161ffff166040840152620004459060439062004b6c8162004e6e565b60608601525114620049cd565b9062004b8462004ae0565b9162004ba06a546f6b656e42726964676562004a308362004e5d565b62004bb3600360ff62004a4d8462004dd5565b604181511062004bf057604381604162000445930151604086015262004be862004bdd8262004e08565b61ffff166060870152565b5114620049cd565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b46810362004c3a57600c55565b60405162461bcd60e51b81526020600482015260126024820152711a5b9d985b1a5908195d9b50da185a5b925960721b6044820152606490fd5b1562004c7c57565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1562004cba57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b62004d0b8262004d038162003cc0565b101562004c74565b62004d24815162004d1c8462003ccf565b111562004cb2565b8162004d3d575050604051600081526020810160405290565b60405191601f8116916085831560051b80858701019484860193010101905b80841062004d755750508252601f01601f191660405290565b909283518152602080910193019062004d5c565b600181511062004d9a576001015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b602181511062004d9a576021015190565b602481511062004d9a576024015190565b602581511062004aa4576025015190565b604381511062004aa4576043015190565b602381511062004aa4576023015190565b606581511062004aa4576065015190565b602181511062004bf0576021015190565b608581511062004bf0576085015190565b6020815110620040c5576020015190565b6043815110620040c5576043015190565b6041815110620040c5576041015190565b6045815110620040c5576045015190565b6044815110620040c5576044015190565b6063815110620040c5576063015190565b6064815110620040c5576064015190565b6085815110620040c5576085015190565b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152620004459162004f2460648362000414565b62004fe6565b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152620004459162004f2482620003dc565b908160209103126200052057620005539062002fcf565b1562004f8e57565b60405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608490fd5b6040516001600160a01b0391909116916200500182620003f8565b6020928383527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656484840152803b15620050825760008281928287620050589796519301915af162005051620023f4565b90620050c7565b805190816200506657505050565b8262000445936200507c93830101910162004f6f565b62004f86565b60405162461bcd60e51b815260048101859052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b90919015620050d4575090565b8151156200311f5750805190602001fdfe6080604052346100a3576106f6803803809161001a826100be565b60803960408160800191126100a35761003161010c565b60a05191906001600160401b0383116100a35781609f840112156100a35782608001519261005e84610122565b9261006c60405194856100e9565b84845260a085830101116100a3576100949361008f9160a060208601910161013d565b610160565b6040516101f690816105008239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6080601f91909101601f19168101906001600160401b038211908210176100e457604052565b6100a8565b601f909101601f19168101906001600160401b038211908210176100e457604052565b608051906001600160a01b03821682036100a357565b6001600160401b0381116100e457601f01601f191660200190565b60005b8381106101505750506000910152565b8181015183820152602001610140565b90813b156102c257604051635c60da1b60e01b8082526020939092916001600160a01b038216918582600481865afa918215610298576101ef926101af916000916102a5575b503b1515610340565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b03909216919091179055565b60405192817f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e600080a282511580159061029d575b610230575b5050505050565b6004848693819382525afa9182156102985761025e93600093610269575b50506102586103a5565b916103fe565b503880808080610229565b610289929350803d10610291575b61028181836100e9565b810190610315565b90388061024e565b503d610277565b610334565b506000610224565b6102bc9150883d8a116102915761028181836100e9565b386101a6565b60405162461bcd60e51b815260206004820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e6044820152641d1c9858dd60da1b6064820152608490fd5b908160209103126100a357516001600160a01b03811681036100a35790565b6040513d6000823e3d90fd5b1561034757565b60405162461bcd60e51b815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201526f1cc81b9bdd08184818dbdb9d1c9858dd60821b6064820152608490fd5b60405190606082016001600160401b038111838210176100e45760405260278252660819985a5b195960ca1b6040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b9190823b15610451576000816104469460208394519201905af43d15610449573d9061042982610122565b9161043760405193846100e9565b82523d6000602084013e6104a5565b90565b6060906104a5565b60405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608490fd5b909190156104b1575090565b8151156104c15750805190602001fd5b6044604051809262461bcd60e51b8252602060048301526104f1815180928160248601526020868601910161013d565b601f01601f19168101030190fdfe608080604052366100c4577fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054635c60da1b60e01b8252602090829060049082906001600160a01b03165afa9081156100b857600091610060575b5061015b565b6020903d82116100b0575b601f8201601f1916810167ffffffffffffffff81118282101761009c5761009693506040520161017a565b3861005a565b634e487b7160e01b84526041600452602484fd5b3d915061006b565b6040513d6000823e3d90fd5b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054604051635c60da1b60e01b815290602090829060049082906001600160a01b03165afa9081156100b85760009161011d575061015b565b60203d8111610154575b601f8101601f1916820167ffffffffffffffff81118382101761009c5761009693506040528101906101a1565b503d610127565b6000808092368280378136915af43d82803e15610176573d90f35b3d90fd5b602090607f19011261019c576080516001600160a01b038116810361019c5790565b600080fd5b9081602091031261019c57516001600160a01b038116810361019c579056fea2646970667358221220a928e3b00b7d19d8e2f067361e93c7712de3e243b0b8be428e9ac989960b767464736f6c63430008130033a2646970667358221220a30f155f439a001a274ac95095d37324114ce8940c9e93d8759b164730d7fd6864736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previousAdmin";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "newAdmin";
            readonly type: "address";
        }];
        readonly name: "AdminChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "beacon";
            readonly type: "address";
        }];
        readonly name: "BeaconUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldContract";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newContract";
            readonly type: "address";
        }];
        readonly name: "ContractUpgraded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint16";
            readonly name: "emitterChainId";
            readonly type: "uint16";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "emitterAddress";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly name: "TransferRedeemed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "implementation";
            readonly type: "address";
        }];
        readonly name: "Upgraded";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "WETH";
        readonly outputs: readonly [{
            readonly internalType: "contract IWETH";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "_parseTransferCommon";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "toChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint256";
                readonly name: "fee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct BridgeStructs.Transfer";
            readonly name: "transfer";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "tokenAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }];
        readonly name: "attestToken";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId_";
            readonly type: "uint16";
        }];
        readonly name: "bridgeContracts";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "chainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "completeTransfer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "completeTransferAndUnwrapETH";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "completeTransferAndUnwrapETHWithPayload";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "completeTransferWithPayload";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "createWrapped";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint8";
                readonly name: "decimals";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "symbol";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "name";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct BridgeStructs.AssetMeta";
            readonly name: "meta";
            readonly type: "tuple";
        }];
        readonly name: "encodeAssetMeta";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "toChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint256";
                readonly name: "fee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct BridgeStructs.Transfer";
            readonly name: "transfer";
            readonly type: "tuple";
        }];
        readonly name: "encodeTransfer";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "toChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "fromAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }];
            readonly internalType: "struct BridgeStructs.TransferWithPayload";
            readonly name: "transfer";
            readonly type: "tuple";
        }];
        readonly name: "encodeTransferWithPayload";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "evmChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "finality";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "governanceActionIsConsumed";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceChainId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "governanceContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "implementation";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "isFork";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "impl";
            readonly type: "address";
        }];
        readonly name: "isInitialized";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly name: "isTransferCompleted";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "isWrappedAsset";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly name: "outstandingBridged";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseAssetMeta";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint8";
                readonly name: "decimals";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes32";
                readonly name: "symbol";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "name";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct BridgeStructs.AssetMeta";
            readonly name: "meta";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parsePayloadID";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "payloadID";
            readonly type: "uint8";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedRecoverChainId";
            readonly type: "bytes";
        }];
        readonly name: "parseRecoverChainId";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "evmChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint16";
                readonly name: "newChainId";
                readonly type: "uint16";
            }];
            readonly internalType: "struct BridgeStructs.RecoverChainId";
            readonly name: "rci";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseRegisterChain";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainID";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct BridgeStructs.RegisterChain";
            readonly name: "chain";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseTransfer";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "toChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint256";
                readonly name: "fee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct BridgeStructs.Transfer";
            readonly name: "transfer";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseTransferWithPayload";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "payloadID";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "tokenAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "tokenChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "toChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "fromAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }];
            readonly internalType: "struct BridgeStructs.TransferWithPayload";
            readonly name: "transfer";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly name: "parseUpgrade";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "module";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint8";
                readonly name: "action";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "newContract";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct BridgeStructs.UpgradeContract";
            readonly name: "chain";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVM";
            readonly type: "bytes";
        }];
        readonly name: "registerChain";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVM";
            readonly type: "bytes";
        }];
        readonly name: "submitRecoverChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "testNewImplementationActive";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "fakeChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "fakeEvmChainId";
            readonly type: "uint256";
        }];
        readonly name: "testOverwriteEVMChainId";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "WETH";
            readonly type: "address";
        }];
        readonly name: "testUpdateWETHAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tokenImplementation";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "recipientChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "arbiterFee";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }];
        readonly name: "transferTokens";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "recipientChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly name: "transferTokensWithPayload";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVm";
            readonly type: "bytes";
        }];
        readonly name: "updateWrapped";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedVM";
            readonly type: "bytes";
        }];
        readonly name: "upgrade";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wormhole";
        readonly outputs: readonly [{
            readonly internalType: "contract IWormhole";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "recipientChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "arbiterFee";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }];
        readonly name: "wrapAndTransferETH";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "recipientChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "recipient";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint32";
            readonly name: "nonce";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly name: "wrapAndTransferETHWithPayload";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "tokenChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "tokenAddress";
            readonly type: "bytes32";
        }];
        readonly name: "wrappedAsset";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): MockBridgeImplementationInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockBridgeImplementation;
}
export {};
