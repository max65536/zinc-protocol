import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockGenericRelayer, MockGenericRelayerInterface } from "../MockGenericRelayer";
declare type MockGenericRelayerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockGenericRelayer__factory extends ContractFactory {
    constructor(...args: MockGenericRelayerConstructorParams);
    deploy(_wormhole: PromiseOrValue<string>, _wormholeSimulator: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockGenericRelayer>;
    getDeployTransaction(_wormhole: PromiseOrValue<string>, _wormholeSimulator: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockGenericRelayer;
    connect(signer: Signer): MockGenericRelayer__factory;
    static readonly bytecode = "0x6080346200009557601f620021c938819003918201601f19168301916001600160401b038311848410176200009a57808492604094855283398101031262000095576200005a60206200005283620000b0565b9201620000b0565b60018060a01b03908160018060a01b031993168360005416176000551690600154161760015560006002556040516121039081620000c68239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000955756fe6080604052600436101561001257600080fd5b6000803560e01c908163153cb5fc1461009a575080633a768463146100955780635b8c4485146100905780635dcc77491461008b5780637b6aa6731461008657806380cb624d14610081578063a595b6bf1461007c5763d6fef2e41461007757600080fd5b6106d6565b6105ec565b6105ba565b6104e7565b61043f565b6102cd565b61014f565b346100dd576100da61ffff6100ae3661011c565b9116835260046020526040832080546001600160a01b0319166001600160a01b03909216919091179055565b80f35b80fd5b61ffff8116036100ec57565b600080fd5b602435906100fe826100e0565b565b6001600160a01b038116036100ec57565b35906100fe82610100565b60409060031901126100ec57600435610134816100e0565b9060243561014181610100565b90565b60009103126100ec57565b346100ec5760003660031901126100ec576020604051737109709ecfa91a80626ff3989d68f67f5b1dd12d8152f35b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b038211176101af57604052565b61017e565b61016081019081106001600160401b038211176101af57604052565b608081019081106001600160401b038211176101af57604052565b6001600160401b0381116101af57604052565b602081019081106001600160401b038211176101af57604052565b90601f801991011681019081106001600160401b038211176101af57604052565b604051906100fe826101b4565b604051906100fe82610194565b6001600160401b0381116101af5760051b60200190565b6001600160401b0381116101af57601f01601f191660200190565b81601f820112156100ec5780359061029d8261026b565b926102ab6040519485610219565b828452602083830101116100ec57816000926020809301838601378301015290565b346100ec576060806003193601126100ec576001600160401b03906004358281116100ec57366023820112156100ec5780600401359061030c82610254565b92604061031b81519586610219565b83855260209384860191602480600593841b870101953687116100ec57818101945b878610610371578a8a61034e6100f1565b6044359283116100ec5761036961036f933690600401610286565b91610ece565b005b85358b81116100ec578201908760231983360301126100ec5784519061039682610194565b848301358d81116100ec578301366043820112156100ec5785810135906103bc82610254565b906103c989519283610219565b8282528d8201604480948c1b830101913683116100ec578f908501915b83831061042e57505050508352830135918d83116100ec5761041f60648d9561041587968a3691840101610286565b8685015201610111565b8782015281520195019461033d565b819083358152019101908f906103e6565b346100ec5760403660031901126100ec5760043561045c816100e0565b6024356001600160401b0381116100ec5761047b903690600401610286565b6040519063064554e960e21b8252600092838360048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af180156104e2576100da9385916104c0575b50610ece565b6104dc91503d8087833e6104d48183610219565b81019061092e565b386104ba565b610a6f565b346100ec5761036f61ffff6104fb3661011c565b9116600052600360205260406000209060018060a01b03166bffffffffffffffffffffffff60a01b825416179055565b6001600160401b038116036100ec57565b60409060031901126100ec57600435610554816100e0565b906024356101418161052b565b60005b8381106105745750506000910152565b8181015183820152602001610564565b9060209161059d81518092818552858086019101610561565b601f01601f1916010190565b906020610141928181520190610584565b346100ec576105e86105d46105ce3661053c565b9061088d565b604051918291602083526020830190610584565b0390f35b346100ec5760203660031901126100ec57600435610609816100e0565b60405163064554e960e21b8152600091828260048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af19081156104e2576100da92849261065e575b5060405191610656836101fe565b848352610ece565b6106739192503d8086833e6104d48183610219565b9038610648565b908082519081815260208091019281808460051b8301019501936000915b8483106106a85750505050505090565b90919293949584806106c6600193601f198682030187528a51610584565b9801930193019194939290610698565b346100ec576105e86106f06106ea3661053c565b906107e2565b60405191829160208352602083019061067a565b90600182811c92168015610734575b602083101461071e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610713565b906040519182600082549261075284610704565b9081845260019485811690816000146107bf575060011461077c575b50506100fe92500383610219565b9093915060005260209081600020936000915b8183106107a75750506100fe9350820101388061076e565b8554888401850152948501948794509183019161078f565b9150506100fe94506020925060ff191682840152151560051b820101388061076e565b60405160f09190911b6001600160f01b031916602080830191825260c09390931b6001600160c01b03191660228301529061082a81602a81015b03601f198101835282610219565b51902060005260058152604060002080549061084582610254565b926108536040519485610219565b82845260009182528082208185015b84841061087157505050505090565b600183819261087f8561073e565b815201920193019290610862565b60405160f09190911b6001600160f01b0319166020820190815260c09290921b6001600160c01b03191660228201526108c981602a810161081c565b5190206000526006602052610141604060002061073e565b81601f820112156100ec5780516108f78161026b565b926109056040519485610219565b818452602082840101116100ec576101419160208085019101610561565b51906100fe82610100565b60209081818403126100ec5780516001600160401b03918282116100ec57019083601f830112156100ec5781519361096585610254565b94604061097481519788610219565b8187528587019286600593841b870101958187116100ec57878101945b8786106109a45750505050505050505090565b85518781116100ec57820160609182601f1983870301126100ec5785516109ca81610194565b8b8301518a81116100ec57830186603f820112156100ec57808d80920151896109f282610254565b936109ff82519586610219565b8285528401918c1b830101918983116100ec578f908b01915b838310610a5e57505050508152868301518a81116100ec578c9484610a458988610a4f95819901016108e1565b8685015201610923565b87820152815201950194610991565b819083518152019101908f90610a18565b6040513d6000823e3d90fd5b90606081018251606083528051809252608083019160208092019060005b818110610ace5750505060409181610abb928601519085830390860152610584565b928101516001600160a01b031691015290565b825185529383019391830191600101610a99565b602080820190808352835180925260408301928160408460051b8301019501936000915b848310610b165750505050505090565b9091929394958480610b34600193603f198682030187528a51610a7b565b9801930193019194939290610b06565b90610b4e82610254565b610b5b6040519182610219565b8281528092610b6c601f1991610254565b019060005b828110610b7d57505050565b806060602080938501015201610b71565b634e487b7160e01b600052601160045260246000fd5b6000198114610bb35760010190565b610b8e565b634e487b7160e01b600052603260045260246000fd5b805160011015610bde5760400190565b610bb8565b8051821015610bde5760209160051b010190565b906020828203126100ec5781516001600160401b0381116100ec5761014192016108e1565b91939261ffff610c36604093606086526060860190610a7b565b951660208401526001600160a01b0316910152565b90610c5582610254565b604090610c6482519182610219565b8381528093610c75601f1991610254565b019160005b838110610c875750505050565b6020908251610c95816101b4565b6000815282600081830152600085830152606060008184015260006080840152600060a0840152600060c08401528060e084015260006101008401526101208301526000610140830152828601015201610c7a565b61ffff809116908114610bb35760010190565b519060ff821682036100ec57565b519063ffffffff821682036100ec57565b51906100fe826100e0565b51906100fe8261052b565b81601f820112156100ec57805190610d4982610254565b92604092610d5984519586610219565b808552602091828087019260071b850101938185116100ec578301915b848310610d865750505050505090565b6080838303126100ec57836080918751610d9f816101d0565b855181528286015183820152610db6898701610cfd565b898201526060610dc7818801610cfd565b90820152815201920191610d76565b906020828203126100ec5781516001600160401b03928382116100ec570190610160828203126100ec57610e0861023a565b92610e1283610cfd565b8452610e2060208401610d0b565b6020850152610e3160408401610d0b565b6040850152610e4260608401610d1c565b606085015260808301516080850152610e5d60a08401610d27565b60a0850152610e6e60c08401610cfd565b60c085015260e08301518181116100ec5782610e8b9185016108e1565b60e0850152610100610e9e818501610d0b565b9085015261012091828401519182116100ec57610ebc918401610d32565b90830152610140809101519082015290565b6001805490939190610ef0906001600160a01b03165b6001600160a01b031690565b60409081519182916355a58d7d60e01b835260009283918180610f176004998a8301610ae2565b03915afa9283156104e25782936111cd575b5090869182610f388551610b44565b9483915b6110ed575b5050610f4d8451610c4b565b825490958391859190610f68906001600160a01b0316610ee4565b915b611044575b50505050905b610f82575b505050505050565b81519061ffff918282169081101561103d5785610fe8936080610fa58489610be3565b510151610fd3610ee4610fc68c61ffff166000526003602052604060002090565b546001600160a01b031690565b149081611016575b50610fee575b5050610cea565b85610f75565b818561100861100061100f9583610be3565b519289610be3565b5191611241565b3885610fe1565b90506110316060611027858a610be3565b51015161ffff1690565b81169089161438610fdb565b5050610f7a565b90919293945085519261ffff8116938410156110e4576110829086611069868a610be3565b5187518094819263a9e1189360e01b83528783016105a9565b0381875afa9182156104e2578c956110b7936110b1928a916110c2575b506110aa828d610be3565b528a610be3565b50610cea565b919083959493610f6a565b6110de91503d808c833e6110d68183610219565b810190610dd6565b3861109f565b8a959450610f6f565b909192935084518210156111c457885461110f906001600160a01b0316610ee4565b848961111b8585610be3565b5192611144610ee46111376111308989610be3565b5151610bce565b516001600160a01b031690565b93838b6111648a519788968795869463674677b760e11b86528501610c1c565b03925af19283156104e2578a936111989287916111a2575b506111878289610be3565b526111928188610be3565b50610ba4565b9082949392610f3c565b6111be91503d8089833e6111b68183610219565b810190610bf7565b3861117c565b88939291610f41565b6111e29193503d8084833e6104d48183610219565b9138610f29565b9061014194926112046112129260808552608085019061067a565b908382036020850152610584565b6001600160a01b039093166040820152808303606090910152610584565b60ff1660ff8114610bb35760010190565b9160e0810160ff806112538351611715565b60019391168381036114d8575061126a9051611847565b9161016083019461127c865151610b44565b956000835b611417575b50505050506112d06112c76112bc6112b16112a460a0860151611760565b6020815191015190611702565b6060850151906116f5565b6080840151906116f5565b915161ffff1690565b946112ec610fc68761ffff166000526004602052604060002090565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b156100ec5760405163ca669fa760e01b81526001600160a01b039290921660048301526000908290602490829084905af180156104e257611404575b5061137f610ee4610fc661136a610ee4610ee4610fc68c61ffff166000526003602052604060002090565b9861ffff166000526004602052604060002090565b95803b156100ec576040516314c1d69960e31b8152966000938893849283916113ad918b8b600486016111e9565b03925af19384156104e2576100fe946113eb575b506113e560a06113d6606084015161ffff1690565b9201516001600160401b031690565b90611e32565b806113f86113fe926101eb565b80610144565b386113c1565b806113f8611411926101eb565b3861133f565b815151858216908110156114d25784939291906000855b611446575b505061143e90611230565b909192611281565b8a85969293949551898316908110156114c557611479611467868951610be3565b51611472838b610be3565b5190611fd9565b61149357505061148890611230565b81959493929161142e565b6114bd9250906114b6856114af61143e97948b9a99979b610be3565b5192610be3565b528b610be3565b509038611433565b5050819594939250611433565b50611286565b9396509450505060029150146114ec575050565b6114f6905161192c565b606081019161153883516115306112a46040968787019361014085519701519061151e610247565b97885260208801528887015251611760565b9051906116f5565b9161156361155182516105ce876113d6835161ffff1690565b91516106ea866113d6835161ffff1690565b9060009361157a610ee4865460018060a01b031690565b858751809263a9e1189360e01b8252818061159888600483016105a9565b03915afa80156104e25760e06115bb916115c39389916116db575b500151611847565b5161ffff1690565b926115df610fc68561ffff166000526004602052604060002090565b737109709ecfa91a80626ff3989d68f67f5b1dd12d90813b156116d757885163ca669fa760e01b81526001600160a01b039190911660048201529087908290602490829084905af180156104e2576116c4575b5061167b611675610ee4610fc6611660610ee4610ee4610fc68b61ffff166000526003602052604060002090565b9761ffff166000526004602052604060002090565b95611a2e565b96843b156116c0576116a29051978896879586946314c1d69960e31b8652600486016111e9565b03925af180156104e2576116b35750565b806113f86100fe926101eb565b8680fd5b806113f86116d1926101eb565b38611632565b8780fd5b6116ef91503d808b833e6110d68183610219565b386115b3565b91908201809211610bb357565b81810292918115918404141715610bb357565b6001815110611725576001015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b90604051604081018181106001600160401b038211176101af5760405260008152602081016000815281936060818051810103126100ec5760ff926117a760208301610cfd565b926060604084015193015190525216806117be5750565b6044906040519063c1f4bdd960e01b8252600482015260006024820152fd5b6040519061018082018281106001600160401b038211176101af57604052606061016083600080825280602083015283604083015280848301528060808301528360a08301528060c08301528060e083015280610100830152806101208301526101408201520152565b906118506117dd565b9161185a81611caa565b818101600281015161ffff168552602290810151602086015261187e910182611c17565b604085810192909252828101602081015190830151909290916118a2910184611c17565b60a0870191909152838101600281015161ffff1660c0880152602281015160e0880152604281015161010088015260628101516101208801526082908101516101408801526118f2910184611abe565b9290610160870152606086015260808501526100fe91611cdd565b6040519061191a82610194565b60006040838281528260208201520152565b906040519160c083018381106001600160401b038211176101af5760405261195261190d565b83526020830190600082526040840160008152606085016060815260808601906000825260a0870194600086528760ff60018701511660028103611a0f5750926119f78695936119de611a07946119d06119c66119e7996119b66100fe9e9d611b66565b915260028c820181015192910190565b929061ffff169052565b602089820181015192910190565b88979197611c17565b9152602087820181015192910190565b9152602085820181015192910190565b945252611cdd565b60449060405190633ce5fedf60e11b8252600482015260026024820152fd5b610141606182516020840151936040855191611a80602483518099602082019663ffffffff60e01b9060e01b168752611a708151809260208686019101610561565b810103600481018a520188610219565b015190611aa8604051968794600160f81b602087015260218601525180926041860190610561565b8201906041820152036041810184520182610219565b9160018060ff8180868801015195019416611ad881610254565b90611ae66040519283610219565b808252611af5601f1991610254565b0160005b818110611b4857505080956000935b611b13575b50505050565b909192948251861015611b42579083611b2e81949383611bcc565b9790611b3a8286610be3565b520193611b08565b94611b0d565b602091929350611b5661190d565b8282860101520190839291611af9565b90611b6f61190d565b9160ff60028201511660018103611bad5750600481015161ffff16835260248101516020840152602c908101516001600160401b0316604084015290565b60449060405190633ce5fedf60e11b8252600482015260016024820152fd5b9181611bd661190d565b930160ff60018201511660018103611bad5750602b808261ffff60036001600160401b03950151168752602381015160208801520151930192166040840152565b90611c3291600463ffffffff81848401015116920190611c36565b9091565b92908215611c8d578281019260405194601f8216928315611c84575b838701938385019201015b818410611c745750508452601f01601f1916604052565b8051845260209384019301611c5d565b60209350611c52565b92509050604051611c9d816101fe565b6000815260003681379190565b600101519060ff60019216828103611cbf5750565b6044908360405191633ce5fedf60e11b835260048301526024820152fd5b5190808203611cea575050565b604492506040519163061bc83560e51b835260048301526024820152fd5b818110611d13575050565b60008155600101611d08565b9190601f8111611d2e57505050565b6100fe926000526020600020906020601f840160051c83019310611d5a575b601f0160051c0190611d08565b9091508190611d4d565b91909182516001600160401b0381116101af57611d8b81611d858454610704565b84611d1f565b602080601f8311600114611dc7575081929394600092611dbc575b50508160011b916000199060031b1c1916179055565b015190503880611da6565b90601f19831695611ddd85600052602060002090565b926000905b888210611e1a57505083600195969710611e01575b505050811b019055565b015160001960f88460031b161c19169055388080611df7565b80600185968294968601518155019501930190611de2565b6040516001600160f01b031960f083901b1660208083019182526001600160c01b031960c086901b166022840152600a83529294601f199392909190611e79602a82610219565b519020600090815260059182845260408220908051936801000000000000000085116101af5782548584558691818710611f53575b5050611ec4919392930192600052602060002090565b90915b838310611f3757505060405160f09690961b6001600160f01b031916928601928352505060c09290921b6001600160c01b03191660028301526100fe9392611f329291611f1f9082600a850103908101835282610219565b5190206000526006602052604060002090565b611d64565b60018582611f4783945186611d64565b01920192019190611ec7565b8486528683872092830192015b828110611f6d5750611eae565b600191929350611f7d8154610704565b80611f8e575b500190879291611f60565b601f908181118414611fa65750508681555b38611f83565b83611fc792611fba85600052602060002090565b9201861c82019101611d08565b60008181526020812081835555611fa0565b60008054919261201092611ff5906001600160a01b0316610ee4565b604051808095819463a9e1189360e01b8352600483016105a9565b03915afa9081156104e2576000916120b4575b50815161ffff1661ffff61204661203f606085015161ffff1690565b61ffff1690565b91161491826120a2575b8261205a57505090565b6001600160401b0391925061209060a0612081604061209c9401516001600160401b031690565b9401516001600160401b031690565b6001600160401b031690565b91161490565b60208101516080830151149250612050565b6120c7913d8091833e6110d68183610219565b3861202356fea26469706673582212200d38b5eb3dbd13fe998c7fd060c6dfd4db5984105ed0a13680fe6b869336e98764736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_wormhole";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_wormholeSimulator";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "parsed";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "expected";
            readonly type: "uint8";
        }];
        readonly name: "InvalidPayloadId";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "received";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "expected";
            readonly type: "uint256";
        }];
        readonly name: "InvalidPayloadLength";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "version";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "expectedVersion";
            readonly type: "uint8";
        }];
        readonly name: "UnexpectedExecutionInfoVersion";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint64";
            readonly name: "deliveryVAASequence";
            readonly type: "uint64";
        }];
        readonly name: "getPastDeliveryVAA";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint64";
            readonly name: "deliveryVAASequence";
            readonly type: "uint64";
        }];
        readonly name: "getPastEncodedVMs";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log[]";
            readonly name: "logs";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "deliveryOverrides";
            readonly type: "bytes";
        }];
        readonly name: "relay";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "deliveryOverrides";
            readonly type: "bytes";
        }];
        readonly name: "relay";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "relay";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "deliveryAddress";
            readonly type: "address";
        }];
        readonly name: "setProviderDeliveryAddress";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }];
        readonly name: "setWormholeRelayerContract";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "vm";
        readonly outputs: readonly [{
            readonly internalType: "contract Vm";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): MockGenericRelayerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockGenericRelayer;
}
export {};
