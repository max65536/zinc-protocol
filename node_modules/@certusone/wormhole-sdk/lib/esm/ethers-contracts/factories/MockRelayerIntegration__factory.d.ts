import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockRelayerIntegration, MockRelayerIntegrationInterface } from "../MockRelayerIntegration";
declare type MockRelayerIntegrationConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockRelayerIntegration__factory extends ContractFactory {
    constructor(...args: MockRelayerIntegrationConstructorParams);
    deploy(_wormholeCore: PromiseOrValue<string>, _coreRelayer: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockRelayerIntegration>;
    getDeployTransaction(_wormholeCore: PromiseOrValue<string>, _coreRelayer: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockRelayerIntegration;
    connect(signer: Signer): MockRelayerIntegration__factory;
    static readonly bytecode = "0x60e034620000b757601f6200243338819003918201601f19168301916001600160401b03831184841017620000bc578084926040948552833981010312620000b7576200005a60206200005283620000d2565b9201620000d2565b6001600160a01b039182166080521660a0523360c05260405161234b9081620000e8823960805181611991015260a051818181610a0e0152818161116c0152818161124d01526118ba015260c0518181816103f70152610ce80152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000b75756fe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c80630644c8d01461013b57806316a4735e146101365780633d62cca014610131578063475888d21461012c578063529dca32146101275780636c5df4b314610122578063710000301461011d57806375abf68514610118578063899820c91461011357806398542ae21461010e578063aea3a47414610109578063b922653214610104578063bbc20949146100ff578063bca4b0fa146100fa578063cba9272e146100f5578063ce6d41de146100f0578063da974c2b146100eb5763ea22b3cf0361000e57610ede565b610e55565b610dce565b610d30565b610cc9565b610c23565b610bd9565b610b37565b610b1c565b61096f565b6108d8565b6107ae565b61069a565b610513565b6104bb565b610482565b6103a5565b6102d8565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761017157604052565b610140565b60a081019081106001600160401b0382111761017157604052565b6001600160401b03811161017157604052565b602081019081106001600160401b0382111761017157604052565b90601f801991011681019081106001600160401b0382111761017157604052565b604051906101ed82610156565b565b604051906101ed82610176565b81601f82011215610252578035906001600160401b0382116101715760405192610230601f8401601f1916602001856101bf565b8284526020838301011161025257816000926020809301838601378301015290565b600080fd5b61ffff81160361025257565b606435906101ed82610257565b6044359063ffffffff8216820361025257565b6064359063ffffffff8216820361025257565b606435906001600160801b038216820361025257565b60a435906001600160801b038216820361025257565b608435906001600160801b038216820361025257565b6080366003190112610252576004356001600160401b038111610252576103876103096103a19236906004016101fc565b60243561031581610257565b61031d610270565b9161035a610329610296565b91604051610336816101a4565b600081526040519161034783610156565b6000835260208301526040820152611f44565b9161ffff8116600052600560205260018060a01b03604060002054169061037f610fc5565b948282611156565b6040516001600160401b0390911681529081906020820190565b0390f35b3461025257602080600319360112610252576004356001600160401b03918282116102525736602383011215610252578160040135928311610252576024820191602436918560061b010111610252577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102525760005b83811061043157005b8161043d828686611f34565b013561046b61044d838787611f34565b3561045781610257565b61ffff166000526005602052604060002090565b55600019811461047d57600101610428565b611627565b346102525760203660031901126102525761ffff6004356104a281610257565b1660005260056020526020604060002054604051908152f35b346102525760203660031901126102525761ffff6004356104db81610257565b166000526005602052602060018060a01b0360406000205416604051908152f35b6001600160401b0381116101715760051b60200190565b60a0366003190112610252576001600160401b036004358181116102525761053f9036906004016101fc565b6024908135838111610252573660238201121561025257806004013592610565846104fc565b9361057360405195866101bf565b808552602095828787019260051b8501019336851161025257838101925b8584106105b35761001988886105a5610263565b9060843592604435916118ad565b83358381116102525789916105ce83928836918701016101fc565b815201930192610591565b6001600160a01b0381160361025257565b6001600160401b0381160361025257565b81601f8201121561025257803590610612826104fc565b92604090610622825195866101bf565b8385526020918286019183606080970286010194818611610252578401925b858410610652575050505050505090565b868483031261025257848791845161066981610156565b863561067481610257565b815282870135838201528587013561068b816105ea565b86820152815201930192610641565b610120366003190112610252576004356106b381610257565b602435906106c0826105d9565b6106c8610270565b916064356106d581610257565b608435926106e2846105d9565b6106ea6102ac565b6001600160401b039460e4358681116102525761070b9036906004016101fc565b9361010435968711610252576103a19761072c6103879836906004016105fb565b9660c43595611237565b9060a0600319830112610252576001600160401b036004358181116102525783610762916004016101fc565b9260243591821161025257610779916004016101fc565b9060443561078681610257565b9060643563ffffffff8116810361025257906084356001600160801b03811681036102525790565b60206108186107e46107bf36610736565b926040959294919551916107d283610156565b60028352888301526040820152611f44565b9161ffff81166000526005865260018060a01b0360406000205416906040519461080d866101a4565b600086528282611156565b6001600160401b0360405191168152f35b600091031261025257565b60005b8381106108475750506000910152565b8181015183820152602001610837565b9060209161087081518092818552858086019101610834565b601f01601f1916010190565b908082519081815260208091019281808460051b8301019501936000915b8483106108aa5750505050505090565b90919293949584806108c8600193601f198682030187528a51610857565b980193019301919493929061089a565b34610252576000366003190112610252576006546108f5816104fc565b9061090360405192836101bf565b80825260209081830160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f836000925b84841061095157604051828152806103a18185018a61087c565b600191829161095f85611db5565b8152019201920191908490610937565b60a03660031901126102525760043561098781610257565b60243590610994826105ea565b604435906109a182610257565b6109a9610283565b906109b26102c2565b906109fe6109ce8261ffff166000526005602052604060002090565b54956109e56109db6101e0565b61ffff9094168452565b6020968784015260408301906001600160401b03169052565b6040516324320c9f60e01b8152927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691908685600481865afa948515610ae85787956001600160801b039563ffffffff94610a8693600093610aed575b50604051638b0301b160e01b8152998a988997889716931691600487016112ec565b039134905af1908115610ae8576103a192600092610abb575b50506040516001600160401b0390911681529081906020820190565b610ada9250803d10610ae1575b610ad281836101bf565b810190610ff9565b3880610a9f565b503d610ac8565b610fed565b610b0e919350893d8b11610b15575b610b0681836101bf565b810190610fd8565b9138610a64565b503d610afc565b34610252576000366003190112610252576020604051308152f35b60c0366003190112610252576004356001600160401b03811161025257610387610b686103a19236906004016101fc565b60243590610b7582610257565b610b7d610270565b90610b86610296565b90608435610b9381610257565b610baf60a43592610ba3846105d9565b604051610336816101a4565b9361ffff8616600052600560205260018060a01b0360406000205416610bd3610fc5565b96611156565b60206108186107e4610bea36610736565b92604095929491955191610bfd83610156565b60038352888301526040820152611f44565b906020610c20928181520190610857565b90565b3461025257600319602036820112610252576004356001600160401b039182821161025257606090823603011261025257604051610c6081610156565b81600401356004811015610252578152602482013583811161025257610c8c90600436918501016101fc565b6020820152604482013592831161025257610cb3610cbd9260046103a195369201016101fc565b6040820152611f44565b60405191829182610c0f565b3461025257604036600319011261025257600435610ce681610257565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031633036102525761ffff166000526005602052602435604060002055600080f35b60a0366003190112610252576001600160401b0360043581811161025257610d5c9036906004016101fc565b9060243591610d6a83610257565b610d72610270565b92610d7b610296565b608435938411610252576103a194610daa610d9d6103879636906004016105fb565b94604051610336816101a4565b9261ffff8116600052600560205260018060a01b0360406000205416918282611156565b34610252576000366003190112610252576103a1610dea611e59565b604051918291602083526020830190610857565b90610c2091602081528151602082015261ffff6020830151166040820152604082015160608201526080610e40606084015160a08385015260c0840190610857565b9201519060a0601f198285030191015261087c565b3461025257600080600319360112610edb576103a19060606080604051610e7b81610176565b8381528360208201528360408201528280820152015260405190610e9e82610176565b54815261ffff6001541660208201526002546040820152610ebd611cf9565b6060820152610eca611ebe565b608082015260405191829182610dfe565b80fd5b60e0366003190112610252576001600160401b0360043581811161025257610f0a9036906004016101fc565b90602435908111610252576103a191610f2a6103879236906004016101fc565b60443591610f3783610257565b610f3f610283565b91610f486102c2565b91610baf60a43591610f5983610257565b60c43593610f66856105d9565b60405191610f7383610156565b6002835260208301526040820152611f44565b60405190610f93826101a4565b60008252565b60041115610fa357565b634e487b7160e01b600052602160045260246000fd5b6004821015610fa35752565b604051610fd1816101a4565b6000815290565b908160209103126102525751610c20816105d9565b6040513d6000823e3d90fd5b908160209103126102525751610c20816105ea565b90815180825260208080930193019160005b82811061102e575050505090565b909192938260608261106460019489516001600160401b036040809261ffff815116855260208101516020860152015116910152565b01950193929101611020565b999893949660c89892916110e1976101409960a08e61ffff80951681526110b1600180841b03998a8099166020840152610160806040850152830190610857565b9a60608201526000608082015201521660c08c01521660e08a01521661010088015286820361012088015261100e565b930152565b9a9994906110e19760c89a94959760a08e6101409c9561ffff8096168252611128600180851b039a8b809a166020850152610160806040860152840190610857565b9b6060830152608082015201521660c08c01521660e08a01521661010088015286820361012088015261100e565b6040516324320c9f60e01b8152602098929791957f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316959294939192908a846004818a5afa918215610ae8578b996001600160801b039963ffffffff986111e997600096611218575b50604051633a2c767d60e01b81529d8e9c8d9b8c9b1694169260048b01611070565b039134905af1918215610ae85760009261120257505090565b610c209250803d10610ae157610ad281836101bf565b6112309196508d803d10610b1557610b0681836101bf565b94386111c7565b6040516324320c9f60e01b8152602099929891967f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031696929591939290918b856004818b5afa928315610ae8578c9a6001600160801b039a63ffffffff996111e9988e6000986112cd575b5050604051633a2c767d60e01b81529e8f9d8e9c8d9c1695169260048c016110e6565b6112e4929850803d10610b1557610b0681836101bf565b95388e6112aa565b93909594919261ffff60c0946113278760e081019a6001600160401b036040809261ffff815116855260208101516020860152015116910152565b166060860152608085015260a08401526001600160a01b0316910152565b1561134c57565b60405162461bcd60e51b815260206004820152601060248201526f2bb937b7339036b9b39739b2b73232b960811b6044820152606490fd5b90600182811c921680156113b4575b602083101461139e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611393565b8181106113c9575050565b600081556001016113be565b90601f82116113e2575050565b6101ed9160036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906020601f840160051c8301931061142c575b601f0160051c01906113be565b909150819061141f565b9190601f811161144557505050565b6101ed926000526020600020906020601f840160051c8301931061142c57601f0160051c01906113be565b9081516001600160401b0381116101715761149581611490600354611384565b6113d5565b602080601f83116001146114d157508192936000926114c6575b50508160011b916000199060031b1c191617600355565b0151905038806114af565b90601f1983169461150460036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90565b926000905b878210611541575050836001959610611528575b505050811b01600355565b015160001960f88460031b161c1916905538808061151d565b80600185968294968601518155019501930190611509565b91909182516001600160401b038111610171576115808161157a8454611384565b84611436565b602080601f83116001146115bc5750819293946000926115b1575b50508160011b916000199060031b1c1916179055565b01519050388061159b565b90601f198316956115d285600052602060002090565b926000905b88821061160f575050836001959697106115f6575b505050811b019055565b015160001960f88460031b161c191690553880806115ec565b806001859682949686015181550195019301906115d7565b634e487b7160e01b600052601160045260246000fd5b9081516000908155602090608061ffff83860151169460019561ffff1987541617865560408101516002556116756060820151611470565b015191825192600160401b8411610171578190600454856004558086106116ec575b5060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91015b8484106116d15750505050509050565b8683826116e083945186611559565b019201930192906116c1565b6004855287867f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b92830192015b828110611727575050611697565b90919293506117368154611384565b80611748575b50019087849392611719565b601f9083828211600114611763575050508581555b3861173c565b6117849261177685600052602060002090565b920160051c820191016113be565b6000818152602081208183555561175d565b604051906117a382610156565b6060604083600081528260208201520152565b634e487b7160e01b600052603260045260246000fd5b60065490600160401b82101561017157600182018060065582101561181b576101ed9160066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f01611559565b6117b6565b97969195600f96610140968a95936110e19761ffff80921688526207a12060a0611866600180831b03988980981660208d015260408c61016091829101528c0190610857565b99600060608201526000608082015201521660c08c01521660e08a01521661010088015286820361012088015261100e565b908160209103126102525751610c2081610257565b9092916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929091611922906118ed338614611345565b6118f56101ef565b90815260209661190b878984019061ffff169052565b60409889830152836060830152608082015261163d565b61192a611796565b50805115611cf15761193b90612062565b92611948858501516117cc565b6002845161195581610f99565b61195e81610f99565b148015611cd4575b611bd5575b506003835161197981610f99565b61198281610f99565b1461198f575b5050505050565b7f00000000000000000000000000000000000000000000000000000000000000001693805190634d4502c960e11b90818352600490868483818b5afa938415610ae857600094611bb6575b508051838152878184818c5afa8015610ae857611a32611a26611a198593611a5795600091611b9f575b5061ffff166000526005602052604060002090565b546001600160a01b031690565b6001600160a01b031690565b970151611a3d610f86565b611a456101e0565b91600083528a83015283820152611f44565b97815184815288818581855afa948515610ae8578991600096611b80575b508484518094819382525afa8015610ae857611a19611a2691611aae93600091611b53575061ffff166000526005602052604060002090565b9681516324320c9f60e01b8152818185818a5afa918215610ae857600092611b36575b5050611adb610fc5565b90863b15610252576000988995611b0594519b8c9a8b998a9863026a476360e51b8a528901611820565b03925af18015610ae857611b1d575b80808080611988565b80611b2a611b3092610191565b80610829565b38611b14565b611b4c9250803d10610b1557610b0681836101bf565b3880611ad1565b611b7391508b3d8d11611b79575b611b6b81836101bf565b810190611898565b38611a04565b503d611b61565b611b98919650823d8411611b7957611b6b81836101bf565b9438611a75565b611b7391508d803d10611b7957611b6b81836101bf565b611bce919450873d8911611b7957611b6b81836101bf565b92386119da565b611bf3611a26611a198361ffff166000526005602052604060002090565b611c1c87860151611c02610f86565b611c0a6101e0565b91600083528983015289820152611f44565b611c3a611a26611a198561ffff166000526005602052604060002090565b88516324320c9f60e01b8152929088846004818a5afa938415610ae857600094611cb5575b50611c68610fc5565b873b1561025257600094611c91928c51978896879663026a476360e51b88528260048901611820565b038134875af18015610ae8571561196b5780611b2a611caf92610191565b3861196b565b611ccd919450893d8b11610b1557610b0681836101bf565b9238611c5f565b5060038451611ce281610f99565b611ceb81610f99565b14611966565b505050505050565b6040519060008260035491611d0d83611384565b80835292600190818116908115611d935750600114611d34575b506101ed925003836101bf565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b848310611d7857506101ed935050810160200138611d27565b81935090816020925483858a01015201910190918592611d5f565b9050602092506101ed94915060ff191682840152151560051b82010138611d27565b9060405191826000825492611dc984611384565b908184526001948581169081600014611e365750600114611df3575b50506101ed925003836101bf565b9093915060005260209081600020936000915b818310611e1e5750506101ed93508201013880611de5565b85548884018501529485019487945091830191611e06565b9150506101ed94506020925060ff191682840152151560051b8201013880611de5565b6006548015611ea557600019810181811161047d5781111561181b577ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3e610c2091600660005201611db5565b50604051611eb2816101a4565b60008152600036813790565b60045490611ecb826104fc565b91611ed960405193846101bf565b8083526004600090815260207f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b8186015b848410611f18575050505050565b6001838192611f2685611db5565b815201920193019290611f0a565b919081101561181b5760061b0190565b80516004811015610fa3576029610c2091602084015193604085519101519081519060405196879460ff60f81b9060f81b16602086015263ffffffff60e01b809260e01b166021860152611fa2815180926020602589019101610834565b84019160e01b166025820152611fc18251809360208785019101610834565b010360098101845201826101bf565b60ff166004811015610fa35790565b906004820180921161047d57565b90601f820180921161047d57565b600501908160051161047d57565b9190820180921161047d57565b1561201d57565b60405162461bcd60e51b815260206004820152601b60248201527f4465636f646564206d65737361676520696e636f72726563746c7900000000006044820152606490fd5b9061206b611796565b9160018151106120ed578061208f61208960016101ed940151611fd0565b85610fb9565b6120e563ffffffff6120b9816120a4856122ad565b166120af81866121a5565b6020890152611ffb565b906120cd6120c783866122f9565b92611fdf565b9116906120db82828661222f565b6040880152612009565b905114612016565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b1561212f57565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1561216c57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b6121b9826121b281611fed565b1015612128565b6121ce81516121c784611ffb565b1115612165565b816121e6575050604051600081526020810160405290565b60405191601f81169160058315811b80858701019484860193010101905b80841061221c5750508252601f01601f191660405290565b9092835181526020809101930190612204565b9161223d816121b281611fed565b61224c83516121c78385612009565b8061226557505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b80841061229a5750508252601f01601f191660405290565b9092835181526020809101930190612282565b60058151106122bd576005015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606490fd5b908151600482019081831161047d57106122bd5701600401519056fea2646970667358221220d5d07ec98e50e72b500d1c79b4491676445dc001eff658fd752df8bbd53eda9a64736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_wormholeCore";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_coreRelayer";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "emitterAddress";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "enum MockRelayerIntegration.Version";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "forwardMessage";
                readonly type: "bytes";
            }];
            readonly internalType: "struct MockRelayerIntegration.Message";
            readonly name: "message";
            readonly type: "tuple";
        }];
        readonly name: "encodeMessage";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encoded";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getDeliveryData";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "sourceAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "sourceChain";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "deliveryHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes[]";
                readonly name: "additionalVaas";
                readonly type: "bytes[]";
            }];
            readonly internalType: "struct DeliveryData";
            readonly name: "deliveryData";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getMessage";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getMessageHistory";
        readonly outputs: readonly [{
            readonly internalType: "bytes[]";
            readonly name: "";
            readonly type: "bytes[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "getRegisteredContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "getRegisteredContractAddress";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "additionalVaas";
            readonly type: "bytes[]";
        }, {
            readonly internalType: "bytes32";
            readonly name: "sourceAddress";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint16";
            readonly name: "sourceChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "receiveWormholeMessages";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes32";
            readonly name: "emitterAddress_";
            readonly type: "bytes32";
        }];
        readonly name: "registerEmitter";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "addr";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct XAddress[]";
            readonly name: "emitters";
            readonly type: "tuple[]";
        }];
        readonly name: "registerEmitters";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "newGasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "newReceiverValue";
            readonly type: "uint128";
        }];
        readonly name: "resend";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "resendSequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }];
        readonly name: "sendMessage";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }];
            readonly internalType: "struct VaaKey[]";
            readonly name: "vaaKeys";
            readonly type: "tuple[]";
        }];
        readonly name: "sendMessageWithAdditionalVaas";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_forwardedMessage";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }];
        readonly name: "sendMessageWithForwardedResponse";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_forwardedMessage";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint16";
            readonly name: "refundChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "refundAddress";
            readonly type: "address";
        }];
        readonly name: "sendMessageWithForwardedResponse";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_forwardedMessage";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }];
        readonly name: "sendMessageWithMultiForwardedResponse";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint16";
            readonly name: "refundChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "refundAddress";
            readonly type: "address";
        }];
        readonly name: "sendMessageWithRefund";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "targetChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "destination";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "gasLimit";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint16";
            readonly name: "refundChain";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "refundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint128";
            readonly name: "receiverValue";
            readonly type: "uint128";
        }, {
            readonly internalType: "uint256";
            readonly name: "paymentForExtraReceiverValue";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint16";
                readonly name: "chainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }];
            readonly internalType: "struct VaaKey[]";
            readonly name: "vaaKeys";
            readonly type: "tuple[]";
        }];
        readonly name: "sendToEvm";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): MockRelayerIntegrationInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockRelayerIntegration;
}
export {};
