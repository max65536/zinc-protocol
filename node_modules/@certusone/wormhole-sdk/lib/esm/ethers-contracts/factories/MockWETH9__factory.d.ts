import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockWETH9, MockWETH9Interface } from "../MockWETH9";
declare type MockWETH9ConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MockWETH9__factory extends ContractFactory {
    constructor(...args: MockWETH9ConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MockWETH9>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MockWETH9;
    connect(signer: Signer): MockWETH9__factory;
    static readonly bytecode = "0x6080604052346100cb57600061001581546100d0565b601f81116100a1575b50601a6c2bb930b83832b21022ba3432b960991b01815560019061004282546100d0565b90601f8211610075575b6008630ae8aa8960e31b0183556002805460ff1916601217905560405161074e908161010b8239f35b82815282601f60208320930160051c8301925b83811061009657505061004c565b828155018390610088565b818052601f60208320910160051c8101905b8181106100c0575061001e565b8281556001016100b3565b600080fd5b90600182811c92168015610100575b60208310146100ea57565b634e487b7160e01b600052602260045260246000fd5b91607f16916100df56fe6080604081815260048036101561002c575b5050503615610024576100226105a2565b005b6100226105a2565b600092833560e01c90816306fdde031461041257508063095ea7b3146103a457806318160ddd1461038957806323b872dd146103575780632e1a7d4d146102c5578063313ce567146102a357806370a082311461026b57806395d89b411461014a578063a9059cbb14610113578063d0e30db0146100f95763dd62ed3e0361001157346100f557816003193601126100f55760209282916100cb61054e565b6100d3610569565b6001600160a01b03918216845291865283832091168252845220549051908152f35b8280fd5b83806003193601126101105761010d6105a2565b80f35b80fd5b50503461014657806003193601126101465760209061013d61013361054e565b60243590336105f8565b90519015158152f35b5080fd5b5091903461014657816003193601126101465780519082600180549081811c90808316928315610261575b602093848410811461024e5783885290811561023257506001146101dd575b505050829003601f01601f191682019267ffffffffffffffff8411838510176101ca57508291826101c6925282610505565b0390f35b634e487b7160e01b815260418552602490fd5b8087529192508591837fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b83851061021e5750505050830101388080610194565b805488860183015293019284908201610208565b60ff1916878501525050151560051b8401019050388080610194565b634e487b7160e01b895260228a52602489fd5b91607f1691610175565b5050346101465760203660031901126101465760209181906001600160a01b0361029361054e565b1681526003845220549051908152f35b50503461014657816003193601126101465760209060ff600254169051908152f35b50346100f55760203660031901126100f55735903383526003602052808320805483811061035357836102f7916105eb565b90558280838015610349575b8280929181923390f11561033e57519081527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6560203392a280f35b51913d9150823e3d90fd5b6108fc9150610303565b8480fd5b5050346101465760603660031901126101465760209061013d61037861054e565b610380610569565b604435916105f8565b50503461014657816003193601126101465751478152602090f35b50346100f557816003193601126100f5576020926103c061054e565b918360243592839233825287528181209460018060a01b0316948582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b84915083346100f557826003193601126100f557828354600181811c908083169283156104fb575b602093848410811461024e578388529081156104df575060011461048a57505050829003601f01601f191682019267ffffffffffffffff8411838510176101ca57508291826101c6925282610505565b8680529192508591837f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8385106104cb5750505050830101858080610194565b8054888601830152930192849082016104b5565b60ff1916878501525050151560051b8401019050858080610194565b91607f169161043a565b6020808252825181830181905290939260005b82811061053a57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610518565b600435906001600160a01b038216820361056457565b600080fd5b602435906001600160a01b038216820361056457565b9190820180921161058c57565b634e487b7160e01b600052601160045260246000fd5b33600052600360205260406000206105bb34825461057f565b90556040513481527fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60203392a2565b9190820391821161058c57565b91909160018060a01b0380911691600093838552602092600384526040918383882054106106f95733861415806106fd575b61068e575b9180917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9594938789526003865282892061066b8682546105eb565b90551696878152600385522061068283825461057f565b905551908152a3600190565b8587526004855282872033885285528383882054106106f9579180917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95949387895260048652828920338a5286528289206106eb8682546105eb565b90559150919293945061062f565b8680fd5b5060048552828720338852855282872054600019141561062a56fea26469706673582212209d419f431dfd816641f708d85fed492078e50059f9c9a1c76805f02dcdd2112464736f6c63430008130033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "src";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "guy";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "Approval";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "dst";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "Deposit";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "src";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "dst";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "Transfer";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "src";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "Withdrawal";
        readonly type: "event";
    }, {
        readonly stateMutability: "payable";
        readonly type: "fallback";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "allowance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "guy";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "approve";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "balanceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "decimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deposit";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "name";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "symbol";
        readonly outputs: readonly [{
            readonly internalType: "string";
            readonly name: "";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "totalSupply";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "dst";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "transfer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "src";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "dst";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "transferFrom";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "wad";
            readonly type: "uint256";
        }];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): MockWETH9Interface;
    static connect(address: string, signerOrProvider: Signer | Provider): MockWETH9;
}
export {};
