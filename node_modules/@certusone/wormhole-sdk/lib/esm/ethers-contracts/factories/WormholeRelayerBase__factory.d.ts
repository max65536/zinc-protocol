import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { WormholeRelayerBase, WormholeRelayerBaseInterface } from "../WormholeRelayerBase";
export declare class WormholeRelayerBase__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint64";
            readonly name: "sequence";
            readonly type: "uint64";
        }, {
            readonly indexed: false;
            readonly internalType: "LocalNative";
            readonly name: "deliveryQuote";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "LocalNative";
            readonly name: "paymentForExtraReceiverValue";
            readonly type: "uint256";
        }];
        readonly name: "SendEvent";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "deliveryAttempted";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "attempted";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "deliveryFailureBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "deliveryHash";
            readonly type: "bytes32";
        }];
        readonly name: "deliverySuccessBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }];
        readonly name: "getRegisteredWormholeRelayerContract";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): WormholeRelayerBaseInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): WormholeRelayerBase;
}
