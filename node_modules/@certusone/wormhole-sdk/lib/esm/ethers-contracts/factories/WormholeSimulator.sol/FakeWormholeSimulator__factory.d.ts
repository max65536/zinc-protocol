import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { FakeWormholeSimulator, FakeWormholeSimulatorInterface } from "../../WormholeSimulator.sol/FakeWormholeSimulator";
declare type FakeWormholeSimulatorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class FakeWormholeSimulator__factory extends ContractFactory {
    constructor(...args: FakeWormholeSimulatorConstructorParams);
    deploy(initWormhole: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<FakeWormholeSimulator>;
    getDeployTransaction(initWormhole: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): FakeWormholeSimulator;
    connect(signer: Signer): FakeWormholeSimulator__factory;
    static readonly bytecode = "0x60803461007457601f61125c38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b0319169190911790556040516111cc90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80630e645295146100975780631e5a28021461009257806323aa2a9d1461008d57806355a58d7d1461008857806364bb9bfb1461008357806384acd1bb1461007e5780638d8e33e4146100795763ce8cef6e1461007457600080fd5b610964565b610855565b6107cf565b6107a2565b6106f3565b6104eb565b610456565b346100c0576100bc6100b06100ab366102f3565b6110c3565b60405191829182610442565b0390f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b608081019081106001600160401b038211176100f657604052565b6100c5565b6001600160401b0381116100f657604052565b606081019081106001600160401b038211176100f657604052565b604081019081106001600160401b038211176100f657604052565b90601f801991011681019081106001600160401b038211176100f657604052565b6040519061016082018281106001600160401b038211176100f657604052565b359060ff821682036100c057565b63ffffffff8116036100c057565b35906101ac82610193565b565b6024359061ffff821682036100c057565b359061ffff821682036100c057565b35906001600160401b03821682036100c057565b81601f820112156100c0578035906001600160401b0382116100f65760405192610216601f8401601f191660200185610144565b828452602083830101116100c057816000926020809301838601378301015290565b6001600160401b0381116100f65760051b60200190565b81601f820112156100c05780359061026682610238565b9260409261027684519586610144565b808552602091828087019260071b850101938185116100c0578301915b8483106102a35750505050505090565b6080838303126100c0578360809187516102bc816100db565b8535815282860135838201526102d3898701610185565b8982015260606102e4818801610185565b90820152815201920191610293565b600319906020818301126100c0576004356001600160401b03928382116100c0576101609082840301126100c057610329610165565b9261033682600401610185565b8452610344602483016101a1565b6020850152610355604483016101a1565b6040850152610366606483016101bf565b60608501526084820135608085015261038160a483016101ce565b60a085015261039260c48301610185565b60c085015260e48201358181116100c0578360046103b2928501016101e2565b60e08501526103c461010483016101a1565b6101008501526101248201359081116100c0576101449260046103e99284010161024f565b610120840152013561014082015290565b60005b83811061040d5750506000910152565b81810151838201526020016103fd565b90602091610436815180928185528580860191016103fa565b601f01601f1916010190565b90602061045392818152019061041d565b90565b346100c057600060203660031901126104e857806004356001600160401b0381116104e5576104899036906004016101e2565b81546001600160a01b031690813b156104e15782916104be91604051948580948193630f2d140160e11b835260048301610442565b03925af180156104dc576104d0575080f35b6104d9906100fb565b80f35b611040565b5050fd5b50fd5b80fd5b346100c057600060203660031901126104e857805481906001600160a01b0316803b156104e55781906024604051809481936323aa2a9d60e01b835260043560048401525af180156104dc576104d0575080f35b604435906001600160a01b03821682036100c057565b35906001600160a01b03821682036100c057565b9190916060818403126100c057604051906105838261010e565b81938135906001600160401b03918281116100c05783019281601f850112156100c0578335936105b285610238565b906105c06040519283610144565b858252602095868084019160051b830101918583116100c05787809101915b83831061061957505050508552838101359283116100c05760409361060a85936106149584016101e2565b9086015201610555565b910152565b82358152918101918891016105df565b602080820190808352835180925260409283810182858560051b84010196019460009081935b86851061066157505050505050505090565b9091929394959697603f198282030185528689516060928584820183519583528551809152846080840196019089905b8082106106d6575050509082916106b560019686809601518482038786015261041d565b9281878060a01b03910151169101529a01950195019396959492919061064f565b82518852968601968d968a94509290920191600190910190610691565b346100c0576020806003193601126100c0576001600160401b03906004358281116100c057366023820112156100c057806004013561073181610238565b9361073f6040519586610144565b818552838501906024809360051b850101933685116100c057838101925b85841061077c576100bc61077089610e8e565b60405191829182610629565b83358381116100c05787916107978392883691870101610569565b81520193019261075d565b346100c0576100bc6107bb6107b6366102f3565b610f95565b60405191829160208352602083019061041d565b346100c05760003660031901126100c0576000546040516001600160a01b039091168152602090f35b90815180825260208080930193019160005b828110610818575050505090565b835180518652808301518684015260408082015160ff9081169188019190915260609182015116908601526080909401939281019260010161080a565b346100c05760203660031901126100c0576004356001600160401b0381116100c05761088861088d913690600401610569565b610ad7565b6040518091602082526108a660208301825160ff169052565b602081015163ffffffff166040830152604081015163ffffffff166060830152606081015161ffff166080830152608081015160a08301526108f860a082015160c08401906001600160401b03169052565b60c081015160ff1660e083015260e08101516101609061095961092861010092848488015261018087019061041d565b91840151610941610120918288019063ffffffff169052565b8401519161014092601f1987830301848801526107f8565b920151908301520390f35b346100c05760603660031901126100c0576004356001600160401b0381116100c0576100b061099a6100bc923690600401610569565b6109a26101ae565b9061ffff6109b76109b161053f565b92610ad7565b600181524263ffffffff166020820152921660608301526001600160a01b031660808201526110c3565b634e487b7160e01b600052603260045260246000fd5b805160011015610a075760400190565b6109e1565b805115610a075760200190565b8051821015610a075760209160051b010190565b634e487b7160e01b600052601160045260246000fd5b90601f8201809211610a5157565b610a2d565b9060018201809211610a5157565b60a001908160a011610a5157565b91908201809211610a5157565b91908203918211610a5157565b15610a9357565b606460405162461bcd60e51b815260206004820152602060248201527f6661696c656420746f20706172736520776f726d686f6c65206d6573736167656044820152fd5b90604051916101608301908382106001600160401b038311176100f6576101ac91604052610bd6610bc46000808752806020880152610ba76040880197828952826060820152610b966080820199848b52610b82602060a0850199878b5260c086019588875260e081019860608a528061010083015260606101208301526101408201529d610b6682516109f7565b5190520198610b758a51610d7e565b6001600160401b03169052565b610b8c8851610d32565b63ffffffff169052565b610ba08651610ce7565b60ff169052565b610bb18451610dca565b90610bbd828651610c5c565b9052610a64565b610bd081845151610a7f565b90610a72565b90515114610a8c565b15610be657565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610c2357565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b610c7082610c6981610a43565b1015610bdf565b610c858151610c7e84610a64565b1115610c1c565b81610c9d575050604051600081526020810160405290565b60405191601f81169160a0831560051b80858701019484860193010101905b808410610cd45750508252601f01601f191660405290565b9092835181526020809101930190610cbc565b6080815110610cf7576080015190565b60405162461bcd60e51b8152602060048201526013602482015272746f55696e74385f6f75744f66426f756e647360681b6044820152606490fd5b6040815110610d42576040015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7433325f6f75744f66426f756e647360601b6044820152606490fd5b6020815110610d8e576020015190565b60405162461bcd60e51b8152602060048201526014602482015273746f55696e7436345f6f75744f66426f756e647360601b6044820152606490fd5b60a0815110610dda5760a0015190565b60405162461bcd60e51b8152602060048201526015602482015274746f55696e743235365f6f75744f66426f756e647360581b6044820152606490fd5b6000198114610a515760010190565b90610e3082610238565b604090610e3f82519182610144565b8381528093610e50601f1991610238565b0191600091825b848110610e65575050505050565b6020908351610e738161010e565b60608082528390818301528686830152828501015201610e57565b906000805b8351811015610efb577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2610ed1610eca8387610a19565b5151610a0c565b5114610ee6575b610ee190610e17565b610e93565b90610ef3610ee191610a56565b919050610ed8565b50610f0890929192610e26565b6000805b8351811015610f8e577f6eb224fb001ed210e379b335e35efe88672a8ce935d981a6896b27ffdf52a3b2610f43610eca8387610a19565b5114610f58575b610f5390610e17565b610f0c565b90610f86610f5391610f6a8487610a19565b51610f758287610a19565b52610f808186610a19565b50610a56565b919050610f4a565b5050905090565b6104536053602083015192604081015190606081015190608081015160a08201519060e060c08401519301519360405198899663ffffffff60e01b809260e01b16602089015260e01b16602487015261ffff60f01b9060f01b166028860152602a8501526001600160401b0360c01b9060c01b16604a84015260ff60f81b9060f81b16605283015261103081518092602086860191016103fa565b8101036033810184520182610144565b6040513d6000823e3d90fd5b908160209103126100c0575161045381610193565b90916048939260ff60f81b9060f81b16825263ffffffff60e01b9060e01b166001820152600160f81b6005820152600060068201526000600782015260006027820152600060478201526110be82518093602086850191016103fa565b010190565b6110cc81610f95565b6110fe815192602093848401206040518581019182528581526110ee81610129565b5190206101408201525160ff1690565b9160048161112261111660005460018060a01b031690565b6001600160a01b031690565b604051631cfe795160e01b815292839182905afa9283156104dc576104539361115b92600091611169575b506040519586948501611061565b03601f198101835282610144565b6111899150843d861161118f575b6111818183610144565b81019061104c565b3861114d565b503d61117756fea2646970667358221220b9f2fea9d083c5e9c4c32156e70b2301fbb5c60548067d3fdffb078c2e46d85664736f6c63430008130033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "contract MockWormhole";
            readonly name: "initWormhole";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm_";
            readonly type: "tuple";
        }];
        readonly name: "encodeAndSignMessage";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signedMessage";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm_";
            readonly type: "tuple";
        }];
        readonly name: "encodeObservation";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "encodedObservation";
            readonly type: "bytes";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log";
            readonly name: "log";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint16";
            readonly name: "emitterChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address";
            readonly name: "emitterAddress";
            readonly type: "address";
        }];
        readonly name: "fetchSignedMessageFromLogs";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "signedMessage";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log[]";
            readonly name: "logs";
            readonly type: "tuple[]";
        }];
        readonly name: "fetchWormholeMessageFromLog";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "invalidateVM";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32[]";
                readonly name: "topics";
                readonly type: "bytes32[]";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "emitter";
                readonly type: "address";
            }];
            readonly internalType: "struct VmSafe.Log";
            readonly name: "log";
            readonly type: "tuple";
        }];
        readonly name: "parseVMFromLogs";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint8";
                readonly name: "version";
                readonly type: "uint8";
            }, {
                readonly internalType: "uint32";
                readonly name: "timestamp";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint32";
                readonly name: "nonce";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint16";
                readonly name: "emitterChainId";
                readonly type: "uint16";
            }, {
                readonly internalType: "bytes32";
                readonly name: "emitterAddress";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "sequence";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint8";
                readonly name: "consistencyLevel";
                readonly type: "uint8";
            }, {
                readonly internalType: "bytes";
                readonly name: "payload";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint32";
                readonly name: "guardianSetIndex";
                readonly type: "uint32";
            }, {
                readonly components: readonly [{
                    readonly internalType: "bytes32";
                    readonly name: "r";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "s";
                    readonly type: "bytes32";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "v";
                    readonly type: "uint8";
                }, {
                    readonly internalType: "uint8";
                    readonly name: "guardianIndex";
                    readonly type: "uint8";
                }];
                readonly internalType: "struct IWormhole.Signature[]";
                readonly name: "signatures";
                readonly type: "tuple[]";
            }, {
                readonly internalType: "bytes32";
                readonly name: "hash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IWormhole.VM";
            readonly name: "vm_";
            readonly type: "tuple";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "newFee";
            readonly type: "uint256";
        }];
        readonly name: "setMessageFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "wormhole";
        readonly outputs: readonly [{
            readonly internalType: "contract MockWormhole";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): FakeWormholeSimulatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): FakeWormholeSimulator;
}
export {};
