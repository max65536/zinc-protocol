import { ethers, BigNumber } from "ethers";
import { ChainName, Network } from "../../utils";
import { VaaKey } from "../structs";
export declare function resendRaw(signer: ethers.Signer, sourceChain: ChainName, targetChain: ChainName, environment: Network, vaaKey: VaaKey, newGasLimit: BigNumber | number, newReceiverValue: BigNumber | number, deliveryProviderAddress: string, overrides?: ethers.PayableOverrides, wormholeRelayerAddress?: string): Promise<ethers.providers.TransactionResponse>;
declare type ResendOptionalParams = {
    wormholeRelayerAddress?: string;
};
export declare function resend(signer: ethers.Signer, sourceChain: ChainName, targetChain: ChainName, environment: Network, vaaKey: VaaKey, newGasLimit: BigNumber | number, newReceiverValue: BigNumber | number, deliveryProviderAddress: string, wormholeRPCs: string[], overrides: ethers.PayableOverrides, extraGrpcOpts?: {}, optionalParams?: ResendOptionalParams): Promise<ethers.providers.TransactionResponse>;
export {};
