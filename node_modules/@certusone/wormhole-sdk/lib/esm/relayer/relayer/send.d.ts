import { ethers, BigNumber } from "ethers";
import { ChainId, ChainName, Network } from "../../utils";
export declare type SendOptionalParams = {
    environment?: Network;
    receiverValue?: ethers.BigNumberish;
    paymentForExtraReceiverValue?: ethers.BigNumberish;
    additionalVaas?: [
        {
            chainId?: ChainId;
            emitterAddress: string;
            sequenceNumber: ethers.BigNumberish;
        }
    ];
    deliveryProviderAddress?: string;
    wormholeRelayerAddress?: string;
    consistencyLevel?: ethers.BigNumberish;
    refundChainId?: ChainId;
    refundAddress?: string;
    relayParameters?: ethers.BytesLike;
};
export declare function sendToEvm(signer: ethers.Signer, sourceChain: ChainName, targetChain: ChainName, targetAddress: string, payload: ethers.BytesLike, gasLimit: BigNumber | number, overrides?: ethers.PayableOverrides, sendOptionalParams?: SendOptionalParams): Promise<ethers.providers.TransactionResponse>;
