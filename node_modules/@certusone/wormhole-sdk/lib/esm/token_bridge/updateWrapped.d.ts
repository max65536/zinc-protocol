import { JsonRpcProvider, TransactionBlock } from "@mysten/sui.js";
import { Overrides, ethers } from "ethers";
import { createWrappedOnAlgorand, createWrappedOnAptos, createWrappedOnNear, createWrappedOnSolana, createWrappedOnTerra, createWrappedOnXpla } from ".";
export declare function updateWrappedOnEth(tokenBridgeAddress: string, signer: ethers.Signer, signedVAA: Uint8Array, overrides?: Overrides & {
    from?: string | Promise<string>;
}): Promise<ethers.ContractReceipt>;
export declare const updateWrappedOnTerra: typeof createWrappedOnTerra;
export declare const updateWrappedOnXpla: typeof createWrappedOnXpla;
export declare const updateWrappedOnSolana: typeof createWrappedOnSolana;
export declare const updateWrappedOnAlgorand: typeof createWrappedOnAlgorand;
export declare const updateWrappedOnNear: typeof createWrappedOnNear;
export declare const updateWrappedOnAptos: typeof createWrappedOnAptos;
export declare function updateWrappedOnSui(provider: JsonRpcProvider, coreBridgeStateObjectId: string, tokenBridgeStateObjectId: string, coinPackageId: string, attestVAA: Uint8Array, coreBridgePackageId?: string, tokenBridgePackageId?: string): Promise<TransactionBlock>;
