import { Coin } from '@injectivelabs/ts-types';
import { MitoApi } from '@injectivelabs/mito-proto-ts';
import { MitoVault, MitoHolders, MitoChanges, MitoTransfer, MitoPortfolio, MitoPagination, MitoLeaderboard, MitoDenomBalance, MitoSubscription, MitoPriceSnapshot, MitoSubaccountBalance, MitoLeaderboardEpoch } from '../types/mito';
import { GrpcCoin } from '../../../types/index';
/**
 * @category Indexer Grpc Transformer
 */
export declare class IndexerGrpcMitoTransformer {
    static grpcCoinToCoin(coin: GrpcCoin): Coin;
    static mitoPaginationToPagination(pagination?: MitoApi.Pagination): MitoPagination | undefined;
    static mitoDenomBalanceToDenomBalance(denomBalance: MitoApi.DenomBalance): MitoDenomBalance;
    static changesResponseToChanges(changes?: MitoApi.Changes): MitoChanges | undefined;
    static mitoSubaccountInfoToSubaccountInfo(mitoSubaccountInfo?: MitoApi.SubaccountBalance): MitoSubaccountBalance | undefined;
    static mitoVaultToVault(vault: MitoApi.Vault): MitoVault;
    static mitoPriceSnapshotToPriceSnapshot(snapshot: MitoApi.PriceSnapshot): MitoPriceSnapshot;
    static vaultResponseToVault(response: MitoApi.GetVaultResponse): MitoVault;
    static vaultsResponseToVaults(response: MitoApi.GetVaultsResponse): {
        vaults: MitoVault[];
        pagination?: MitoPagination;
    };
    static LPTokenPriceChartResponseToLPTokenPriceChart(response: MitoApi.LPTokenPriceChartResponse): MitoPriceSnapshot[];
    static VaultsByHolderAddressResponseToVaultsByHolderAddress(response: MitoApi.VaultsByHolderAddressResponse): MitoSubscription[];
    static LPHoldersResponseToLPHolders(response: MitoApi.LPHoldersResponse): MitoHolders[];
    static PortfolioResponseToPortfolio(portfolio: MitoApi.PortfolioResponse): MitoPortfolio;
    static LeaderboardResponseToLeaderboard(leaderboard: MitoApi.LeaderboardResponse): MitoLeaderboard;
    static mitoTransferHistoryToTransferHistory(transfer: MitoApi.Transfer): MitoTransfer;
    static TransferHistoryResponseToTransfer(response: MitoApi.TransfersHistoryResponse): {
        transfers: MitoTransfer[];
        pagination: MitoPagination | undefined;
    };
    static mitoLeaderboardEpochToLeaderboardEpoch(leaderboardEpoch: MitoApi.LeaderboardEpoch): MitoLeaderboardEpoch;
    static LeaderboardEpochsResponseToLeaderboardEpochs(response: MitoApi.LeaderboardEpochsResponse): {
        epochs: MitoLeaderboardEpoch[];
        pagination: MitoPagination | undefined;
    };
}
//# sourceMappingURL=IndexerGrpcMitoTransformer.d.ts.map