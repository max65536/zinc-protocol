import { CosmosBaseV1Beta1Coin, CosmosGovV1Beta1Tx } from '@injectivelabs/core-proto-ts';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgDeposit {
    interface Params {
        proposalId: number;
        amount: {
            denom: string;
            amount: string;
        };
        depositor: string;
    }
    type Proto = CosmosGovV1Beta1Tx.MsgDeposit;
}
/**
 * @category Messages
 */
export default class MsgDeposit extends MsgBase<MsgDeposit.Params, MsgDeposit.Proto> {
    static fromJSON(params: MsgDeposit.Params): MsgDeposit;
    toProto(): CosmosGovV1Beta1Tx.MsgDeposit;
    toData(): {
        proposalId: string;
        depositor: string;
        amount: CosmosBaseV1Beta1Coin.Coin[];
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            proposal_id: string;
            depositor: string;
            amount: CosmosBaseV1Beta1Coin.Coin[];
        };
    };
    toWeb3(): {
        proposal_id: string;
        depositor: string;
        amount: CosmosBaseV1Beta1Coin.Coin[];
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: CosmosGovV1Beta1Tx.MsgDeposit;
    };
    toBinary(): Uint8Array;
}
//# sourceMappingURL=MsgDeposit.d.ts.map