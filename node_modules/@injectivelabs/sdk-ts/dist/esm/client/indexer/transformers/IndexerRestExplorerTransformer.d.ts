import { Block, ExplorerValidator } from '../types/explorer';
import { BaseTransaction, BlockFromExplorerApiResponse, ContractExplorerApiResponse, ContractTransactionExplorerApiResponse, CW20BalanceExplorerApiResponse, ExplorerBlockWithTxs, ExplorerTransaction, ExplorerValidatorUptime, TransactionFromExplorerApiResponse, ValidatorUptimeFromExplorerApiResponse, WasmCodeExplorerApiResponse } from '../types/explorer-rest';
import { Contract, ContractTransaction, ExplorerCW20BalanceWithToken, WasmCode } from '../types/explorer';
/**
 * @category Indexer Rest Transformer
 */
export declare class IndexerRestExplorerTransformer {
    static blockToBlock(block: BlockFromExplorerApiResponse): Block;
    static blocksToBlocks(blocks: BlockFromExplorerApiResponse[]): Block[];
    static transactionToTransaction(transaction: TransactionFromExplorerApiResponse): ExplorerTransaction;
    static transactionsToTransactions(transactions: TransactionFromExplorerApiResponse[]): ExplorerTransaction[];
    static blockWithTxToBlockWithTx(block: BlockFromExplorerApiResponse): ExplorerBlockWithTxs;
    static blocksWithTxsToBlocksWithTxs(blocks: BlockFromExplorerApiResponse[]): ExplorerBlockWithTxs[];
    static baseTransactionToTransaction(transaction: BaseTransaction): ExplorerTransaction;
    static validatorExplorerToValidator(validators: any[]): Partial<ExplorerValidator>[];
    static validatorUptimeToExplorerValidatorUptime(validatorUptimeList: ValidatorUptimeFromExplorerApiResponse[]): ExplorerValidatorUptime[];
    static contractToExplorerContract(contract: ContractExplorerApiResponse): Contract;
    static contractTransactionToExplorerContractTransaction(transaction: ContractTransactionExplorerApiResponse): ContractTransaction;
    static wasmCodeToExplorerWasmCode(wasmCode: WasmCodeExplorerApiResponse): WasmCode;
    static CW20BalanceToExplorerCW20Balance(balance: CW20BalanceExplorerApiResponse): ExplorerCW20BalanceWithToken;
}
//# sourceMappingURL=IndexerRestExplorerTransformer.d.ts.map